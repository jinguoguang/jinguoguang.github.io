{"meta":{"version":1,"warehouse":"4.0.2"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":0,"renderable":0},{"_id":"source/robots.txt","path":"robots.txt","modified":0,"renderable":0},{"_id":"themes/fluid/source/css/font.css","path":"css/font.css","modified":0,"renderable":1},{"_id":"themes/fluid/source/css/gitalk.css","path":"css/gitalk.css","modified":0,"renderable":1},{"_id":"themes/fluid/source/css/highlight-dark.styl","path":"css/highlight-dark.styl","modified":0,"renderable":1},{"_id":"themes/fluid/source/css/highlight.styl","path":"css/highlight.styl","modified":0,"renderable":1},{"_id":"themes/fluid/source/css/hover-min.css","path":"css/hover-min.css","modified":0,"renderable":1},{"_id":"themes/fluid/source/css/mac.styl","path":"css/mac.styl","modified":0,"renderable":1},{"_id":"themes/fluid/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/fluid/source/img/avatar.jpg","path":"img/avatar.jpg","modified":0,"renderable":1},{"_id":"themes/fluid/source/img/default.png","path":"img/default.png","modified":0,"renderable":1},{"_id":"themes/fluid/source/img/favicon.ico","path":"img/favicon.ico","modified":0,"renderable":1},{"_id":"themes/fluid/source/img/index.jpg","path":"img/index.jpg","modified":0,"renderable":1},{"_id":"themes/fluid/source/img/loading.gif","path":"img/loading.gif","modified":0,"renderable":1},{"_id":"themes/fluid/source/img/police_beian.png","path":"img/police_beian.png","modified":0,"renderable":1},{"_id":"themes/fluid/source/img/wapper.png","path":"img/wapper.png","modified":0,"renderable":1},{"_id":"themes/fluid/source/img/wechat.jpg","path":"img/wechat.jpg","modified":0,"renderable":1},{"_id":"themes/fluid/source/img/zhifubao.jpg","path":"img/zhifubao.jpg","modified":0,"renderable":1},{"_id":"themes/fluid/source/js/boot.js","path":"js/boot.js","modified":0,"renderable":1},{"_id":"themes/fluid/source/js/color-schema.js","path":"js/color-schema.js","modified":0,"renderable":1},{"_id":"themes/fluid/source/js/duration.js","path":"js/duration.js","modified":0,"renderable":1},{"_id":"themes/fluid/source/js/events.js","path":"js/events.js","modified":0,"renderable":1},{"_id":"themes/fluid/source/js/img-lazyload.js","path":"js/img-lazyload.js","modified":0,"renderable":1},{"_id":"themes/fluid/source/js/leancloud.js","path":"js/leancloud.js","modified":0,"renderable":1},{"_id":"themes/fluid/source/js/local-search.js","path":"js/local-search.js","modified":0,"renderable":1},{"_id":"themes/fluid/source/js/plugins.js","path":"js/plugins.js","modified":0,"renderable":1},{"_id":"themes/fluid/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"themes/fluid/source/xml/local-search.xml","path":"xml/local-search.xml","modified":0,"renderable":1}],"Cache":[{"_id":"source/CNAME","hash":"c353f96ba4241a9b4b851c61c71607ebe7d9cfde","modified":1673525510000},{"_id":"source/robots.txt","hash":"e9a5ffa79c05348f50e043ff57ce293d6f483995","modified":1684292040073},{"_id":"source/_posts/00.md","hash":"eba1d031d5e6fcbf1c2781c2a0d81ede83065c95","modified":1684126883663},{"_id":"source/_posts/01.md","hash":"0453d003ccf5b4532477e297923f248e86d18854","modified":1684126883664},{"_id":"source/.DS_Store","hash":"80ea67283b9607df25dd71cbc856fc0dc36dccb3","modified":1683972534195},{"_id":"source/_posts/Docker使用手册.md","hash":"00e8411e72dee33da0c06a9012de11ba7e2d8481","modified":1675437818000},{"_id":"source/_posts/IDEA常用设置及其技巧.md","hash":"66876c60a5079669831608638c77652f83e63e68","modified":1684126883665},{"_id":"source/_posts/个人博客搭建.md","hash":"0608828f824c1307fcaa67df1bdec4ce0c289bb7","modified":1684126883666},{"_id":"source/_posts/Redis学习笔记.md","hash":"81d39a4516706a7b38a68dbe440d98d0da847d4e","modified":1676560282000},{"_id":"source/_posts/vuepress搭建个人博客教程.md","hash":"3e35ed141e669ec6182cf3ecdc7f7f3febd8a4f4","modified":1675429662000},{"_id":"source/_posts/【MySQL学习笔记】-存储引擎.md","hash":"c7e6becb8894d78fe70b4d7c76fe088ae5dc29b6","modified":1678174446000},{"_id":"source/_posts/人生不妨大胆一点.md","hash":"e7656eb4f8371118df4687deb6fbd783d2ecaac3","modified":1675604232000},{"_id":"source/_posts/关于婚姻.md","hash":"def4329ae85273abb884e5832563e711b01fd603","modified":1675231408000},{"_id":"source/_posts/你当善良，且有力量.md","hash":"4118b47a76e0ee220d84e0c79ada3dee18de2759","modified":1676018638000},{"_id":"source/_posts/为什么写博客.md","hash":"82f431fa5a7c137e1956ae768836739b31777d11","modified":1684292040072},{"_id":"source/_posts/围城.md","hash":"ffbdffaa71dc06038cda7067377be737e038f888","modified":1684126883667},{"_id":"source/_posts/小猫的语言.md","hash":"4d3a605a23438a3b1a16b1c387b540f806a9b80f","modified":1684126883668},{"_id":"source/_posts/孤身一人也要生活.md","hash":"587de25c8230f1d8b7bbbb0b111b1a362e1ed667","modified":1675691148000},{"_id":"source/_posts/小王子.md","hash":"cee7a00f9ada594ef19d4b71ba26bc86295223d0","modified":1675182148000},{"_id":"source/_posts/单体项目部署.md","hash":"597b4d36b2d7c200d881982c7d6f98f486a78aa9","modified":1675437876000},{"_id":"source/_posts/关于对新工作的畅想.md","hash":"9476426bb48c863696d0e0ea28d4fad370215b28","modified":1682433899277},{"_id":"source/_posts/我有一只猫.md","hash":"b0e419a61319dbd41f2666f37060f05b8be4af83","modified":1684126883668},{"_id":"source/_posts/开发文档.md","hash":"5810350c20e4e0052aadc1448b966bfc40e80a50","modified":1675947364000},{"_id":"source/_posts/最近有点抑郁.md","hash":"a927a8b37a1761f37a8ff2593e4b12d72e77053d","modified":1684126883670},{"_id":"source/_posts/慢热的人.md","hash":"60814db00b2645a7ae129ae1ba63ffb3d77802b1","modified":1675956450000},{"_id":"source/_posts/疫情防护.md","hash":"11016e236c0500576265bb68ccd6b3b14960c4a1","modified":1675182188000},{"_id":"source/_posts/过自己想要的生活.md","hash":"98c2b65db01778a41d8aafc0f36bff4c3c262577","modified":1684126883671},{"_id":"source/js/mouse.js","hash":"7d577520a2afbe9a02f2f16455b6fd902ce58c75","modified":1675428320000},{"_id":"source/about/index.md","hash":"53dc06c015c72131b02fed26b161df236891a554","modified":1684126883672},{"_id":"source/_posts/运气来得若有似无.md","hash":"023d8e0ddcaf57342593a0a1b5079b8a94c6b133","modified":1675604760000},{"_id":"source/_posts/项塔兰.md","hash":"b6183fa703d02112671c2d77bcbcc727cd1023a7","modified":1684126883671},{"_id":"themes/fluid/source/css/_pages/_tag/tag.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1670937168000},{"_id":"themes/fluid/.editorconfig","hash":"33218fbd623feb43edf5f99f15965392cecc44a6","modified":1670937168000},{"_id":"themes/fluid/.gitattributes","hash":"a54f902957d49356376b59287b894b1a3d7a003f","modified":1670937168000},{"_id":"themes/fluid/.eslintrc","hash":"4bc2b19ce2b8c4d242f97d4ccf2d741e68ab0097","modified":1670937168000},{"_id":"themes/fluid/.gitignore","hash":"ae3bfcb89777657c5dfb5169d91445dcb0e5ab98","modified":1670937168000},{"_id":"themes/fluid/README.md","hash":"6d752df6f2278033dc2512a7d5be22c8a8eb665a","modified":1670937168000},{"_id":"themes/fluid/LICENSE","hash":"26f9356fd6e84b5a88df6d9014378f41b65ba209","modified":1670937168000},{"_id":"themes/fluid/.DS_Store","hash":"9457f542cf2c3f2a50b9ecd64858fc6f50b0d0c4","modified":1683967836989},{"_id":"themes/fluid/package.json","hash":"30e3f4ccfef8474c05cf0b1eb02e91bd0a152807","modified":1670937168000},{"_id":"themes/fluid/languages/de.yml","hash":"0e7d455d9e004ff15d8924b7a0c35cea25ee5b1d","modified":1670937168000},{"_id":"themes/fluid/README_en.md","hash":"8c874f309e346fffa392e174385b5cc08510f218","modified":1670937168000},{"_id":"themes/fluid/languages/en.yml","hash":"cb11b39f44ea069652c9647179606b6cecc98d50","modified":1670937168000},{"_id":"themes/fluid/languages/es.yml","hash":"7112594259c88c04714be152af7fd377687dad40","modified":1670937168000},{"_id":"themes/fluid/languages/eo.yml","hash":"a556251cc50a5680578c03f1efbf252b1f4ab860","modified":1670937168000},{"_id":"themes/fluid/languages/ja.yml","hash":"3dd6d20f8d26585a7c154a8e59fe8d5d902f4c6a","modified":1670937168000},{"_id":"themes/fluid/languages/ru.yml","hash":"7dc78f22696649a4c68dc65a9b52d9a992fa82a0","modified":1670937168000},{"_id":"themes/fluid/languages/zh-HK.yml","hash":"80ed400a7adaa92ea54fc7f5d534c9af795bed00","modified":1670937168000},{"_id":"themes/fluid/_config.yml","hash":"8f9859e0b34f35dbd8e1b5347bf8982f0ab221ce","modified":1684292040074},{"_id":"themes/fluid/languages/zh-TW.yml","hash":"596d031dff3826ae8e4ffc8931fff28977b73247","modified":1670937168000},{"_id":"themes/fluid/layout/404.ejs","hash":"b84d575c7b7f778b4cb64e89ad3d0aed4a896820","modified":1670937168000},{"_id":"themes/fluid/layout/about.ejs","hash":"163bee643e6a38912d3ae70923c83c48d57222e7","modified":1670937168000},{"_id":"themes/fluid/languages/zh-CN.yml","hash":"e7844dde015719bd6de3fa0bb0e47c0b0fa44c5a","modified":1683971950472},{"_id":"themes/fluid/layout/archive.ejs","hash":"7c1f44005849791feae4abaa10fae4cb983d3277","modified":1670937168000},{"_id":"themes/fluid/layout/categories.ejs","hash":"13859726c27b6c79b5876ec174176d0f9c1ee164","modified":1670937168000},{"_id":"themes/fluid/layout/category.ejs","hash":"f099161b738a16a32253f42085b5444f902018ed","modified":1670937168000},{"_id":"themes/fluid/layout/links.ejs","hash":"1cac32ec4579aaf7b9fa39d317497331d4c5e1dd","modified":1670937168000},{"_id":"themes/fluid/layout/index.ejs","hash":"db000a6a0cec19d32a6e7e94cd4c478500d9c5ac","modified":1675689558000},{"_id":"themes/fluid/layout/page.ejs","hash":"ed5007a3feb8f14d3d2843271bfb298eb0c56219","modified":1670937168000},{"_id":"themes/fluid/layout/layout.ejs","hash":"7e0023474128fbe4d68c467704c41f1712432415","modified":1670937168000},{"_id":"themes/fluid/layout/tag.ejs","hash":"9d686364c4d16a1a9219471623af452035c5b966","modified":1670937168000},{"_id":"themes/fluid/layout/tags.ejs","hash":"1d06af34b6cf1d8a20d2eb565e309326ceba309f","modified":1670937168000},{"_id":"themes/fluid/.github/ISSUE_TEMPLATE/bug_report.md","hash":"554c0d0e086a0784d83ee71c83f8bceeb60aecc8","modified":1670937168000},{"_id":"themes/fluid/.github/ISSUE_TEMPLATE/feature_request.md","hash":"c134dd57ffd269b93402ccfffe7dbe0f0b583bec","modified":1670937168000},{"_id":"themes/fluid/.github/ISSUE_TEMPLATE/bug_report_zh.md","hash":"c8b0d49c49e3c88872fd3b37909345ff5b2b6aa0","modified":1670937168000},{"_id":"themes/fluid/.github/ISSUE_TEMPLATE/feature_request_zh.md","hash":"ed08574b196447376dd74411cca664ac9227a5d4","modified":1670937168000},{"_id":"themes/fluid/source/.DS_Store","hash":"8b2c698e9c560c45e97b46034cca68567b9e5086","modified":1683967961807},{"_id":"themes/fluid/layout/post.ejs","hash":"740a587d97d0b00133a571b73c56273003f0a46e","modified":1683939431473},{"_id":"themes/fluid/.github/ISSUE_TEMPLATE/question.md","hash":"ab5eab9e3ff889c4ba7fd82846e7f5b7ae15bebc","modified":1670937168000},{"_id":"themes/fluid/.github/workflows/limit.yaml","hash":"f8bd2edeb4424ee7a055b31583445d5d5dff91a4","modified":1670937168000},{"_id":"themes/fluid/.github/ISSUE_TEMPLATE/question_zh.md","hash":"fff07ce0472afc368d388637cb9d438195da9b5b","modified":1670937168000},{"_id":"themes/fluid/layout/_partials/archive-list.ejs","hash":"7520fbf91f762207c2ab06b2c293235cd5b23905","modified":1670937168000},{"_id":"themes/fluid/.github/workflows/publish.yaml","hash":"6f02e6440d88629229556e3fd47d0280fe2240db","modified":1670937168000},{"_id":"themes/fluid/layout/_partials/category-chains.ejs","hash":"18309584aab83bc4deb20723ebad832149dd2e24","modified":1670937168000},{"_id":"themes/fluid/layout/_partials/category-list.ejs","hash":"f8d2f1907450e61968e6d54443e9be8138196a77","modified":1670937168000},{"_id":"themes/fluid/layout/_partials/head.ejs","hash":"1f39e49b03fa46b2bc24f224e8152d3fa7eb1bcc","modified":1683939431471},{"_id":"themes/fluid/layout/_partials/footer.ejs","hash":"2a1c56db084765b183f7e293bc648a417e3cbc8e","modified":1683894524021},{"_id":"themes/fluid/layout/_partials/comments.ejs","hash":"d707c47b2638c94e489bc43d4cfd098b7c58447f","modified":1670937168000},{"_id":"themes/fluid/layout/_partials/css.ejs","hash":"85f6e051550907681ab4ed2e268ac8f6e9ebf931","modified":1670937168000},{"_id":"themes/fluid/layout/_partials/markdown-plugins.ejs","hash":"fc4bdf7de0cf1a66d0e5e4fba1b31d6f7ed49468","modified":1670937168000},{"_id":"themes/fluid/layout/_partials/reward.ejs","hash":"f015d00a47b1fb35a00b0e1a434470321c4afe2d","modified":1683939431471},{"_id":"themes/fluid/layout/_partials/header.ejs","hash":"0d5e397d30051e5fbabe7b47cfd1f1e6a5820af1","modified":1670937168000},{"_id":"themes/fluid/layout/_partials/scripts.ejs","hash":"da5810785105e5075861593c7ac22c7aa9665a72","modified":1670937168000},{"_id":"themes/fluid/scripts/events/index.js","hash":"79de5a379b28cad759a49048351c7f6b8915bd7d","modified":1670937168000},{"_id":"themes/fluid/scripts/filters/default-injects.js","hash":"b2013ae8e189cd07ebc8a2ff48a78e153345210f","modified":1670937168000},{"_id":"themes/fluid/layout/_partials/search.ejs","hash":"70e1c929e084ca8a2648cedabf29b372511ea2b8","modified":1670937168000},{"_id":"themes/fluid/scripts/filters/locals.js","hash":"58d0fec976f6b1d35e7ea03edc45414088acf05c","modified":1670937168000},{"_id":"themes/fluid/scripts/filters/post-filter.js","hash":"d516b9db63067f9ea9c72cc75ae4ff358417e77d","modified":1670937168000},{"_id":"themes/fluid/scripts/generators/pages.js","hash":"d9971f15fbb6b775e3d31a1b9b45011959395010","modified":1670937168000},{"_id":"themes/fluid/scripts/generators/local-search.js","hash":"fc2c50405b771b06b7f6cfc4e9de97b992691555","modified":1670937168000},{"_id":"themes/fluid/scripts/helpers/date.js","hash":"9bda6382f61b40a20c24af466fe10c8366ebb74c","modified":1670937168000},{"_id":"themes/fluid/scripts/helpers/engine.js","hash":"d3a231d106795ce99cb0bc77eb65f9ae44515933","modified":1670937168000},{"_id":"themes/fluid/scripts/helpers/export-config.js","hash":"47e6dba7652a621a54067413490a11c8a89e3d7b","modified":1670937168000},{"_id":"themes/fluid/scripts/helpers/import.js","hash":"ca53e8dbf7d44cfd372cfa79ac60f35a7d5b0076","modified":1670937168000},{"_id":"themes/fluid/scripts/helpers/injects.js","hash":"1ad2ae6b11bd8806ee7dd6eb7140d8b54a95d613","modified":1670937168000},{"_id":"themes/fluid/scripts/helpers/page.js","hash":"4607607445233b3029ef20ed5e91de0da0a7f9c5","modified":1670937168000},{"_id":"themes/fluid/scripts/helpers/url.js","hash":"2a6a8288176d0e0f6ec008056bf2745a86e8943e","modified":1670937168000},{"_id":"themes/fluid/scripts/helpers/scope.js","hash":"d41d9d658fcb54964b388598e996747aadb85b0f","modified":1670937168000},{"_id":"themes/fluid/scripts/helpers/utils.js","hash":"226f99b465ff513de075a8e78b321d6cb62592ca","modified":1670937168000},{"_id":"themes/fluid/scripts/helpers/wordcount.js","hash":"4543b8954c5c2ca91191cc0d53cf071b3f26faaa","modified":1670937168000},{"_id":"themes/fluid/scripts/tags/button.js","hash":"3eb43a8cdea0a64576ad6b31b4df6c2bf5698d4c","modified":1670937168000},{"_id":"themes/fluid/scripts/tags/checkbox.js","hash":"4938610c3543a921a341bc074626d511cb1a4b45","modified":1670937168000},{"_id":"themes/fluid/scripts/tags/group-image.js","hash":"4aeebb797026f1df25646a5d69f7fde79b1bcd26","modified":1670937168000},{"_id":"themes/fluid/scripts/tags/label.js","hash":"f05a6d32cca79535b22907dc03edb9d3fa2d8176","modified":1670937168000},{"_id":"themes/fluid/scripts/tags/mermaid.js","hash":"75160561e1ef3603b6d2ad2938464ab1cb77fd38","modified":1670937168000},{"_id":"themes/fluid/scripts/tags/note.js","hash":"f52f3a005b41f48b4da274ac64710177c8d4502f","modified":1670937168000},{"_id":"themes/fluid/scripts/utils/compare-versions.js","hash":"dbbc928c914fc2bd242cd66aa0c45971aec13a5d","modified":1670937168000},{"_id":"themes/fluid/scripts/utils/object.js","hash":"33b57e4decdc5e75c518859f168c8ba80b2c665b","modified":1670937168000},{"_id":"themes/fluid/scripts/utils/resolve.js","hash":"8c4a8b62aa8608f12f1e9046231dff04859dc3e9","modified":1670937168000},{"_id":"themes/fluid/scripts/utils/url-join.js","hash":"718aab5e7b2059a06b093ca738de420d9afa44ba","modified":1670937168000},{"_id":"themes/fluid/layout/_partials/paginator.ejs","hash":"0f38a2c238169edcb63fc46c23bfc529ff3859b7","modified":1670937168000},{"_id":"themes/fluid/source/css/font.css","hash":"08522b0bf5fc4f58fd077549841a7f9192906641","modified":1684330498585},{"_id":"themes/fluid/source/css/highlight-dark.styl","hash":"45695ef75c31a4aa57324dd408b7e2327a337018","modified":1670937168000},{"_id":"themes/fluid/source/css/gitalk.css","hash":"a57b3cc8e04a0a4a27aefa07facf5b5e7bca0e76","modified":1670937168000},{"_id":"themes/fluid/source/css/highlight.styl","hash":"a9efc52a646a9e585439c768557e3e3c9e3326dc","modified":1670937168000},{"_id":"themes/fluid/source/css/mac.styl","hash":"cd35967b51908ab12b84b878f6830453ec695b77","modified":1675608148000},{"_id":"themes/fluid/source/css/main.styl","hash":"6fe1f424cab9d50829b7856649bdbe7438f04bab","modified":1683939431476},{"_id":"themes/fluid/source/img/.DS_Store","hash":"6bdfb52479ff12d4650e4dccf965945c2b01b72e","modified":1683968376428},{"_id":"themes/fluid/source/img/favicon.ico","hash":"0f20298a6a4d1ebd7a7ae7b87d7a3ae9afec0623","modified":1673684540000},{"_id":"themes/fluid/source/img/police_beian.png","hash":"90efded6baa2dde599a9d6b1387973e8e64923ea","modified":1670937168000},{"_id":"themes/fluid/source/img/loading.gif","hash":"2d2fc0f947940f98c21afafef39ecf226a2e8d55","modified":1670937168000},{"_id":"themes/fluid/source/img/wechat.jpg","hash":"764825d8810ab0141707db60d911d329f367d08b","modified":1683967592359},{"_id":"themes/fluid/source/js/boot.js","hash":"38bd26c6b7acdafda86dda3560e6a3ca488d3c76","modified":1670937168000},{"_id":"themes/fluid/source/js/color-schema.js","hash":"76a198f8721352ebeaf5b2ef2f4db00612da4796","modified":1670937168000},{"_id":"themes/fluid/source/js/duration.js","hash":"7415ee8547e78dcfaa2d1012510ec571bcfe3529","modified":1675645738000},{"_id":"themes/fluid/source/js/events.js","hash":"89e3561488a618ed0caeb9edf18e441978e29c25","modified":1670937168000},{"_id":"themes/fluid/source/js/img-lazyload.js","hash":"cbdeca434ec4da51f488c821d51b4d23c73294af","modified":1670937168000},{"_id":"themes/fluid/source/js/leancloud.js","hash":"eff77c7a5c399fcaefda48884980571e15243fc9","modified":1670937168000},{"_id":"themes/fluid/source/js/local-search.js","hash":"cebcda5991b6a9ab9307c69542389ce9013f04f7","modified":1670937168000},{"_id":"themes/fluid/layout/_partials/comments/changyan.ejs","hash":"c9b2d68ed3d375f1953e7007307d2a3f75ed6249","modified":1670937168000},{"_id":"themes/fluid/layout/_partials/comments/disqus.ejs","hash":"aab4a4d24c55231a37db308ae94414319cecdd9b","modified":1670937168000},{"_id":"themes/fluid/source/js/plugins.js","hash":"c34916291e392a774ff3e85c55badb83e8661297","modified":1670937168000},{"_id":"themes/fluid/source/js/utils.js","hash":"45cc86f099db0a2c36ad49711ce66c2d598a2ab1","modified":1670937168000},{"_id":"themes/fluid/layout/_partials/comments/cusdis.ejs","hash":"5f9dc012be27040bbe874d0c093c0d53958cc987","modified":1670937168000},{"_id":"themes/fluid/layout/_partials/comments/giscus.ejs","hash":"95f8b866b158eff9352c381c243b332a155a5110","modified":1670937168000},{"_id":"themes/fluid/source/xml/local-search.xml","hash":"8c96ba6a064705602ce28d096fd7dd9069630a55","modified":1670937168000},{"_id":"themes/fluid/layout/_partials/comments/remark42.ejs","hash":"d4e9532feeb02aed61bd15eda536b5b631454dac","modified":1670937168000},{"_id":"themes/fluid/layout/_partials/comments/twikoo.ejs","hash":"e6820fb7f13662c42f8433ec95404238f4c1860c","modified":1670937168000},{"_id":"themes/fluid/layout/_partials/comments/utterances.ejs","hash":"c7ccf7f28308334a6da6f5425b141a24b5eca0e2","modified":1670937168000},{"_id":"themes/fluid/layout/_partials/comments/valine.ejs","hash":"19ba937553dddd317f827d682661a1066a7b1f30","modified":1670937168000},{"_id":"themes/fluid/layout/_partials/comments/waline.ejs","hash":"12727da7cf3ac83443270f550be4d1c06135b52b","modified":1670937168000},{"_id":"themes/fluid/layout/_partials/comments/gitalk.ejs","hash":"843bc141a4545eb20d1c92fb63c85d459b4271ec","modified":1670937168000},{"_id":"themes/fluid/layout/_partials/comments/livere.ejs","hash":"2264758fed57542a7389c7aa9f00f1aefa17eb87","modified":1670937168000},{"_id":"themes/fluid/layout/_partials/footer/beian.ejs","hash":"4fb9b5dd3f3e41a586d6af44e5069afe7c81fff2","modified":1670937168000},{"_id":"themes/fluid/layout/_partials/footer/statistics.ejs","hash":"454d8dd4c39f9494ebeb03ca0746f5bc122af76a","modified":1670937168000},{"_id":"themes/fluid/layout/_partials/header/banner.ejs","hash":"e07757b59e7b89eea213d0e595cb5932f812fd32","modified":1670937168000},{"_id":"themes/fluid/layout/_partials/header/navigation.ejs","hash":"870db75e4e403a840c4463dfeed2c9114846e7cc","modified":1670937168000},{"_id":"themes/fluid/layout/_partials/plugins/analytics.ejs","hash":"1327395a4dde1ea06c476b047fb110bcd269149f","modified":1670937168000},{"_id":"themes/fluid/layout/_partials/plugins/anchorjs.ejs","hash":"40181442d3a2b8734783a0ad7caf2d2522e3f2ab","modified":1670937168000},{"_id":"themes/fluid/layout/_partials/plugins/code-widget.ejs","hash":"3a505cba37942badf62a56bbb8b605b72af330aa","modified":1670937168000},{"_id":"themes/fluid/layout/_partials/plugins/encrypt.ejs","hash":"e3713fa78e0fc14a239360b020068d8513573ae4","modified":1670937168000},{"_id":"themes/fluid/layout/_partials/plugins/fancybox.ejs","hash":"9d1ea2a46b8c8ad8c168594d578f40764818ef13","modified":1670937168000},{"_id":"themes/fluid/layout/_partials/plugins/highlight.ejs","hash":"7529dd215b09d3557804333942377b9e20fa554e","modified":1670937168000},{"_id":"themes/fluid/layout/_partials/plugins/math.ejs","hash":"dcbf9a381ee76f2f1f75fcbc22c50a502ec85023","modified":1670937168000},{"_id":"themes/fluid/layout/_partials/footer/running-time.ejs","hash":"a4aa20ba71e397d295c8e26a10c8f869ff2c8e47","modified":1684150312970},{"_id":"themes/fluid/layout/_partials/plugins/mermaid.ejs","hash":"e49506e9895e255e0e53f34a11d325f83109c1b0","modified":1670937168000},{"_id":"themes/fluid/layout/_partials/plugins/nprogress.ejs","hash":"4c2d39ce816b8a6dcd6b53113c8695f8bd650a23","modified":1670937168000},{"_id":"themes/fluid/layout/_partials/post/copyright.ejs","hash":"9d13392cea94b66d86422ad17c66e5ae67ce1d32","modified":1670937168000},{"_id":"themes/fluid/layout/_partials/post/category-bar.ejs","hash":"8772bce97ed297e7a88523f4e939ed6436c22f87","modified":1670937168000},{"_id":"themes/fluid/layout/_partials/post/meta-bottom.ejs","hash":"7079b27a7bc15a7dfa9209f6be6051bdec49ebad","modified":1670937168000},{"_id":"themes/fluid/layout/_partials/post/meta-top.ejs","hash":"ce6e9f578f4faa45840abddf8f46af3f4b69c177","modified":1670937168000},{"_id":"themes/fluid/layout/_partials/post/sidebar-left.ejs","hash":"9992c99b3eb728ad195970e1b84d665f2c8691c4","modified":1670937168000},{"_id":"themes/fluid/scripts/events/lib/compatible-configs.js","hash":"ef474d1fa5bbafc52619ced0f9dc7eaf2affb363","modified":1670937168000},{"_id":"themes/fluid/layout/_partials/post/sidebar-right.ejs","hash":"d5fcc9b60e02f869a29a8c17a16a6028ecc1e6d8","modified":1670937168000},{"_id":"themes/fluid/scripts/events/lib/footnote.js","hash":"2ec2ae03c79bb1ae7ac3fcf7e00fb52d1af2898d","modified":1670937168000},{"_id":"themes/fluid/scripts/events/lib/hello.js","hash":"44c5eb97b98813a07c659d6afedd17fad63b1821","modified":1670937168000},{"_id":"themes/fluid/scripts/events/lib/highlight.js","hash":"0f02df2244e275595e72163498d42f42bcf0de5e","modified":1670937168000},{"_id":"themes/fluid/scripts/events/lib/injects.js","hash":"5ae4b07204683e54b5a1b74e931702bbce2ac23e","modified":1670937168000},{"_id":"themes/fluid/scripts/events/lib/lazyload.js","hash":"9ba0d4bc224e22af8a5a48d6ff13e5a0fcfee2a4","modified":1670937168000},{"_id":"themes/fluid/scripts/events/lib/merge-configs.js","hash":"7c944c43b2ece5dd84859bd9d1fe955d13427387","modified":1670937168000},{"_id":"themes/fluid/layout/_partials/post/toc.ejs","hash":"635a89060fbf72eeda066fc4bd0a97462f069417","modified":1670937168000},{"_id":"themes/fluid/source/css/_pages/pages.styl","hash":"b8e887bc7fb3b765a1f8ec9448eff8603a41984f","modified":1670937168000},{"_id":"themes/fluid/layout/_partials/plugins/typed.ejs","hash":"51faef29f8e464bcb2e73049b428b88c8dd8b40a","modified":1670937168000},{"_id":"themes/fluid/source/css/_partial/reward.styl","hash":"1f53ace35653bb91284e209a8a98ee3ed5255bb0","modified":1683939431474},{"_id":"themes/fluid/source/css/_variables/base.styl","hash":"4ed5f0ae105ef4c7dd92eaf652ceda176c38e502","modified":1670937168000},{"_id":"themes/fluid/source/css/_functions/base.styl","hash":"2e46f3f4e2c9fe34c1ff1c598738fc7349ae8188","modified":1670937168000},{"_id":"themes/fluid/source/css/_pages/_about/about.styl","hash":"97fe42516ea531fdad771489b68aa8b2a7f6ae46","modified":1670937168000},{"_id":"themes/fluid/source/css/_mixins/base.styl","hash":"542e306ee9494e8a78e44d6d7d409605d94caeb3","modified":1670937168000},{"_id":"themes/fluid/source/css/_partial/index.styl","hash":"9aaf2990c362b9c132d1731d5974654f57d57500","modified":1683939431474},{"_id":"themes/fluid/source/css/_pages/_archive/archive.styl","hash":"c475e6681546d30350eaed11f23081ecae80c375","modified":1670937168000},{"_id":"themes/fluid/source/css/_pages/_base/base.styl","hash":"643284c567665f96915f0b64e59934dda315f74d","modified":1670937168000},{"_id":"themes/fluid/source/css/_pages/_base/keyframes.styl","hash":"94065ea50f5bef7566d184f2422f6ac20866ba22","modified":1670937168000},{"_id":"themes/fluid/source/css/_pages/_base/inline.styl","hash":"411a3fa3f924a87e00ff04d18b5c83283b049a4d","modified":1670937168000},{"_id":"themes/fluid/source/css/_pages/_base/color-schema.styl","hash":"61279540c2623ea4bf93e40613d41380839b92d3","modified":1670937168000},{"_id":"themes/fluid/source/css/_pages/_category/category-bar.styl","hash":"cc6df43fef6bb3efecbfdd8b9e467424a1dea581","modified":1670937168000},{"_id":"themes/fluid/source/css/_pages/_category/category-chain.styl","hash":"0cdf7ef50dfd0669d3b257821384ff31cd81b7c9","modified":1670937168000},{"_id":"themes/fluid/source/css/_pages/_index/index.styl","hash":"0acbd71633bcc7191672ea4e1b2277bea350d73b","modified":1670937168000},{"_id":"themes/fluid/source/css/_pages/_links/links.styl","hash":"5c7f2044e3f1da05a3229537c06bd879836f8d6e","modified":1670937168000},{"_id":"themes/fluid/source/css/_pages/_category/category-list.styl","hash":"7edfe1b571ecca7d08f5f4dbcf76f4ffdcfbf0b5","modified":1670937168000},{"_id":"themes/fluid/source/css/_pages/_post/comment.styl","hash":"780f3788e7357bcd3f3262d781cb91bb53976a93","modified":1670937168000},{"_id":"themes/fluid/source/css/_pages/_post/post-tag.styl","hash":"27f70062415ccf66a9b6f4952db124fc1471fda5","modified":1670937168000},{"_id":"themes/fluid/source/css/_pages/_tag/tags.styl","hash":"65bfc01c76abc927fa1a23bf2422892b0d566c3f","modified":1670937168000},{"_id":"themes/fluid/source/css/_pages/_post/highlight.styl","hash":"4df764d298fe556e501db4afc2b05686fe6ebcfb","modified":1670937168000},{"_id":"themes/fluid/source/css/_pages/_post/post-page.styl","hash":"127bb5391370afe7fef2a297084d76406bc5e902","modified":1670937168000},{"_id":"themes/fluid/source/css/_pages/_post/markdown.styl","hash":"45912620c8c936018993e219423fd6d36825f6b2","modified":1675607302000},{"_id":"themes/fluid/source/css/_pages/_base/_widget/board.styl","hash":"4397037fc3f0033dbe546c33cd9dbdabd8cb1632","modified":1670937168000},{"_id":"themes/fluid/source/css/_pages/_base/_widget/copyright.styl","hash":"26f71a9cd60d96bb0cb5bbdf58150b8e524d9707","modified":1670937168000},{"_id":"themes/fluid/source/css/_pages/_base/_widget/code-widget.styl","hash":"b66ab013f0f37d724a149b85b3c7432afcf460ad","modified":1670937168000},{"_id":"themes/fluid/source/css/_pages/_base/_widget/footer.styl","hash":"2caaca71dd1ff63d583099ed817677dd267b457e","modified":1670937168000},{"_id":"themes/fluid/source/css/_pages/_base/_widget/footnote.styl","hash":"ae9289cc89649af2042907f8a003303b987f3404","modified":1670937168000},{"_id":"themes/fluid/source/css/_pages/_base/_widget/modal.styl","hash":"adf6c1e5c8e1fb41c77ce6e2258001df61245aa2","modified":1670937168000},{"_id":"themes/fluid/source/css/_pages/_base/_widget/header.styl","hash":"c4459248c66ea1326feed021179b847ae91d465f","modified":1670937168000},{"_id":"themes/fluid/source/css/_pages/_base/_widget/noscript.styl","hash":"0cf2f2bb44f456150d428016675d5876a9d2e2aa","modified":1670937168000},{"_id":"themes/fluid/source/css/_pages/_base/_widget/qrcode.styl","hash":"78704a94c0436097abfb0e0a57abeb3429c749b7","modified":1670937168000},{"_id":"themes/fluid/source/css/_pages/_base/_widget/ngrogress.styl","hash":"5d225357b4a58d46118e6616377168336ed44cb2","modified":1670937168000},{"_id":"themes/fluid/source/css/_pages/_base/_widget/pagination.styl","hash":"8bb1b68e5f3552cb48c2ffa31edbc53646a8fb4c","modified":1670937168000},{"_id":"themes/fluid/source/css/_pages/_base/_widget/scroll-btn.styl","hash":"f0e429a27fa8a7658fcbddbb4d4dbe4afa12499a","modified":1670937168000},{"_id":"themes/fluid/source/css/_pages/_base/_widget/search.styl","hash":"10f7e91a91e681fb9fe46f9df7707b9ef78707c8","modified":1670937168000},{"_id":"themes/fluid/source/css/_pages/_base/_widget/toc.styl","hash":"9e7452aa2372153f25d7a4675c9d36d281a65d24","modified":1670937168000},{"_id":"themes/fluid/source/css/_pages/_base/_widget/banner.styl","hash":"7a0bd629bc234fc75e3cc8e3715ffada92f09e73","modified":1670937168000},{"_id":"themes/fluid/source/css/_pages/_base/_widget/anchorjs.styl","hash":"e0cebda4a6f499aff75e71417d88caa7ceb13b94","modified":1670937168000},{"_id":"themes/fluid/source/css/hover-min.css","hash":"1f4bc4ea5c280952b7693e2850621a9ec221ff81","modified":1683939431475},{"_id":"themes/fluid/source/img/zhifubao.jpg","hash":"cd9bee6ad1e66445eff8717e4e149ff7d528c9d8","modified":1683967599614},{"_id":"themes/fluid/source/img/avatar.jpg","hash":"6e17eac3132575a3d5fad149e4ab288b677da180","modified":1675231690000},{"_id":"themes/fluid/source/img/default.png","hash":"167a12978d80371cf578c8a2e45c24a2eb25b6fb","modified":1670937168000},{"_id":"themes/fluid/source/img/index.jpg","hash":"8c5fd9c5d5c8e841c8e0c76c583c79e93fd6b7b6","modified":1675176540000},{"_id":"themes/fluid/source/img/wapper.png","hash":"b5acc1710efb0d249f0da6f3465c41d7a9f7a206","modified":1676019744000},{"_id":"public/js/mouse.js","hash":"7d577520a2afbe9a02f2f16455b6fd902ce58c75","modified":1684327812735},{"_id":"public/baidu_urls.txt","hash":"539752808e93a28148a83435d67e6f2ca165071f","modified":1684327812735},{"_id":"public/baidusitemap.xml","hash":"daafcecf6084a36041ca4f3aa57ed48ddd1e5a5c","modified":1684327812735},{"_id":"public/atom.xml","hash":"c1d10e16716622010da0421334ce153ab447578b","modified":1684327812735},{"_id":"public/sitemap.xml","hash":"ae9eacdadc1ddbdfb711a4a57569da487a3a152a","modified":1684327812735},{"_id":"public/local-search.xml","hash":"b5300a374387c796d2e92b2ca6e5a3efd640f208","modified":1684327812735},{"_id":"public/archives/index.html","hash":"8b742d15745ce5bc36c3846c71561ae91d348938","modified":1684327812735},{"_id":"public/archives/page/2/index.html","hash":"e8d56c1e09b7610789d0bc0208b2b3552d40d608","modified":1684327812735},{"_id":"public/archives/page/3/index.html","hash":"c54c9d0c7499ab9c64d15a91023ec521970aba45","modified":1684327812735},{"_id":"public/archives/2020/index.html","hash":"8acf16a41b3ff04a321ba090ee10b9b0bf5f0afe","modified":1684327812735},{"_id":"public/archives/2020/07/index.html","hash":"5d6cee9e5dedda57804ea78b699d1036dfd326f2","modified":1684327812735},{"_id":"public/archives/2020/08/index.html","hash":"ac09381deb8b958bce4aeaa3ed332c72c9b8fe46","modified":1684327812735},{"_id":"public/archives/2021/index.html","hash":"ac97eb51086ecf6cd0e59de41f6001c610fc4557","modified":1684327812735},{"_id":"public/archives/2021/01/index.html","hash":"5e19a46af0d809a567bd3ad4d37f9f8eb55a7ab7","modified":1684327812735},{"_id":"public/archives/2021/05/index.html","hash":"195f669b08cf3d580c80d36491817294f831a77f","modified":1684327812735},{"_id":"public/archives/2022/index.html","hash":"8f64172263425b7684490b9860f70160d5b8246d","modified":1684327812735},{"_id":"public/archives/2022/02/index.html","hash":"803e236411b0778dba6bc489c43218ed93112b49","modified":1684327812735},{"_id":"public/archives/2022/08/index.html","hash":"f3124cdd441ccd1bcd5441f623f7f4e6487db98c","modified":1684327812735},{"_id":"public/archives/2022/09/index.html","hash":"d9a1d938dbc1bf4e9b145983700d03d6ac09200e","modified":1684327812735},{"_id":"public/archives/2023/index.html","hash":"4216f2622ae3be600c9355815c30e9b23738e523","modified":1684327812735},{"_id":"public/archives/2023/page/2/index.html","hash":"6fc3dfcfeba9fb3d3c048f265c235c8333b07194","modified":1684327812735},{"_id":"public/archives/2023/01/index.html","hash":"ec3540bcabc5305245ed558db76ce49264b0d34a","modified":1684327812735},{"_id":"public/archives/2023/02/index.html","hash":"f86d2404ed682627eab679aa4e9e098672bb2500","modified":1684327812735},{"_id":"public/archives/2023/04/index.html","hash":"91aacd461fe1da90003a8b11dc3507f1687c7bf6","modified":1684327812735},{"_id":"public/archives/2023/05/index.html","hash":"6bf8988771329d2e3a7755e29aaef7532d16771b","modified":1684327812735},{"_id":"public/categories/运维/index.html","hash":"713596ae67912c709351e7376546810cbb351a77","modified":1684327812735},{"_id":"public/categories/生产工具/index.html","hash":"56fce51142797bf115dbe539086a53da947bf4ac","modified":1684327812735},{"_id":"public/categories/笔记/index.html","hash":"9eb61576885253dec686210d3cc739ac6fc8ba67","modified":1684327812735},{"_id":"public/categories/教程/index.html","hash":"af5995887608d51dbd5426c3ef001506668e160b","modified":1684327812735},{"_id":"public/categories/杂谈/index.html","hash":"4039be7926665319124bb5469b0276e86cdb39b2","modified":1684327812735},{"_id":"public/categories/随笔/index.html","hash":"f854af42d3f734222487169fe2c505861e42f92b","modified":1684327812735},{"_id":"public/tags/随笔/index.html","hash":"b89b0e6ddf6770a3208b3506dbaa97fc22c5472c","modified":1684327812735},{"_id":"public/tags/教程/index.html","hash":"949ab28bb7d638cccd25fd45d1a5376133203a76","modified":1684327812735},{"_id":"public/tags/Docker/index.html","hash":"0e6130fb78e5c811eba135ab515c997d69c4d0dc","modified":1684327812735},{"_id":"public/tags/运维/index.html","hash":"789fe4c794f7bc738c3e3d86199d368d778eea9d","modified":1684327812735},{"_id":"public/tags/开发工具/index.html","hash":"99db20e4ca97a4ada535f653dfb0774f97cbd2a7","modified":1684327812735},{"_id":"public/tags/Redis/index.html","hash":"d96cdc639da5d7849eef9215604d2c45dd1749ea","modified":1684327812735},{"_id":"public/tags/博客/index.html","hash":"108619eda4331141db5cdfe3eb4791e2afee3543","modified":1684327812735},{"_id":"public/tags/vuepress/index.html","hash":"0bc3aaff063663f27a7e21220586383920e7ef8f","modified":1684327812735},{"_id":"public/tags/MySQL/index.html","hash":"f2d663e2d45d18186ec437ccc2f83f2da4e9ca22","modified":1684327812735},{"_id":"public/tags/存储引擎/index.html","hash":"22c4f2d25c0ccb5b84121802a7c0d37e3fd0359d","modified":1684327812735},{"_id":"public/tags/杂谈/index.html","hash":"0d38a01219224f88aaa9d5199ee6212e79d38497","modified":1684327812735},{"_id":"public/tags/Hexo/index.html","hash":"9f28529023dd3775a88e522d4cf15fec0280b4fa","modified":1684327812735},{"_id":"public/tags/Fluid/index.html","hash":"ec2a4d7dc382f67bdbe1afc162916ab981575f0a","modified":1684327812735},{"_id":"public/tags/猫咪/index.html","hash":"71583281256e32feea0cfac8ff3ea0871cbefd1c","modified":1684327812735},{"_id":"public/tags/小说，读书笔记/index.html","hash":"96d64a35387ba9c5768dddc28123782ba93858d8","modified":1684327812735},{"_id":"public/404.html","hash":"8cf44fd8980783c911ebee03c2eff8b380573803","modified":1684327812735},{"_id":"public/tags/index.html","hash":"14f9858b0bc186bd2f71bb0c65128512ece4fa99","modified":1684327812735},{"_id":"public/links/index.html","hash":"15d140d21661186a4b6bc982cf107554dc312578","modified":1684327812735},{"_id":"public/about/index.html","hash":"1df96cdc017cc72d293a818ad4093b2221b6cd94","modified":1684327812735},{"_id":"public/king/274c9a8f.html","hash":"359f092e4a13be2f3a82a2b9e1ff0d015f0f151a","modified":1684327812735},{"_id":"public/king/50a4010a.html","hash":"5893ca625027d01f3f9bfa871e0b7b8957bea6fa","modified":1684327812735},{"_id":"public/king/4f2f0829.html","hash":"9ec2534c561f10fd6b1a8a50aad8a205f8603087","modified":1684327812735},{"_id":"public/king/295de697.html","hash":"3f904fac6e9a00b31e716a95a334b12d6915f9f1","modified":1684327812735},{"_id":"public/king/9639fcc6.html","hash":"cf2983f479272328a5ffec4ff65dd47e6a3c79a2","modified":1684327812735},{"_id":"public/king/7bc1b8ad.html","hash":"02e823a665c190ed17622f79e4d3ae1b331a4334","modified":1684327812735},{"_id":"public/king/64615890.html","hash":"ef46e33a2e93cf98b07e4b0c27ad69910ed4ce51","modified":1684327812735},{"_id":"public/king/7b25d017.html","hash":"574b8d09a809547421d7b4ec19620bc47becfaa9","modified":1684327812735},{"_id":"public/king/7abe641c.html","hash":"1bc10848a3bae5d2aaf5fbbdfdcf8ed37e188f5d","modified":1684327812735},{"_id":"public/king/824ac3d0.html","hash":"da242219f90b14bdb7eb453ca48efcef5f3796d7","modified":1684327812735},{"_id":"public/king/8a3eb0f1.html","hash":"cf74cf2b1b5beb72118645c570251bdbf0f6f44b","modified":1684327812735},{"_id":"public/king/cef82103.html","hash":"e960c212d257ddacd743db20456b4f78e8f17624","modified":1684327812735},{"_id":"public/king/fc9ca707.html","hash":"dc58ee4354db3fb1420e5379836e00d19d5191c3","modified":1684327812735},{"_id":"public/king/cbceb420.html","hash":"459ac49d49fa2c23af3c7de80e7b318432fc9dc9","modified":1684327812735},{"_id":"public/king/4540cbee.html","hash":"c94261d071a2bcafd8d11bfd1d975ade3b8847ae","modified":1684327812735},{"_id":"public/king/7bcc2bc0.html","hash":"0a397bdef480df88d17a76950f7c974443a9d07a","modified":1684327812735},{"_id":"public/king/f40d27b8.html","hash":"107815999b4989130e97c84a1ad36bb151a1bda9","modified":1684327812735},{"_id":"public/king/fde7e8f6.html","hash":"33da7f0129ff1fecf17b670393ae96b92dd0b206","modified":1684327812735},{"_id":"public/king/fc16c803.html","hash":"ad33f28ebeaa0e5bd5c639ed8ca3dd598a588a9d","modified":1684327812735},{"_id":"public/king/a8e48d6d.html","hash":"87b0c4f3109db49888470feb2732e8c4d499a4ef","modified":1684327812735},{"_id":"public/king/26960e5d.html","hash":"fcc983f926fa99d5ea76edaa445554b5489953e2","modified":1684327812735},{"_id":"public/king/ea92c0b9.html","hash":"cc6a6eb45aec1c15844669647486b1418e40faff","modified":1684327812735},{"_id":"public/king/dc7a1e70.html","hash":"530a026d2666017e57e872e5094dbd31c2e5b0ae","modified":1684327812735},{"_id":"public/king/30efca60.html","hash":"13626dbfe9d0a5184a285a9bd0b2148aa6eb6c70","modified":1684327812735},{"_id":"public/king/7c29175f.html","hash":"ad771237f622f1172df3b90f05e2bcd55b49d851","modified":1684327812735},{"_id":"public/index.html","hash":"d508b8d9562ec2d720b01fc6529a37f902a74105","modified":1684327812735},{"_id":"public/page/2/index.html","hash":"58692098a36536b69e23981051386dffdb7e6778","modified":1684327812735},{"_id":"public/page/3/index.html","hash":"6183be0605d49752c1cb6cc37d02c157032c9bf4","modified":1684327812735},{"_id":"public/categories/index.html","hash":"b58e4c47d4241c2758b15ec46110711ee2d6fee6","modified":1684327812735},{"_id":"public/CNAME","hash":"c353f96ba4241a9b4b851c61c71607ebe7d9cfde","modified":1684327812735},{"_id":"public/robots.txt","hash":"e9a5ffa79c05348f50e043ff57ce293d6f483995","modified":1684327812735},{"_id":"public/img/favicon.ico","hash":"0f20298a6a4d1ebd7a7ae7b87d7a3ae9afec0623","modified":1684327812735},{"_id":"public/img/police_beian.png","hash":"90efded6baa2dde599a9d6b1387973e8e64923ea","modified":1684327812735},{"_id":"public/img/loading.gif","hash":"2d2fc0f947940f98c21afafef39ecf226a2e8d55","modified":1684327812735},{"_id":"public/img/wechat.jpg","hash":"764825d8810ab0141707db60d911d329f367d08b","modified":1684327812735},{"_id":"public/xml/local-search.xml","hash":"8c96ba6a064705602ce28d096fd7dd9069630a55","modified":1684327812735},{"_id":"public/css/font.css","hash":"697e4a4e43f3031be9a4d80a6b582fc8dedc9480","modified":1684327812735},{"_id":"public/css/gitalk.css","hash":"a57b3cc8e04a0a4a27aefa07facf5b5e7bca0e76","modified":1684327812735},{"_id":"public/css/highlight.css","hash":"96371fafe21d0c45d929b6becb289e68c541838c","modified":1684327812735},{"_id":"public/css/highlight-dark.css","hash":"2b0daa6e5343da9dbb26d617d224b8397e48556b","modified":1684327812735},{"_id":"public/css/mac.css","hash":"8b2cb81bac83f1d43c9894a8ce50c28b342a50f3","modified":1684327812735},{"_id":"public/js/boot.js","hash":"38bd26c6b7acdafda86dda3560e6a3ca488d3c76","modified":1684327812735},{"_id":"public/js/color-schema.js","hash":"76a198f8721352ebeaf5b2ef2f4db00612da4796","modified":1684327812735},{"_id":"public/js/duration.js","hash":"eef57e72f70bf76b2d1c4c4cdccc8841a7f92d14","modified":1684327812735},{"_id":"public/js/events.js","hash":"89e3561488a618ed0caeb9edf18e441978e29c25","modified":1684327812735},{"_id":"public/js/local-search.js","hash":"cebcda5991b6a9ab9307c69542389ce9013f04f7","modified":1684327812735},{"_id":"public/js/leancloud.js","hash":"eff77c7a5c399fcaefda48884980571e15243fc9","modified":1684327812735},{"_id":"public/js/utils.js","hash":"45cc86f099db0a2c36ad49711ce66c2d598a2ab1","modified":1684327812735},{"_id":"public/js/plugins.js","hash":"c34916291e392a774ff3e85c55badb83e8661297","modified":1684327812735},{"_id":"public/js/img-lazyload.js","hash":"cbdeca434ec4da51f488c821d51b4d23c73294af","modified":1684327812735},{"_id":"public/css/main.css","hash":"35186c9418b96c2a6c5b509ac24e3de5108d8a44","modified":1684327812735},{"_id":"public/css/hover-min.css","hash":"1f4bc4ea5c280952b7693e2850621a9ec221ff81","modified":1684327812735},{"_id":"public/img/zhifubao.jpg","hash":"cd9bee6ad1e66445eff8717e4e149ff7d528c9d8","modified":1684327812735},{"_id":"public/img/avatar.jpg","hash":"6e17eac3132575a3d5fad149e4ab288b677da180","modified":1684327812735},{"_id":"public/img/index.jpg","hash":"8c5fd9c5d5c8e841c8e0c76c583c79e93fd6b7b6","modified":1684327812735},{"_id":"public/img/default.png","hash":"167a12978d80371cf578c8a2e45c24a2eb25b6fb","modified":1684327812735},{"_id":"public/img/wapper.png","hash":"b5acc1710efb0d249f0da6f3465c41d7a9f7a206","modified":1684327812735},{"_id":"source/_posts/真正做到自律的唯一“捷径”.md","hash":"aecbbce238b9806f9ea7b71fd27fc4c2f3570af6","modified":1684330625446}],"Category":[{"name":"运维","_id":"clhrpaia50007eq6qcxyt5b2o"},{"name":"生产工具","_id":"clhrpaia9000deq6q9w8uca4h"},{"name":"笔记","_id":"clhrpaiab000ieq6q268vge0b"},{"name":"教程","_id":"clhrpaiae000neq6q44zqdvay"},{"name":"杂谈","_id":"clhrpaiam0017eq6q2f13f649"},{"name":"随笔","_id":"clhrpaiat001jeq6q22xn1ruj"}],"Data":[],"Page":[{"_content":"!function(e,t,a){function r(e){var a=t.createElement(\"div\");a.className=\"heart\",n.push({el:a,x:e.clientX-5,y:e.clientY-5,scale:1,alpha:1,color:\"rgb(\"+~~(255*Math.random())+\",\"+~~(255*Math.random())+\",\"+~~(255*Math.random())+\")\"}),t.body.appendChild(a)}var n=[];e.requestAnimationFrame=e.requestAnimationFrame||e.webkitRequestAnimationFrame||e.mozRequestAnimationFrame||e.oRequestAnimationFrame||e.msRequestAnimationFrame||function(e){setTimeout(e,1e3/60)},function(e){var a=t.createElement(\"style\");a.type=\"text/css\";try{a.appendChild(t.createTextNode(e))}catch(t){a.styleSheet.cssText=e}t.getElementsByTagName(\"head\")[0].appendChild(a)}(\".heart{width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);}.heart:after,.heart:before{content: '';width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;}.heart:after{top: -5px;}.heart:before{left: -5px;}\"),function(){var t=\"function\"==typeof e.onclick&&e.onclick;e.onclick=function(e){t&&t(),r(e)}}(),function e(){for(var a=0;a<n.length;a++)n[a].alpha<=0?(t.body.removeChild(n[a].el),n.splice(a,1)):(n[a].y--,n[a].scale+=.004,n[a].alpha-=.013,n[a].el.style.cssText=\"left:\"+n[a].x+\"px;top:\"+n[a].y+\"px;opacity:\"+n[a].alpha+\";transform:scale(\"+n[a].scale+\",\"+n[a].scale+\") rotate(45deg);background:\"+n[a].color+\";z-index:99999\");requestAnimationFrame(e)}()}(window,document);","source":"js/mouse.js","raw":"!function(e,t,a){function r(e){var a=t.createElement(\"div\");a.className=\"heart\",n.push({el:a,x:e.clientX-5,y:e.clientY-5,scale:1,alpha:1,color:\"rgb(\"+~~(255*Math.random())+\",\"+~~(255*Math.random())+\",\"+~~(255*Math.random())+\")\"}),t.body.appendChild(a)}var n=[];e.requestAnimationFrame=e.requestAnimationFrame||e.webkitRequestAnimationFrame||e.mozRequestAnimationFrame||e.oRequestAnimationFrame||e.msRequestAnimationFrame||function(e){setTimeout(e,1e3/60)},function(e){var a=t.createElement(\"style\");a.type=\"text/css\";try{a.appendChild(t.createTextNode(e))}catch(t){a.styleSheet.cssText=e}t.getElementsByTagName(\"head\")[0].appendChild(a)}(\".heart{width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);}.heart:after,.heart:before{content: '';width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;}.heart:after{top: -5px;}.heart:before{left: -5px;}\"),function(){var t=\"function\"==typeof e.onclick&&e.onclick;e.onclick=function(e){t&&t(),r(e)}}(),function e(){for(var a=0;a<n.length;a++)n[a].alpha<=0?(t.body.removeChild(n[a].el),n.splice(a,1)):(n[a].y--,n[a].scale+=.004,n[a].alpha-=.013,n[a].el.style.cssText=\"left:\"+n[a].x+\"px;top:\"+n[a].y+\"px;opacity:\"+n[a].alpha+\";transform:scale(\"+n[a].scale+\",\"+n[a].scale+\") rotate(45deg);background:\"+n[a].color+\";z-index:99999\");requestAnimationFrame(e)}()}(window,document);","date":"2023-05-11T12:51:08.781Z","updated":"2023-02-03T12:45:20.000Z","path":"js/mouse.js","layout":"false","title":"","comments":1,"_id":"clhrpai9t0000eq6q9njgbtnl","content":"!function(e,t,a){function r(e){var a=t.createElement(\"div\");a.className=\"heart\",n.push({el:a,x:e.clientX-5,y:e.clientY-5,scale:1,alpha:1,color:\"rgb(\"+~~(255*Math.random())+\",\"+~~(255*Math.random())+\",\"+~~(255*Math.random())+\")\"}),t.body.appendChild(a)}var n=[];e.requestAnimationFrame=e.requestAnimationFrame||e.webkitRequestAnimationFrame||e.mozRequestAnimationFrame||e.oRequestAnimationFrame||e.msRequestAnimationFrame||function(e){setTimeout(e,1e3/60)},function(e){var a=t.createElement(\"style\");a.type=\"text/css\";try{a.appendChild(t.createTextNode(e))}catch(t){a.styleSheet.cssText=e}t.getElementsByTagName(\"head\")[0].appendChild(a)}(\".heart{width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);}.heart:after,.heart:before{content: '';width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;}.heart:after{top: -5px;}.heart:before{left: -5px;}\"),function(){var t=\"function\"==typeof e.onclick&&e.onclick;e.onclick=function(e){t&&t(),r(e)}}(),function e(){for(var a=0;a<n.length;a++)n[a].alpha<=0?(t.body.removeChild(n[a].el),n.splice(a,1)):(n[a].y--,n[a].scale+=.004,n[a].alpha-=.013,n[a].el.style.cssText=\"left:\"+n[a].x+\"px;top:\"+n[a].y+\"px;opacity:\"+n[a].alpha+\";transform:scale(\"+n[a].scale+\",\"+n[a].scale+\") rotate(45deg);background:\"+n[a].color+\";z-index:99999\");requestAnimationFrame(e)}()}(window,document);","site":{"data":{}},"excerpt":"","more":"!function(e,t,a){function r(e){var a=t.createElement(\"div\");a.className=\"heart\",n.push({el:a,x:e.clientX-5,y:e.clientY-5,scale:1,alpha:1,color:\"rgb(\"+~~(255*Math.random())+\",\"+~~(255*Math.random())+\",\"+~~(255*Math.random())+\")\"}),t.body.appendChild(a)}var n=[];e.requestAnimationFrame=e.requestAnimationFrame||e.webkitRequestAnimationFrame||e.mozRequestAnimationFrame||e.oRequestAnimationFrame||e.msRequestAnimationFrame||function(e){setTimeout(e,1e3/60)},function(e){var a=t.createElement(\"style\");a.type=\"text/css\";try{a.appendChild(t.createTextNode(e))}catch(t){a.styleSheet.cssText=e}t.getElementsByTagName(\"head\")[0].appendChild(a)}(\".heart{width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);}.heart:after,.heart:before{content: '';width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;}.heart:after{top: -5px;}.heart:before{left: -5px;}\"),function(){var t=\"function\"==typeof e.onclick&&e.onclick;e.onclick=function(e){t&&t(),r(e)}}(),function e(){for(var a=0;a<n.length;a++)n[a].alpha<=0?(t.body.removeChild(n[a].el),n.splice(a,1)):(n[a].y--,n[a].scale+=.004,n[a].alpha-=.013,n[a].el.style.cssText=\"left:\"+n[a].x+\"px;top:\"+n[a].y+\"px;opacity:\"+n[a].alpha+\";transform:scale(\"+n[a].scale+\",\"+n[a].scale+\") rotate(45deg);background:\"+n[a].color+\";z-index:99999\");requestAnimationFrame(e)}()}(window,document);"},{"title":"about","layout":"about","date":"2021-02-01T05:45:34.000Z","_content":"\n<style>\n .about-avatar{\n\n }\n\n</style>\n\n## 🧛 基本信息\n<p class=\"note note-secondary\">\nName: king<br/>\nAge: 26<br/>\nAddress: 甘肃<br/>\nGitee: https://gitee.com/ambitions-king<br/>\nBlog: https://www.zibbo.xyz<br/>\nHobbies: photography, animation, Internet, front-end technology\n</p>\n\n\n\n## 💌 联系博主\n您可以通过一下任意方式联系到我\n```\nQQ:1264651321\n微信:DestinyEternity-king\n邮箱:1264651321@qq.com\n```\n\n## 💗 关于本站\n\nHexo 框架 + [Fluid](https://github.com/fluid-dev/hexo-theme-fluid) 主题\n\n博客中的部分图片源于网络，侵删\n\n本博客文章采用 CC BY-NC-SA 4.0 协议，转载请注明出处\n\n欢迎小伙伴们交换友链，具体说明可在 友链页 查看。\n\n## 🙋 免责声明\n\n本站以分享互联网经验、学习知识为目的，所有文章所涉及使用的工具、资源等均来自互联网， 仅供学习和研究使用，版权归作者所有，如果无意之中侵犯了您的版权，请来信告知。本站将在第一时间删除！另外， 本站内的文章多为博主原创，大部分是由CSDN平台搬迁过来，仅供学习交流之用，不参与商业用途。\n\n遵守相关法律法规，由于本站资源部分来源于网络，开发也是使用开源模板，故无法核实资源侵权的真实性，无论出于何种目的要求本站删除内容，“您”均需要提供相关证明，否则不予处理。\n\n感谢关注我的网站，本站是使用 Hexo 框架 + Fluid 主题，如果你觉得不错也可以尝试使用一下。\n\n<center>\n\n\n\n\nI wish you to become your own sun, no need to rely on who's light.✨✨✨\n\n\n\n\n","source":"about/index.md","raw":"---\ntitle: about\nlayout: about\ndate: 2021-02-01 13:45:34\n---\n\n<style>\n .about-avatar{\n\n }\n\n</style>\n\n## 🧛 基本信息\n<p class=\"note note-secondary\">\nName: king<br/>\nAge: 26<br/>\nAddress: 甘肃<br/>\nGitee: https://gitee.com/ambitions-king<br/>\nBlog: https://www.zibbo.xyz<br/>\nHobbies: photography, animation, Internet, front-end technology\n</p>\n\n\n\n## 💌 联系博主\n您可以通过一下任意方式联系到我\n```\nQQ:1264651321\n微信:DestinyEternity-king\n邮箱:1264651321@qq.com\n```\n\n## 💗 关于本站\n\nHexo 框架 + [Fluid](https://github.com/fluid-dev/hexo-theme-fluid) 主题\n\n博客中的部分图片源于网络，侵删\n\n本博客文章采用 CC BY-NC-SA 4.0 协议，转载请注明出处\n\n欢迎小伙伴们交换友链，具体说明可在 友链页 查看。\n\n## 🙋 免责声明\n\n本站以分享互联网经验、学习知识为目的，所有文章所涉及使用的工具、资源等均来自互联网， 仅供学习和研究使用，版权归作者所有，如果无意之中侵犯了您的版权，请来信告知。本站将在第一时间删除！另外， 本站内的文章多为博主原创，大部分是由CSDN平台搬迁过来，仅供学习交流之用，不参与商业用途。\n\n遵守相关法律法规，由于本站资源部分来源于网络，开发也是使用开源模板，故无法核实资源侵权的真实性，无论出于何种目的要求本站删除内容，“您”均需要提供相关证明，否则不予处理。\n\n感谢关注我的网站，本站是使用 Hexo 框架 + Fluid 主题，如果你觉得不错也可以尝试使用一下。\n\n<center>\n\n\n\n\nI wish you to become your own sun, no need to rely on who's light.✨✨✨\n\n\n\n\n","updated":"2023-05-15T05:01:23.672Z","path":"about/index.html","comments":1,"_id":"clhrpaia00002eq6q5brnctv3","content":"<style>\n .about-avatar{\n\n }\n\n</style>\n\n<h2 id=\"🧛-基本信息\"><a href=\"#🧛-基本信息\" class=\"headerlink\" title=\"🧛 基本信息\"></a>🧛 基本信息</h2><p class=\"note note-secondary\">\nName: king<br/>\nAge: 26<br/>\nAddress: 甘肃<br/>\nGitee: https://gitee.com/ambitions-king<br/>\nBlog: https://www.zibbo.xyz<br/>\nHobbies: photography, animation, Internet, front-end technology\n</p>\n\n\n\n<h2 id=\"💌-联系博主\"><a href=\"#💌-联系博主\" class=\"headerlink\" title=\"💌 联系博主\"></a>💌 联系博主</h2><p>您可以通过一下任意方式联系到我</p>\n<div class=\"code-wrapper\"><pre><code class=\"hljs elixir\"><span class=\"hljs-symbol\">QQ:</span><span class=\"hljs-number\">1264651321</span>\n微信<span class=\"hljs-symbol\">:DestinyEternity-king</span>\n邮箱<span class=\"hljs-symbol\">:</span><span class=\"hljs-number\">1264651321</span><span class=\"hljs-variable\">@qq</span>.com</code></pre></div>\n\n<h2 id=\"💗-关于本站\"><a href=\"#💗-关于本站\" class=\"headerlink\" title=\"💗 关于本站\"></a>💗 关于本站</h2><p>Hexo 框架 + <a href=\"https://github.com/fluid-dev/hexo-theme-fluid\">Fluid</a> 主题</p>\n<p>博客中的部分图片源于网络，侵删</p>\n<p>本博客文章采用 CC BY-NC-SA 4.0 协议，转载请注明出处</p>\n<p>欢迎小伙伴们交换友链，具体说明可在 友链页 查看。</p>\n<h2 id=\"🙋-免责声明\"><a href=\"#🙋-免责声明\" class=\"headerlink\" title=\"🙋 免责声明\"></a>🙋 免责声明</h2><p>本站以分享互联网经验、学习知识为目的，所有文章所涉及使用的工具、资源等均来自互联网， 仅供学习和研究使用，版权归作者所有，如果无意之中侵犯了您的版权，请来信告知。本站将在第一时间删除！另外， 本站内的文章多为博主原创，大部分是由CSDN平台搬迁过来，仅供学习交流之用，不参与商业用途。</p>\n<p>遵守相关法律法规，由于本站资源部分来源于网络，开发也是使用开源模板，故无法核实资源侵权的真实性，无论出于何种目的要求本站删除内容，“您”均需要提供相关证明，否则不予处理。</p>\n<p>感谢关注我的网站，本站是使用 Hexo 框架 + Fluid 主题，如果你觉得不错也可以尝试使用一下。</p>\n<center>\n\n\n\n\n<p>I wish you to become your own sun, no need to rely on who’s light.✨✨✨</p>\n","site":{"data":{}},"excerpt":"","more":"<style>\n .about-avatar{\n\n }\n\n</style>\n\n<h2 id=\"🧛-基本信息\"><a href=\"#🧛-基本信息\" class=\"headerlink\" title=\"🧛 基本信息\"></a>🧛 基本信息</h2><p class=\"note note-secondary\">\nName: king<br/>\nAge: 26<br/>\nAddress: 甘肃<br/>\nGitee: https://gitee.com/ambitions-king<br/>\nBlog: https://www.zibbo.xyz<br/>\nHobbies: photography, animation, Internet, front-end technology\n</p>\n\n\n\n<h2 id=\"💌-联系博主\"><a href=\"#💌-联系博主\" class=\"headerlink\" title=\"💌 联系博主\"></a>💌 联系博主</h2><p>您可以通过一下任意方式联系到我</p>\n<pre><code class=\"hljs elixir\"><span class=\"hljs-symbol\">QQ:</span><span class=\"hljs-number\">1264651321</span>\n微信<span class=\"hljs-symbol\">:DestinyEternity-king</span>\n邮箱<span class=\"hljs-symbol\">:</span><span class=\"hljs-number\">1264651321</span><span class=\"hljs-variable\">@qq</span>.com</code></pre>\n\n<h2 id=\"💗-关于本站\"><a href=\"#💗-关于本站\" class=\"headerlink\" title=\"💗 关于本站\"></a>💗 关于本站</h2><p>Hexo 框架 + <a href=\"https://github.com/fluid-dev/hexo-theme-fluid\">Fluid</a> 主题</p>\n<p>博客中的部分图片源于网络，侵删</p>\n<p>本博客文章采用 CC BY-NC-SA 4.0 协议，转载请注明出处</p>\n<p>欢迎小伙伴们交换友链，具体说明可在 友链页 查看。</p>\n<h2 id=\"🙋-免责声明\"><a href=\"#🙋-免责声明\" class=\"headerlink\" title=\"🙋 免责声明\"></a>🙋 免责声明</h2><p>本站以分享互联网经验、学习知识为目的，所有文章所涉及使用的工具、资源等均来自互联网， 仅供学习和研究使用，版权归作者所有，如果无意之中侵犯了您的版权，请来信告知。本站将在第一时间删除！另外， 本站内的文章多为博主原创，大部分是由CSDN平台搬迁过来，仅供学习交流之用，不参与商业用途。</p>\n<p>遵守相关法律法规，由于本站资源部分来源于网络，开发也是使用开源模板，故无法核实资源侵权的真实性，无论出于何种目的要求本站删除内容，“您”均需要提供相关证明，否则不予处理。</p>\n<p>感谢关注我的网站，本站是使用 Hexo 框架 + Fluid 主题，如果你觉得不错也可以尝试使用一下。</p>\n<center>\n\n\n\n\n<p>I wish you to become your own sun, no need to rely on who’s light.✨✨✨</p>\n"}],"Post":[{"title":"如果生活让人觉得焦躁，那一定是哪里出问题了","author":"king","abbrlink":"fc16c803","date":"2022-09-12T07:11:01.000Z","index_img":"https://img2.baidu.com/it/u=3430326585,3713567170&fm=253&fmt=auto&app=138&f=JPEG?w=500&h=500","_content":"\n人总是会有点追求，有了追求达不到这很难受。\n\n这容易让人产生负面评价。\n\n现在的社会，追求太单一了，而搞钱这个事情，机缘巧合极强。\n\n也就是说大部分人可能都达不到自己的追求。\n\n然后，就会觉得自己是不是哪里不够努力？\n\n然后会有很多努力的选项提供给你，最后的状态就是，努力本身成了一种负担。\n\n而一旦如此，努力就变得功利。\n\n做了要有个结果，起码也要把卡打满。\n\n不然就觉得自己非常不在状态。\n\n有个人说的一句话很有意思“没有被爱照亮过的生命，存在本身就是一种羞愧”。\n\n这话有两层含义。\n\n一是人要有人爱才行，二是如果没被爱过就容易理不清自己的存在。\n\n这其实是低水平的自体感。\n\n因为对自我的认知来源于她人的映射。\n\n不过这是一种很好的调整状态的方式，因为亲密关系是极其容易建立意义感的。\n\n而高级的自体感在于，我知道自己很好。\n\n我自己做的事走在不一定正确，但肯定合理的轨迹上。\n\n知道什么事情是重要的，知道努力或改变不一定有结果，反正顺势而为。\n\n不说“尽人事听天命”，但至少不会自怨自艾。\n\n这种自体感不依赖于外物，就算有外界的眼光去批判，也不会因此而焦躁。\n\n更不至于自我批判到无所适从。\n\n就有点类似于梭罗所写的，每个圆心到圆周都可以画出无数条半径。\n\n人大可以选择其一，或者改变，或者坚守。\n\n或者坚守后改变。\n\n把有限的人生，每花一秒在焦躁上面，都是浪费。","source":"_posts/00.md","raw":"---\ntitle: 如果生活让人觉得焦躁，那一定是哪里出问题了\nauthor: king\ntags:\n  - 随笔\nabbrlink: fc16c803\ndate: 2022-09-12 15:11:01\nindex_img: https://img2.baidu.com/it/u=3430326585,3713567170&fm=253&fmt=auto&app=138&f=JPEG?w=500&h=500\n---\n\n人总是会有点追求，有了追求达不到这很难受。\n\n这容易让人产生负面评价。\n\n现在的社会，追求太单一了，而搞钱这个事情，机缘巧合极强。\n\n也就是说大部分人可能都达不到自己的追求。\n\n然后，就会觉得自己是不是哪里不够努力？\n\n然后会有很多努力的选项提供给你，最后的状态就是，努力本身成了一种负担。\n\n而一旦如此，努力就变得功利。\n\n做了要有个结果，起码也要把卡打满。\n\n不然就觉得自己非常不在状态。\n\n有个人说的一句话很有意思“没有被爱照亮过的生命，存在本身就是一种羞愧”。\n\n这话有两层含义。\n\n一是人要有人爱才行，二是如果没被爱过就容易理不清自己的存在。\n\n这其实是低水平的自体感。\n\n因为对自我的认知来源于她人的映射。\n\n不过这是一种很好的调整状态的方式，因为亲密关系是极其容易建立意义感的。\n\n而高级的自体感在于，我知道自己很好。\n\n我自己做的事走在不一定正确，但肯定合理的轨迹上。\n\n知道什么事情是重要的，知道努力或改变不一定有结果，反正顺势而为。\n\n不说“尽人事听天命”，但至少不会自怨自艾。\n\n这种自体感不依赖于外物，就算有外界的眼光去批判，也不会因此而焦躁。\n\n更不至于自我批判到无所适从。\n\n就有点类似于梭罗所写的，每个圆心到圆周都可以画出无数条半径。\n\n人大可以选择其一，或者改变，或者坚守。\n\n或者坚守后改变。\n\n把有限的人生，每花一秒在焦躁上面，都是浪费。","slug":"00","published":1,"updated":"2023-05-15T05:01:23.663Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clhrpai9w0001eq6q1kxv93a3","content":"<p>人总是会有点追求，有了追求达不到这很难受。</p>\n<p>这容易让人产生负面评价。</p>\n<p>现在的社会，追求太单一了，而搞钱这个事情，机缘巧合极强。</p>\n<p>也就是说大部分人可能都达不到自己的追求。</p>\n<p>然后，就会觉得自己是不是哪里不够努力？</p>\n<p>然后会有很多努力的选项提供给你，最后的状态就是，努力本身成了一种负担。</p>\n<p>而一旦如此，努力就变得功利。</p>\n<p>做了要有个结果，起码也要把卡打满。</p>\n<p>不然就觉得自己非常不在状态。</p>\n<p>有个人说的一句话很有意思“没有被爱照亮过的生命，存在本身就是一种羞愧”。</p>\n<p>这话有两层含义。</p>\n<p>一是人要有人爱才行，二是如果没被爱过就容易理不清自己的存在。</p>\n<p>这其实是低水平的自体感。</p>\n<p>因为对自我的认知来源于她人的映射。</p>\n<p>不过这是一种很好的调整状态的方式，因为亲密关系是极其容易建立意义感的。</p>\n<p>而高级的自体感在于，我知道自己很好。</p>\n<p>我自己做的事走在不一定正确，但肯定合理的轨迹上。</p>\n<p>知道什么事情是重要的，知道努力或改变不一定有结果，反正顺势而为。</p>\n<p>不说“尽人事听天命”，但至少不会自怨自艾。</p>\n<p>这种自体感不依赖于外物，就算有外界的眼光去批判，也不会因此而焦躁。</p>\n<p>更不至于自我批判到无所适从。</p>\n<p>就有点类似于梭罗所写的，每个圆心到圆周都可以画出无数条半径。</p>\n<p>人大可以选择其一，或者改变，或者坚守。</p>\n<p>或者坚守后改变。</p>\n<p>把有限的人生，每花一秒在焦躁上面，都是浪费。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>人总是会有点追求，有了追求达不到这很难受。</p>\n<p>这容易让人产生负面评价。</p>\n<p>现在的社会，追求太单一了，而搞钱这个事情，机缘巧合极强。</p>\n<p>也就是说大部分人可能都达不到自己的追求。</p>\n<p>然后，就会觉得自己是不是哪里不够努力？</p>\n<p>然后会有很多努力的选项提供给你，最后的状态就是，努力本身成了一种负担。</p>\n<p>而一旦如此，努力就变得功利。</p>\n<p>做了要有个结果，起码也要把卡打满。</p>\n<p>不然就觉得自己非常不在状态。</p>\n<p>有个人说的一句话很有意思“没有被爱照亮过的生命，存在本身就是一种羞愧”。</p>\n<p>这话有两层含义。</p>\n<p>一是人要有人爱才行，二是如果没被爱过就容易理不清自己的存在。</p>\n<p>这其实是低水平的自体感。</p>\n<p>因为对自我的认知来源于她人的映射。</p>\n<p>不过这是一种很好的调整状态的方式，因为亲密关系是极其容易建立意义感的。</p>\n<p>而高级的自体感在于，我知道自己很好。</p>\n<p>我自己做的事走在不一定正确，但肯定合理的轨迹上。</p>\n<p>知道什么事情是重要的，知道努力或改变不一定有结果，反正顺势而为。</p>\n<p>不说“尽人事听天命”，但至少不会自怨自艾。</p>\n<p>这种自体感不依赖于外物，就算有外界的眼光去批判，也不会因此而焦躁。</p>\n<p>更不至于自我批判到无所适从。</p>\n<p>就有点类似于梭罗所写的，每个圆心到圆周都可以画出无数条半径。</p>\n<p>人大可以选择其一，或者改变，或者坚守。</p>\n<p>或者坚守后改变。</p>\n<p>把有限的人生，每花一秒在焦躁上面，都是浪费。</p>\n"},{"title":"无所事事的自己","author":"king","excerpt":"其实每一个说着“我只想摆烂”的人，都不过是在短暂的虚脱无力中进行暂停和自我安慰，心里依然拧着一股无法言说的劲，奔着茫茫的目标继续挣扎。","index_img":"https://img0.baidu.com/it/u=557359139,3703912431&fm=253&fmt=auto&app=138&f=JPEG?w=580&h=325","abbrlink":"dc7a1e70","date":"2021-01-13T07:41:20.000Z","_content":"无所事事、碌碌无为，并不是慢生活，而是消极地活着。","source":"_posts/01.md","raw":"---\ntitle: 无所事事的自己\nauthor: king\nexcerpt: 其实每一个说着“我只想摆烂”的人，都不过是在短暂的虚脱无力中进行暂停和自我安慰，心里依然拧着一股无法言说的劲，奔着茫茫的目标继续挣扎。\nindex_img: \n  https://img0.baidu.com/it/u=557359139,3703912431&fm=253&fmt=auto&app=138&f=JPEG?w=580&h=325\nabbrlink: dc7a1e70\ndate: 2021-01-13 15:41:20\n---\n无所事事、碌碌无为，并不是慢生活，而是消极地活着。","slug":"01","published":1,"updated":"2023-05-15T05:01:23.664Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clhrpaia00003eq6q607eetl7","content":"<p>无所事事、碌碌无为，并不是慢生活，而是消极地活着。</p>\n","site":{"data":{}},"more":"<p>无所事事、碌碌无为，并不是慢生活，而是消极地活着。</p>\n"},{"title":"Docker使用手册","excerpt":"Docker 是基于Go语言实现的开源容器项目。利用操作系统本身已有的机制和特性，可以实现远超传统虚拟机的轻量级虚拟化（通俗解释：Docker内嵌极小型系统，例如Linux只有5M多，windows也是）。它是内核级的虚拟化。期望达到使项目运行环境“一次封装，到处运行的目的”。","index_img":"https://img2.baidu.com/it/u=2705144990,3944592429&fm=253&fmt=auto&app=138&f=JPEG?w=634&h=371","abbrlink":"7c29175f","date":"2020-07-03T13:01:37.000Z","_content":"# 一、Docker简介\n> Docker 是基于Go语言实现的开源容器项目。利用操作系统本身已有的机制和特性，可以实现远超传统虚拟机的轻量级虚拟化（通俗解释：Docker内嵌极小型系统，例如Linux只有5M多，windows也是）。它是内核级的虚拟化。期望达到使项目运行环境“一次封装，到处运行的目的”。\n\n> 在Docker里面可以设置使用Windows还是Linux系统，默认是用Linux系统，基于Ubuntu的，只有5M多，包含了最基本功能。\n> 利用docker创建的运行环境叫做docker容器，容器是通过docker镜像创建的，docker镜像文件可以放在私有仓库中也可以放在共有仓库中。\n> 官网地址：https://www.docker.com\nDockerFile指令\n```DockerFile\nFROM\t\t# 基础镜像，依赖于谁\nMAINTAINER\t# 作者：姓名+邮箱\nRUN\t\t\t# 镜像构建的时候需要运行的命令\nADD\t\t\t# 添加，可以添加其他镜像\nWORKDIR\t\t# 镜像的工作目录\nVOLUME\t\t# 挂载的目录\nEXPOSE\t\t# 暴露的端口\nCMD\t\t\t# 指定这个容器启动的时候需要运行的命令，最后一个才会生效\nENTRYPOINT\t# 指定这个容器启动的时候需要运行的命令，可以追加\nONBUILD\t\t# 当dockerfile被构建的时候触发的指令\nCOPY\t\t# 类似ADD，讲文件拷贝到镜像中\nENV\t\t\t# 构建的时候设置环境变量\n\nARG\t\t\t# 创建镜像过程中使用的变量\nLABEL\t\t# 为生成的镜像添加元数据标签信息\nSTOPSIGNAL\t# 退出的信号值\nHEALTHCHECK\t# 配置所启动容器如何进行健康检查\nSHELL\t\t# 指定默认shell类型\n```\n\n# 二、Linux系统中Docker 安装与启动\n\n## 1.安装\n\n### 1.1.下载docker-ce repo\n\n```\ncurl https://download.docker.com/linux/centos/docker-ce.repo -o /etc/yum.repos.d/docker-ce.repo\n```\n\n### 1.2. 安装依赖\n\n```\nyum install -y https://download.docker.com/linux/fedora/30/x86_64/stable/Packages/containerd.io-1.2.6-3.3.fc30.x86_64.rpm\n```\n\n### 1.3. 安装docker-ce\n\n```\nyum install -y docker-ce\n```\n\n## 2.启动\n\n### 2.1. 启动命令\n\n```\nsystemctl start docker\n```\n\n### 2.2. 查看Docker状态\n\n```\ndocker info\n```\n\n结果如下:\n\n![image-20211003144315752](https://gitee.com/ambitions-king/picture/raw/master/img/image-20211003144315752.png)\n\n## 3.镜像加速器配置\n\n默认情况下Docker从Docker Hub上下载镜像资源，但速度很慢，可以通过配置国内的镜像加速器来解决。\n\n### 3.1. 使用阿里云镜像\n\n网址：https://www.aliyun.com/\n\n### 3.2. 进入容器镜像服务\n\n![img](https://gitee.com/ambitions-king/picture/raw/master/img/wps57F3.tmp.jpg)\n\n### 3.3.  进入管理控制台\n\n![img](https://gitee.com/ambitions-king/picture/raw/master/img/wpsA606.tmp.jpg)\n\n### 3.4. 进入镜像加速器\n\n![img](https://gitee.com/ambitions-king/picture/raw/master/img/wps5050.tmp.jpg)\n\n### 3.5. 选择对应的OS并配置\n\n![img](https://gitee.com/ambitions-king/picture/raw/master/img/wpsDEF5.tmp.jpg)\n\n### 3.6. 验证镜像加速器是否配置成功\n\n通过docker info命令验证镜像加速器配置，结果如下：\n\n![image-20211003145815941](https://gitee.com/ambitions-king/picture/raw/master/img/image-20211003145815941.png)\n\n# 三、安装redis\n\n## 1.获取redis镜像\n\n```\ndocker pull redis:6.0.5\n```\n\n![image-20211003150145019](https://gitee.com/ambitions-king/picture/raw/master/img/image-20211003150145019.png)\n\n## 2.查看本地镜像\n\n```\ndocker images\n```\n\n![image-20211003150246436](https://gitee.com/ambitions-king/picture/raw/master/img/image-20211003150246436.png)\n\n### 3.从官网获取redis.config配置文件\n\n```\n# 进入文件夹\ncd /local/docker\nwget http://download.redis.io/redis-stable/redis.conf   //下载redis配置文件\nvim redis.conf  //修改配置文件\n```\n\n> 1.注释bind 127.0.0.1。这里限制redis只能本地访问，注释掉之后使redis可以外部访问；\n> 2.protected-mode yes 修改为 protected-mode no。默认yes，开启保护模式，限制仅本地访问，改为no之后使redis可以外部访问；\n> 3.daemonize no 。默认no，当前界面将进入redis的命令行界面，exit强制退出或者关闭连接工具(putty,xshell等)都会导致redis进程退出。 改为yes意为以守护进程方式启动，该模式下，redis会在后台运行，并将进程pid号写入至redis.conf选项pidfile设置的文件中，此时redis将一直运行，除非手动kill该进程，如果改为yes会使以配置文件方式启动redis的方式失败。\n> 4.requirepass pwd。这里的pwd是自己设置的密码，可以不开启，不开启表示无需密码即可连接。\n> 5.databases 16。默认数据库个数16，可以不修改。\n> 6.appendonly no。默认 no，表示不开启aof方式持久化，改为appendonly yes表示开启aof，可以不修改该配置。\n\n文件夹如下:\n\n![image-20211003183929810](https://gitee.com/ambitions-king/picture/raw/master/img/image-20211003183929810.png)\n\n### 4. 启动redis\n\n```\ndocker run \\\n--name redis \\\n-p 6379:6379 \\\n--restart unless-stopped \\\n-v /local/docker/redis/data:/data \\\n-v /local/docker/redis/conf/redis.conf:/etc/redis/redis.conf \\\n-d redis redis-server /etc/redis/redis.conf \\\n```\n\n### 5. 查看redis运行是否成功\n\n```\n#查看redis容器运行\ndocker ps |grep redis \n#进入redis容器中\ndocker exec -it redis /bin/bash\n#使用redis客户端\nredis-cli\n#设置密码\nconfig set requirepass 123456\n```\n\n![image-20211003220721877](https://gitee.com/ambitions-king/picture/raw/master/img/image-20211003220721877.png)\n\n# 四、安装mysql\n\n## 1. 拉取镜像\n\n```\ndocker pull mysql:8.0.16\n```\n\n## 2. 创建数据目录和配置文件\n\n```\n[root@king docker]# mkdir -p mysql\n[root@king docker]# cd mysql/\n[root@king mysql]# mkdir data\n[root@king mysql]# mkdir conf\n[root@king mysql]# chmod -R 755 /local/docker/mysql\n[root@king mysql]# cd conf/\n[root@king conf]# vim my.cnf\n```\n\n添加以下内容到上述创建的配置文件中\n\n```shell\n[client]\n\n#socket = /usr/mysql/mysqld.sock\n\ndefault-character-set = utf8mb4\n\n[mysqld]\n\n#pid-file        = /var/run/mysqld/mysqld.pid\n\n#socket          = /var/run/mysqld/mysqld.sock\n\n#datadir         = /var/lib/mysql\n\n#socket = /usr/mysql/mysqld.sock\n\n#pid-file = /usr/mysql/mysqld.pid\n\ndatadir = /local/docker/mysql/data\n\ncharacter_set_server = utf8mb4\n\ncollation_server = utf8mb4_bin\n\nsecure-file-priv= NULL\n\n# Disabling symbolic-links is recommended to prevent assorted security risks\n\nsymbolic-links=0\n\n# Custom config should go here\n\n!includedir /etc/mysql/conf.d/\n\n```\n\n## 3.启动创建容器\n\n```\ndocker run --restart=unless-stopped -d --name mysql \\\n-v /local/docker/mysql/conf/my.cnf:/etc/mysql/my.cnf \\\n-v /local/docker/mysql/data:/var/lib/mysql -p 3306:3306 -e MYSQL_ROOT_PASSWORD=123456 mysql:8.0.16\n```\n\n查看容器启动情况\n\n```\ndocker info\n```\n\n## 4.修改mysql密码以及可访问主机\n\n- 进入mysql容器内部\n\n```\n[root@king conf]# docker exec -it mysql /bin/bash\n```\n\n- 连接mysql\n\n  ```\n  mysql -uroot -p\n  ```\n\n- 使用mysql库\n\n  ```\n  use mysql\n  ```\n\n- 修改访问主机以及密码等，设置为所有主机可访问\n\n  ```\n  ALTER USER 'root'@'%' IDENTIFIED WITH mysql_native_password BY '123456';\n  ```\n\n- 刷新\n\n  ```\n  flush privileges\n  ```\n\n\n# 五、安装JDK8\n## yum安装\n```shell\nyum install java-1.8.0-openjdk* -y\n```\n执行过这条命令无需配置，直接可以使用。\n## 1.上传文件\n\n将jdk文件上传到/local/upload\n\n## 2.解压压缩包\n\n```\ntar zxf jdk-8u311-linux-x64.tar.gz\n```\n\n## 3.移动文件\n\n```\nmv jdk1.8.0_311 /local/soft/jdk\n```\n\n## 4.配置环境变量\n\n> 在linux中/etc/profile此文件为环境变量配置文件。\n\n```\n#export PATH USER LOGNAME MAIL HOSTNAME HISTSIZE HISTCONTROL\nexport JAVA_HOME=/local/soft/jdk\nexport PATH=$JAVA_HOME/bin:$PATH\n```\n\n```\n#进入etc文件夹并且编译profile文件\ncd /etc && vim profile\n```\n\n![image-20211004113003179](https://gitee.com/ambitions-king/picture/raw/master/img/image-20211004113003179.png)\n\n## 5.解析文件\n\n> 不解析，必须通过重启才能生效。只要解析不需要重启了\n\n```\nsource /etc/profile\n```\n\n## 6.查看配置是否成功\n\n```\njava -version\n```\n\n![image-20211004113221989](https://gitee.com/ambitions-king/picture/raw/master/img/image-20211004113221989.png)\n\n# 六、安装solr\n\n## 1.上传文件\n\n> 上传压缩包solr-8.2.0.tgz到/local/upload中。\n\n## 2.解压\n\n```\n[root@king upload]# tar zxf solr-8.2.0.tgz \n```\n\n## 3.移动文件\n\n```\nmv solr-8.2.0 /local/soft/solr\n```\n\n## 4.Solr常用目录简介\n\n![image-20211004113700431](https://gitee.com/ambitions-king/picture/raw/master/img/image-20211004113700431.png)\n\n> bin目录：可执行文件所在目录。\n> dist目录：Solr对外提供的核心、扩展、插件等代码jar文件。\n> server目录：Solr搜索应用服务器核心目录。\n> server/solr：Solr的索引库所在位置\n> server/solr-webapp：Solr的WAR核心应用\n> server/etc：Solr的核心配置\n\n## 5.修改启动参数\n\n> 修改启动参数，否则启动时报警告。提示设置SOLR_ULIMIT_CHECKS=false\n\n```\n[root@king solr]# cd bin && vim solr.in.sh\n```\n\n![img](https://gitee.com/ambitions-king/picture/raw/master/img/wps1976.tmp.jpg)\n\n## 6.启动solr\n\n> Solr内嵌Jetty，直接启动即可。默认监听8983端口。\n> Solr默认不推荐root账户启动，如果是root账户启动需要添加-force参数。\n\n```\n./solr start -force\n```\n\n启动成功如下图所示:\n\n![image-20211004114327791](https://gitee.com/ambitions-king/picture/raw/master/img/image-20211004114327791.png)\n\n==注意:阿里云服务器8983端口放行==\n\n![image-20211004114629744](https://gitee.com/ambitions-king/picture/raw/master/img/image-20211004114629744.png)\n\n## 7.可视化管理界面\n\n> 在浏览器输入ip:8983就可以打开solr可视化管理页面了\n\n![image-20211004114856090](https://gitee.com/ambitions-king/picture/raw/master/img/image-20211004114856090.png)\n\n左侧有5个菜单。分别是：\n（1）Dashboard：面板显示Solr的总体信息。\n（2）Logging：日志\n（3）Core Admin：Solr的核心。类似于数据的Database\n（4）Java Perperties：所有Java相关属性。\n（5）Thread Dump：线程相关信息。\n（6）如果有Core，将显示在此处。\n\n## 8.创建核心(索引库)\n\n==Solr安装完成后默认是没有核心的。需要手动配置。==\n\n**需要在solr/server/solr下新建文件夹，并给定配置文件，否则无法建立。**\n\n### 8.1 新建目录\n\n在 /local/soft/solr/server/solr中新建自定义名称目录。这里我创建了名为blog的目录\n\n```\n#进入对应文件夹\n[root@king ~]# cd /local/soft/solr/server/solr\n#创建blog文件夹\n[root@king solr]# mkdir blog\n```\n\n### 8.2 复制配置文件\n\n> 在configsets里面包含了_default和sample_techproducts_configs。里面都是配置文件示例。_default属于默认配置，较纯净。sample_techproducts_configs是带有了一些配置示例。\n\n```\n[root@king solr]# cp -r configsets/_default/conf/ blog/\n```\n\n### 8.3 创建 core\n\n在可视化管理界面填写如下信息\n\n![image-20211004174045581](https://gitee.com/ambitions-king/picture/raw/master/img/image-20211004174045581.png)\n\n最后点击Add Core按钮创建\n\n创建成功结果如下：\n\n![image-20211004174415937](https://gitee.com/ambitions-king/picture/raw/master/img/image-20211004174415937.png)\n\n## 9.安装中文分词器\n\n### 9.1上传文件\n\n上传ik-analyzer-8.2.0.jar到/local/upload文件夹下\n\n### 9.2复制文件\n\n将ik-analyzer-8.2.0.jar文件复制/local/soft/solr/server/solr-webapp/webapp/WEB-INF/lib文件夹下\n\n```shell\n[root@king upload]# cp ik-analyzer-8.2.0.jar /local/soft/solr/server/solr-webapp/webapp/WEB-INF/lib/\n```\n\n### 9.3修改配置文件\n\n#### 修改managed-schema文件\n\n```shell\n[root@king /]# vim /local/soft/solr/server/solr/blog/conf/managed-schema\n```\n\n```shell\n<fieldType name=\"text_zh_cn\" class=\"solr.TextField\">\n            <analyzer>\n                    <tokenizer class=\"org.wltea.analyzer.lucene.IKTokenizerFactory\" useSmart=\"false\" conf=\"ik.conf\"/>\n                    <filter class=\"solr.LowerCaseFilterFactory\"/>\n            </analyzer>\n            <analyzer type=\"query\">\n                    <tokenizer class=\"org.wltea.analyzer.lucene.IKTokenizerFactory\" useSmart=\"true\" conf=\"ik.conf\"/>\n                    <filter class=\"solr.LowerCaseFilterFactory\"/>\n            </analyzer>\n</fieldType>\n<!--自定义字段，类似于设计数据表一样-->\n\t<!--ID-->\n\t<!--ID 已经在前面有了-->\n\t<!--浏览量-->\n\t<field name=\"blog_view_count\" type=\"pint\" indexed=\"true\" stored=\"true\" required=\"true\" multiValued=\"false\" />\n\t<!--标题-->\n\t<field name=\"blog_title\" type=\"text_zh_cn\" indexed=\"true\" stored=\"true\" required=\"true\" multiValued=\"false\" />\n\t<!--主题-->\n\t<field name=\"blog_summary\" type=\"text_zh_cn\" indexed=\"true\" stored=\"true\" required=\"true\" multiValued=\"false\" />\n\t<!--创建时间-->\n\t<field name=\"blog_create_time\" type=\"pdate\" indexed=\"true\" stored=\"true\" required=\"true\" multiValued=\"false\" />\n\t<!--标签-->\n\t<field name=\"blog_labels\" type=\"pstring\" indexed=\"true\" stored=\"true\" required=\"true\" multiValued=\"false\" />\n\t<!--文章链接-->\n\t<field name=\"blog_url\" type=\"pstring\" indexed=\"true\" stored=\"true\" required=\"true\" multiValued=\"false\" />\n\t<!--分类ID-->\n\t<field name=\"blog_category_id\" type=\"pstring\" indexed=\"true\" stored=\"true\" required=\"true\" multiValued=\"false\" />\n\t<!--搜索item-->\n\t<field name=\"search_item\" type=\"text_zh_cn\" indexed=\"true\" stored=\"true\" required=\"true\" multiValued=\"true\" />\n\t<copyField source=\"blog_title\" dest=\"search_item\"/>\n\t<copyField source=\"blog_summary\" dest=\"search_item\"/>\n\t<copyField source=\"blog_labels\" dest=\"search_item\"/>\n```\n\n> 排版：Esc 退出编辑状态下：gg=G\n\n![image-20211004220435973](https://gitee.com/ambitions-king/picture/raw/master/img/image-20211004220435973.png)\n\n### 9.4 重启\n\n```\n[root@king /]# cd /local/soft/solr/bin/\n[root@king bin]# ./solr stop -all\n[root@king bin]# ./solr start -force\n```\n\n### 9.5 验证\n\n![image-20211004225457462](https://gitee.com/ambitions-king/picture/raw/master/img/image-20211004225457462.png)\n\n![img](https://upload-images.jianshu.io/upload_images/10139744-19785d5c0484474c.jpg)\n\n图片来源于:https://upload-images.jianshu.io/upload_images/10139744-19785d5c0484474c.jpg\n\n### 9.6 删除全部数据\n\n> 1)documents type 选择 XML \n> 2)documents 输入下面语句\n>\n> ```xml\n> <delete><query>*:*</query></delete>\n> <commit/>\n> ```\n>\n> \n\n### 10 使用DockerFile构建solr镜像\n\n#### 10.1 创建solr目录\n\n```sh\nmkdir solr\n```\n\n#### 10.2 新建docker-compose.yml文件\n\n```yml\nversion: '3.1'\nservices:\n  solr:\n    build: solrWithIKAnalyzer\n    restart: always\n    container_name: blog_solr\n    ports:\n      - 8983:8983\n```\n\n#### 10.3 将solrWithIKAnalyzer文件夹下的内容全部放入solr文件夹下\n\nsolrWithIKAnalyzer文件夹结构如下\n\n![image-20220106095731927](https://gitee.com/jinguoguang/images/raw/master/img/20220106095732.png)\n\n#### 10.4  solrWithIKAnalyzer目录下新建Dockerfile文件\n\n```sh\n#新建Dockerfile文件\nvim Dockerfile\n#填写如下内容\n```\n\n```dockerfile\nMAINTAINER king\n# 创建 Core，切换目录\nWORKDIR /opt/solr/server/solr\n# 创建目录\nRUN mkdir blog_core\n# 切换目录\nWORKDIR /opt/solr/server/solr/blog_core\n# 把这个Core名称添加到配置文件中，这样在前端就可以看到了\nRUN echo 'name=blog_core' > core.properties\n# 从模版中复制一份出来配置文件出来\nRUN cp -r /opt/solr/server/solr/configsets/sample_techproducts_configs/conf/ .\n# 进入到容器的lib文件夹\nWORKDIR /opt/solr/server/solr-webapp/webapp/WEB-INF/lib\n# 中文分词器\nRUN cp -r /opt/solr/contrib/analysis-extras/lucene-libs/lucene-analyzers-smartcn-5.5.5.jar .\n# 复制两个jar包进去\nADD ik-analyzer-solr5-5.x.jar .\nADD solr-analyzer-ik-5.1.0.jar .\nWORKDIR /opt/solr/server/solr-webapp/webapp/WEB-INF\n# 复制字典\nADD ext.dic .\nADD stopword.dic .\n# 配置扩展字典的配置文件\nADD IKAnalyzer.cfg.xml .\n# 增加分词配置\nCOPY managed-schema /opt/solr/server/solr/blog_core/conf\nWORKDIR /opt/solr\n```\n\n#### 10.5 在solrWithIKAnalyzer目录下构建\n\n```\ndocker build -t blog_solr:1.0 .\n#注意后面有个小点不要忽视\n```\n\n#### 10.6 在solr目录下使用docker-compose启动容器\n\n> Docker Compose是一个用来定义和运行复杂应用的Docker工具。一个使用Docker容器的应用，通常由多个容器组成。使用Docker Compose不再需要使用shell脚本来启动容器。 \n> Compose 通过一个配置文件来管理多个Docker容器，在配置文件中，所有的容器通过services来定义，然后使用docker-compose脚本来启动，停止和重启应用，和应用中的服务以及所有依赖服务的容器，非常适合组合使用多个容器进行开发的场景。\n\n##### 安装docker-composr\n\n- 从github上下载docker-compose二进制文件安装\n\n\n ```sh\n  sudo curl -L https://github.com/docker/compose/releases/download/1.16.1/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose\n ```\n\n  若是github访问太慢，也可以用daocloud下载\n\n```sh\nsudo curl -L https://get.daocloud.io/docker/compose/releases/download/1.25.1/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose\n```\n\n- 添加可执行权限\n\n ```sh\n  sudo chmod +x /usr/local/bin/docker-compose\n ```\n\n- 测试安装结果\n\n  ```sh\n  docker-compose --version\n  ```\n\n  \n\n```\n#以后台的方式运行容器。不会在终端上打印运行日志\ndocker-compose up -d\n# 停止运行的容器，但不会删除它们。\ndocker-compose stop\n#停止运行的容器，并且会删除已停止的容器以及已创建的所有网络\ndocker-compose down\n```\n\n\n\n# 七、minio服务器安装\n\n## 1.安装\n\n### 1.1拉取镜像\n\n```powershell\ndocker pull minio/minio\n```\n\n### 1.2创建并启动容器\n\n```powershell\ndocker run -d -p 9000:9000 -p 50000:50000 --name minio \\\n-e \"MINIO_ACCESS_KEY=admin\" \\\n-e \"MINIO_SECRET_KEY=admin123456\" \\\n-v /local/docker/minio/data:/data \\\n-v /local/d/minio/config:/root/.minio \\\nminio/minio server --console-address \":50000\" /data\n```\n\n### 1.3配置阿里云服务器安全组\n\n![image-20211020210958366](https://gitee.com/ambitions-king/picture/raw/master/img/image-20211020210958366.png)\n\n## 2.登录minio服务器管理控制台\n\n### 2.1创建游客用户\n\n![image-20211020211208054](https://gitee.com/ambitions-king/picture/raw/master/img/image-20211020211208054.png)\n\n![image-20211020211340198](https://gitee.com/ambitions-king/picture/raw/master/img/image-20211020211340198.png)\n\n> 将权限设置为只读\n\n### 2.3创建Bucket\n\n![image-20211020211507476](https://gitee.com/ambitions-king/picture/raw/master/img/image-20211020211507476.png)\n\n### 2.4设置Bucket权限为readwrite\n\n![image-20211020211701191](https://gitee.com/ambitions-king/picture/raw/master/img/image-20211020211701191.png)\n\n![image-20211020211729145](https://gitee.com/ambitions-king/picture/raw/master/img/image-20211020211729145.png)\n\n# 八、MongoDB服务安装\n\n## 1.拉取镜像\n\n```sh\ndocker pull mongo\n```\n\n## 2.创建目录\n\n```\nmkdir -p /local/docker/mongo/data\n```\n\n## 3.修改目录权限\n\n```sh\nchmod 777/local/docker/mongo/data\n```\n\n## 4.构建并启动容器\n\n```\ndocker run -d --name mongodb -v /local/docker/mongo/data:/data/db -p 27017:27017 -e MONGO_INITDB_ROOT_USERNAME=admin -e MONGO_INITDB_ROOT_PASSWORD=admin --privileged=true mongo:latest\n```\n> 参数说明\n> -d 后台运行容器\n>\n> --name mongodb 运行容器名\n>\n> -v /mydata/mongodb/datadb:/data/db 挂载目录\n>\n> -p 27017:27017：将27017映射到外部端口27017 将容器的27017端口映射到主机的27017端口，27017是和宿主机的通信接口，所有docker内部容器的连接使用27017接口，集群配置需连接容器内部27017端口，故最好保持前后端口一致\n>\n> -e MONGO_INITDB_ROOT_USERNAME=admin 指定用户名\n>\n> -e MONGO_INITDB_ROOT_PASSWORD=admin 指定密码\n>\n> --privileged=true 使得容器内的root拥有真正的root权限。否则，container内的root只是外部的一个普通用户权限\n\n## 5.查看mongodb日志\n\n```sh\ndocker logs mongodb\n```\n\n## 6.mongodb随 docker 自启动\n\n```sh\ndocker update mongodb --restart=always\n```\n\n注意：这里的 mongodb是容器的名字，不是镜像的名字。\n\n## 7. 启动|停止|重启\n\n```sh\ndocker start mongodb\n\ndocker stop mongodb\n\ndocker restart mongodb\n```\n\n注意：这里的 mongodb 是容器的名字，不是镜像的名字。\n\n## 8.进入mongodb (optional)\n\n```sh\ndocker exec -it mongodb /bin/bash\n```\n\n\n\n# docker 常用命令\n\n```sh\n批量启动容器\n\ndocker container start $(docker container ls -a -q) 或 docker start $(docker container ls -a -q) \n\n批量停止容器\n\ndocker container stop $(docker container ls -a -q) 或 docker stop $(docker container ls -a -q) \n\n批量重启容器\n\ndocker container restart $(docker container ls -a -q) 或 docker restart $(docker container ls -a -q) \n\n批量删除容器\n\ndocker container rm $(docker container ls -a -q) 或 docker rm ${docker container ls -a -q}\n\n批量杀死容器\n\ndocker container kill $(docker container ls -a -q) 或 docker kill ${docker container ls -a -q}\n\ndocker查询所有进程\n\ndocker ps -a\n\ndocker查询正常运行的进程\n\ndocker ps\n\n容器重新命名\n\ndocker rename 原容器名称 新容器名称\n\n举例: docker rename blissful_hoover solr\n```","source":"_posts/Docker使用手册.md","raw":"---\ntitle: Docker使用手册\nexcerpt: Docker 是基于Go语言实现的开源容器项目。利用操作系统本身已有的机制和特性，可以实现远超传统虚拟机的轻量级虚拟化（通俗解释：Docker内嵌极小型系统，例如Linux只有5M多，windows也是）。它是内核级的虚拟化。期望达到使项目运行环境“一次封装，到处运行的目的”。\ntags:\n  - 教程\n  - Docker\n  - 运维\ncategories:\n  - 运维\nindex_img: https://img2.baidu.com/it/u=2705144990,3944592429&fm=253&fmt=auto&app=138&f=JPEG?w=634&h=371\nabbrlink: 7c29175f\ndate: 2020-07-03 21:01:37\n---\n# 一、Docker简介\n> Docker 是基于Go语言实现的开源容器项目。利用操作系统本身已有的机制和特性，可以实现远超传统虚拟机的轻量级虚拟化（通俗解释：Docker内嵌极小型系统，例如Linux只有5M多，windows也是）。它是内核级的虚拟化。期望达到使项目运行环境“一次封装，到处运行的目的”。\n\n> 在Docker里面可以设置使用Windows还是Linux系统，默认是用Linux系统，基于Ubuntu的，只有5M多，包含了最基本功能。\n> 利用docker创建的运行环境叫做docker容器，容器是通过docker镜像创建的，docker镜像文件可以放在私有仓库中也可以放在共有仓库中。\n> 官网地址：https://www.docker.com\nDockerFile指令\n```DockerFile\nFROM\t\t# 基础镜像，依赖于谁\nMAINTAINER\t# 作者：姓名+邮箱\nRUN\t\t\t# 镜像构建的时候需要运行的命令\nADD\t\t\t# 添加，可以添加其他镜像\nWORKDIR\t\t# 镜像的工作目录\nVOLUME\t\t# 挂载的目录\nEXPOSE\t\t# 暴露的端口\nCMD\t\t\t# 指定这个容器启动的时候需要运行的命令，最后一个才会生效\nENTRYPOINT\t# 指定这个容器启动的时候需要运行的命令，可以追加\nONBUILD\t\t# 当dockerfile被构建的时候触发的指令\nCOPY\t\t# 类似ADD，讲文件拷贝到镜像中\nENV\t\t\t# 构建的时候设置环境变量\n\nARG\t\t\t# 创建镜像过程中使用的变量\nLABEL\t\t# 为生成的镜像添加元数据标签信息\nSTOPSIGNAL\t# 退出的信号值\nHEALTHCHECK\t# 配置所启动容器如何进行健康检查\nSHELL\t\t# 指定默认shell类型\n```\n\n# 二、Linux系统中Docker 安装与启动\n\n## 1.安装\n\n### 1.1.下载docker-ce repo\n\n```\ncurl https://download.docker.com/linux/centos/docker-ce.repo -o /etc/yum.repos.d/docker-ce.repo\n```\n\n### 1.2. 安装依赖\n\n```\nyum install -y https://download.docker.com/linux/fedora/30/x86_64/stable/Packages/containerd.io-1.2.6-3.3.fc30.x86_64.rpm\n```\n\n### 1.3. 安装docker-ce\n\n```\nyum install -y docker-ce\n```\n\n## 2.启动\n\n### 2.1. 启动命令\n\n```\nsystemctl start docker\n```\n\n### 2.2. 查看Docker状态\n\n```\ndocker info\n```\n\n结果如下:\n\n![image-20211003144315752](https://gitee.com/ambitions-king/picture/raw/master/img/image-20211003144315752.png)\n\n## 3.镜像加速器配置\n\n默认情况下Docker从Docker Hub上下载镜像资源，但速度很慢，可以通过配置国内的镜像加速器来解决。\n\n### 3.1. 使用阿里云镜像\n\n网址：https://www.aliyun.com/\n\n### 3.2. 进入容器镜像服务\n\n![img](https://gitee.com/ambitions-king/picture/raw/master/img/wps57F3.tmp.jpg)\n\n### 3.3.  进入管理控制台\n\n![img](https://gitee.com/ambitions-king/picture/raw/master/img/wpsA606.tmp.jpg)\n\n### 3.4. 进入镜像加速器\n\n![img](https://gitee.com/ambitions-king/picture/raw/master/img/wps5050.tmp.jpg)\n\n### 3.5. 选择对应的OS并配置\n\n![img](https://gitee.com/ambitions-king/picture/raw/master/img/wpsDEF5.tmp.jpg)\n\n### 3.6. 验证镜像加速器是否配置成功\n\n通过docker info命令验证镜像加速器配置，结果如下：\n\n![image-20211003145815941](https://gitee.com/ambitions-king/picture/raw/master/img/image-20211003145815941.png)\n\n# 三、安装redis\n\n## 1.获取redis镜像\n\n```\ndocker pull redis:6.0.5\n```\n\n![image-20211003150145019](https://gitee.com/ambitions-king/picture/raw/master/img/image-20211003150145019.png)\n\n## 2.查看本地镜像\n\n```\ndocker images\n```\n\n![image-20211003150246436](https://gitee.com/ambitions-king/picture/raw/master/img/image-20211003150246436.png)\n\n### 3.从官网获取redis.config配置文件\n\n```\n# 进入文件夹\ncd /local/docker\nwget http://download.redis.io/redis-stable/redis.conf   //下载redis配置文件\nvim redis.conf  //修改配置文件\n```\n\n> 1.注释bind 127.0.0.1。这里限制redis只能本地访问，注释掉之后使redis可以外部访问；\n> 2.protected-mode yes 修改为 protected-mode no。默认yes，开启保护模式，限制仅本地访问，改为no之后使redis可以外部访问；\n> 3.daemonize no 。默认no，当前界面将进入redis的命令行界面，exit强制退出或者关闭连接工具(putty,xshell等)都会导致redis进程退出。 改为yes意为以守护进程方式启动，该模式下，redis会在后台运行，并将进程pid号写入至redis.conf选项pidfile设置的文件中，此时redis将一直运行，除非手动kill该进程，如果改为yes会使以配置文件方式启动redis的方式失败。\n> 4.requirepass pwd。这里的pwd是自己设置的密码，可以不开启，不开启表示无需密码即可连接。\n> 5.databases 16。默认数据库个数16，可以不修改。\n> 6.appendonly no。默认 no，表示不开启aof方式持久化，改为appendonly yes表示开启aof，可以不修改该配置。\n\n文件夹如下:\n\n![image-20211003183929810](https://gitee.com/ambitions-king/picture/raw/master/img/image-20211003183929810.png)\n\n### 4. 启动redis\n\n```\ndocker run \\\n--name redis \\\n-p 6379:6379 \\\n--restart unless-stopped \\\n-v /local/docker/redis/data:/data \\\n-v /local/docker/redis/conf/redis.conf:/etc/redis/redis.conf \\\n-d redis redis-server /etc/redis/redis.conf \\\n```\n\n### 5. 查看redis运行是否成功\n\n```\n#查看redis容器运行\ndocker ps |grep redis \n#进入redis容器中\ndocker exec -it redis /bin/bash\n#使用redis客户端\nredis-cli\n#设置密码\nconfig set requirepass 123456\n```\n\n![image-20211003220721877](https://gitee.com/ambitions-king/picture/raw/master/img/image-20211003220721877.png)\n\n# 四、安装mysql\n\n## 1. 拉取镜像\n\n```\ndocker pull mysql:8.0.16\n```\n\n## 2. 创建数据目录和配置文件\n\n```\n[root@king docker]# mkdir -p mysql\n[root@king docker]# cd mysql/\n[root@king mysql]# mkdir data\n[root@king mysql]# mkdir conf\n[root@king mysql]# chmod -R 755 /local/docker/mysql\n[root@king mysql]# cd conf/\n[root@king conf]# vim my.cnf\n```\n\n添加以下内容到上述创建的配置文件中\n\n```shell\n[client]\n\n#socket = /usr/mysql/mysqld.sock\n\ndefault-character-set = utf8mb4\n\n[mysqld]\n\n#pid-file        = /var/run/mysqld/mysqld.pid\n\n#socket          = /var/run/mysqld/mysqld.sock\n\n#datadir         = /var/lib/mysql\n\n#socket = /usr/mysql/mysqld.sock\n\n#pid-file = /usr/mysql/mysqld.pid\n\ndatadir = /local/docker/mysql/data\n\ncharacter_set_server = utf8mb4\n\ncollation_server = utf8mb4_bin\n\nsecure-file-priv= NULL\n\n# Disabling symbolic-links is recommended to prevent assorted security risks\n\nsymbolic-links=0\n\n# Custom config should go here\n\n!includedir /etc/mysql/conf.d/\n\n```\n\n## 3.启动创建容器\n\n```\ndocker run --restart=unless-stopped -d --name mysql \\\n-v /local/docker/mysql/conf/my.cnf:/etc/mysql/my.cnf \\\n-v /local/docker/mysql/data:/var/lib/mysql -p 3306:3306 -e MYSQL_ROOT_PASSWORD=123456 mysql:8.0.16\n```\n\n查看容器启动情况\n\n```\ndocker info\n```\n\n## 4.修改mysql密码以及可访问主机\n\n- 进入mysql容器内部\n\n```\n[root@king conf]# docker exec -it mysql /bin/bash\n```\n\n- 连接mysql\n\n  ```\n  mysql -uroot -p\n  ```\n\n- 使用mysql库\n\n  ```\n  use mysql\n  ```\n\n- 修改访问主机以及密码等，设置为所有主机可访问\n\n  ```\n  ALTER USER 'root'@'%' IDENTIFIED WITH mysql_native_password BY '123456';\n  ```\n\n- 刷新\n\n  ```\n  flush privileges\n  ```\n\n\n# 五、安装JDK8\n## yum安装\n```shell\nyum install java-1.8.0-openjdk* -y\n```\n执行过这条命令无需配置，直接可以使用。\n## 1.上传文件\n\n将jdk文件上传到/local/upload\n\n## 2.解压压缩包\n\n```\ntar zxf jdk-8u311-linux-x64.tar.gz\n```\n\n## 3.移动文件\n\n```\nmv jdk1.8.0_311 /local/soft/jdk\n```\n\n## 4.配置环境变量\n\n> 在linux中/etc/profile此文件为环境变量配置文件。\n\n```\n#export PATH USER LOGNAME MAIL HOSTNAME HISTSIZE HISTCONTROL\nexport JAVA_HOME=/local/soft/jdk\nexport PATH=$JAVA_HOME/bin:$PATH\n```\n\n```\n#进入etc文件夹并且编译profile文件\ncd /etc && vim profile\n```\n\n![image-20211004113003179](https://gitee.com/ambitions-king/picture/raw/master/img/image-20211004113003179.png)\n\n## 5.解析文件\n\n> 不解析，必须通过重启才能生效。只要解析不需要重启了\n\n```\nsource /etc/profile\n```\n\n## 6.查看配置是否成功\n\n```\njava -version\n```\n\n![image-20211004113221989](https://gitee.com/ambitions-king/picture/raw/master/img/image-20211004113221989.png)\n\n# 六、安装solr\n\n## 1.上传文件\n\n> 上传压缩包solr-8.2.0.tgz到/local/upload中。\n\n## 2.解压\n\n```\n[root@king upload]# tar zxf solr-8.2.0.tgz \n```\n\n## 3.移动文件\n\n```\nmv solr-8.2.0 /local/soft/solr\n```\n\n## 4.Solr常用目录简介\n\n![image-20211004113700431](https://gitee.com/ambitions-king/picture/raw/master/img/image-20211004113700431.png)\n\n> bin目录：可执行文件所在目录。\n> dist目录：Solr对外提供的核心、扩展、插件等代码jar文件。\n> server目录：Solr搜索应用服务器核心目录。\n> server/solr：Solr的索引库所在位置\n> server/solr-webapp：Solr的WAR核心应用\n> server/etc：Solr的核心配置\n\n## 5.修改启动参数\n\n> 修改启动参数，否则启动时报警告。提示设置SOLR_ULIMIT_CHECKS=false\n\n```\n[root@king solr]# cd bin && vim solr.in.sh\n```\n\n![img](https://gitee.com/ambitions-king/picture/raw/master/img/wps1976.tmp.jpg)\n\n## 6.启动solr\n\n> Solr内嵌Jetty，直接启动即可。默认监听8983端口。\n> Solr默认不推荐root账户启动，如果是root账户启动需要添加-force参数。\n\n```\n./solr start -force\n```\n\n启动成功如下图所示:\n\n![image-20211004114327791](https://gitee.com/ambitions-king/picture/raw/master/img/image-20211004114327791.png)\n\n==注意:阿里云服务器8983端口放行==\n\n![image-20211004114629744](https://gitee.com/ambitions-king/picture/raw/master/img/image-20211004114629744.png)\n\n## 7.可视化管理界面\n\n> 在浏览器输入ip:8983就可以打开solr可视化管理页面了\n\n![image-20211004114856090](https://gitee.com/ambitions-king/picture/raw/master/img/image-20211004114856090.png)\n\n左侧有5个菜单。分别是：\n（1）Dashboard：面板显示Solr的总体信息。\n（2）Logging：日志\n（3）Core Admin：Solr的核心。类似于数据的Database\n（4）Java Perperties：所有Java相关属性。\n（5）Thread Dump：线程相关信息。\n（6）如果有Core，将显示在此处。\n\n## 8.创建核心(索引库)\n\n==Solr安装完成后默认是没有核心的。需要手动配置。==\n\n**需要在solr/server/solr下新建文件夹，并给定配置文件，否则无法建立。**\n\n### 8.1 新建目录\n\n在 /local/soft/solr/server/solr中新建自定义名称目录。这里我创建了名为blog的目录\n\n```\n#进入对应文件夹\n[root@king ~]# cd /local/soft/solr/server/solr\n#创建blog文件夹\n[root@king solr]# mkdir blog\n```\n\n### 8.2 复制配置文件\n\n> 在configsets里面包含了_default和sample_techproducts_configs。里面都是配置文件示例。_default属于默认配置，较纯净。sample_techproducts_configs是带有了一些配置示例。\n\n```\n[root@king solr]# cp -r configsets/_default/conf/ blog/\n```\n\n### 8.3 创建 core\n\n在可视化管理界面填写如下信息\n\n![image-20211004174045581](https://gitee.com/ambitions-king/picture/raw/master/img/image-20211004174045581.png)\n\n最后点击Add Core按钮创建\n\n创建成功结果如下：\n\n![image-20211004174415937](https://gitee.com/ambitions-king/picture/raw/master/img/image-20211004174415937.png)\n\n## 9.安装中文分词器\n\n### 9.1上传文件\n\n上传ik-analyzer-8.2.0.jar到/local/upload文件夹下\n\n### 9.2复制文件\n\n将ik-analyzer-8.2.0.jar文件复制/local/soft/solr/server/solr-webapp/webapp/WEB-INF/lib文件夹下\n\n```shell\n[root@king upload]# cp ik-analyzer-8.2.0.jar /local/soft/solr/server/solr-webapp/webapp/WEB-INF/lib/\n```\n\n### 9.3修改配置文件\n\n#### 修改managed-schema文件\n\n```shell\n[root@king /]# vim /local/soft/solr/server/solr/blog/conf/managed-schema\n```\n\n```shell\n<fieldType name=\"text_zh_cn\" class=\"solr.TextField\">\n            <analyzer>\n                    <tokenizer class=\"org.wltea.analyzer.lucene.IKTokenizerFactory\" useSmart=\"false\" conf=\"ik.conf\"/>\n                    <filter class=\"solr.LowerCaseFilterFactory\"/>\n            </analyzer>\n            <analyzer type=\"query\">\n                    <tokenizer class=\"org.wltea.analyzer.lucene.IKTokenizerFactory\" useSmart=\"true\" conf=\"ik.conf\"/>\n                    <filter class=\"solr.LowerCaseFilterFactory\"/>\n            </analyzer>\n</fieldType>\n<!--自定义字段，类似于设计数据表一样-->\n\t<!--ID-->\n\t<!--ID 已经在前面有了-->\n\t<!--浏览量-->\n\t<field name=\"blog_view_count\" type=\"pint\" indexed=\"true\" stored=\"true\" required=\"true\" multiValued=\"false\" />\n\t<!--标题-->\n\t<field name=\"blog_title\" type=\"text_zh_cn\" indexed=\"true\" stored=\"true\" required=\"true\" multiValued=\"false\" />\n\t<!--主题-->\n\t<field name=\"blog_summary\" type=\"text_zh_cn\" indexed=\"true\" stored=\"true\" required=\"true\" multiValued=\"false\" />\n\t<!--创建时间-->\n\t<field name=\"blog_create_time\" type=\"pdate\" indexed=\"true\" stored=\"true\" required=\"true\" multiValued=\"false\" />\n\t<!--标签-->\n\t<field name=\"blog_labels\" type=\"pstring\" indexed=\"true\" stored=\"true\" required=\"true\" multiValued=\"false\" />\n\t<!--文章链接-->\n\t<field name=\"blog_url\" type=\"pstring\" indexed=\"true\" stored=\"true\" required=\"true\" multiValued=\"false\" />\n\t<!--分类ID-->\n\t<field name=\"blog_category_id\" type=\"pstring\" indexed=\"true\" stored=\"true\" required=\"true\" multiValued=\"false\" />\n\t<!--搜索item-->\n\t<field name=\"search_item\" type=\"text_zh_cn\" indexed=\"true\" stored=\"true\" required=\"true\" multiValued=\"true\" />\n\t<copyField source=\"blog_title\" dest=\"search_item\"/>\n\t<copyField source=\"blog_summary\" dest=\"search_item\"/>\n\t<copyField source=\"blog_labels\" dest=\"search_item\"/>\n```\n\n> 排版：Esc 退出编辑状态下：gg=G\n\n![image-20211004220435973](https://gitee.com/ambitions-king/picture/raw/master/img/image-20211004220435973.png)\n\n### 9.4 重启\n\n```\n[root@king /]# cd /local/soft/solr/bin/\n[root@king bin]# ./solr stop -all\n[root@king bin]# ./solr start -force\n```\n\n### 9.5 验证\n\n![image-20211004225457462](https://gitee.com/ambitions-king/picture/raw/master/img/image-20211004225457462.png)\n\n![img](https://upload-images.jianshu.io/upload_images/10139744-19785d5c0484474c.jpg)\n\n图片来源于:https://upload-images.jianshu.io/upload_images/10139744-19785d5c0484474c.jpg\n\n### 9.6 删除全部数据\n\n> 1)documents type 选择 XML \n> 2)documents 输入下面语句\n>\n> ```xml\n> <delete><query>*:*</query></delete>\n> <commit/>\n> ```\n>\n> \n\n### 10 使用DockerFile构建solr镜像\n\n#### 10.1 创建solr目录\n\n```sh\nmkdir solr\n```\n\n#### 10.2 新建docker-compose.yml文件\n\n```yml\nversion: '3.1'\nservices:\n  solr:\n    build: solrWithIKAnalyzer\n    restart: always\n    container_name: blog_solr\n    ports:\n      - 8983:8983\n```\n\n#### 10.3 将solrWithIKAnalyzer文件夹下的内容全部放入solr文件夹下\n\nsolrWithIKAnalyzer文件夹结构如下\n\n![image-20220106095731927](https://gitee.com/jinguoguang/images/raw/master/img/20220106095732.png)\n\n#### 10.4  solrWithIKAnalyzer目录下新建Dockerfile文件\n\n```sh\n#新建Dockerfile文件\nvim Dockerfile\n#填写如下内容\n```\n\n```dockerfile\nMAINTAINER king\n# 创建 Core，切换目录\nWORKDIR /opt/solr/server/solr\n# 创建目录\nRUN mkdir blog_core\n# 切换目录\nWORKDIR /opt/solr/server/solr/blog_core\n# 把这个Core名称添加到配置文件中，这样在前端就可以看到了\nRUN echo 'name=blog_core' > core.properties\n# 从模版中复制一份出来配置文件出来\nRUN cp -r /opt/solr/server/solr/configsets/sample_techproducts_configs/conf/ .\n# 进入到容器的lib文件夹\nWORKDIR /opt/solr/server/solr-webapp/webapp/WEB-INF/lib\n# 中文分词器\nRUN cp -r /opt/solr/contrib/analysis-extras/lucene-libs/lucene-analyzers-smartcn-5.5.5.jar .\n# 复制两个jar包进去\nADD ik-analyzer-solr5-5.x.jar .\nADD solr-analyzer-ik-5.1.0.jar .\nWORKDIR /opt/solr/server/solr-webapp/webapp/WEB-INF\n# 复制字典\nADD ext.dic .\nADD stopword.dic .\n# 配置扩展字典的配置文件\nADD IKAnalyzer.cfg.xml .\n# 增加分词配置\nCOPY managed-schema /opt/solr/server/solr/blog_core/conf\nWORKDIR /opt/solr\n```\n\n#### 10.5 在solrWithIKAnalyzer目录下构建\n\n```\ndocker build -t blog_solr:1.0 .\n#注意后面有个小点不要忽视\n```\n\n#### 10.6 在solr目录下使用docker-compose启动容器\n\n> Docker Compose是一个用来定义和运行复杂应用的Docker工具。一个使用Docker容器的应用，通常由多个容器组成。使用Docker Compose不再需要使用shell脚本来启动容器。 \n> Compose 通过一个配置文件来管理多个Docker容器，在配置文件中，所有的容器通过services来定义，然后使用docker-compose脚本来启动，停止和重启应用，和应用中的服务以及所有依赖服务的容器，非常适合组合使用多个容器进行开发的场景。\n\n##### 安装docker-composr\n\n- 从github上下载docker-compose二进制文件安装\n\n\n ```sh\n  sudo curl -L https://github.com/docker/compose/releases/download/1.16.1/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose\n ```\n\n  若是github访问太慢，也可以用daocloud下载\n\n```sh\nsudo curl -L https://get.daocloud.io/docker/compose/releases/download/1.25.1/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose\n```\n\n- 添加可执行权限\n\n ```sh\n  sudo chmod +x /usr/local/bin/docker-compose\n ```\n\n- 测试安装结果\n\n  ```sh\n  docker-compose --version\n  ```\n\n  \n\n```\n#以后台的方式运行容器。不会在终端上打印运行日志\ndocker-compose up -d\n# 停止运行的容器，但不会删除它们。\ndocker-compose stop\n#停止运行的容器，并且会删除已停止的容器以及已创建的所有网络\ndocker-compose down\n```\n\n\n\n# 七、minio服务器安装\n\n## 1.安装\n\n### 1.1拉取镜像\n\n```powershell\ndocker pull minio/minio\n```\n\n### 1.2创建并启动容器\n\n```powershell\ndocker run -d -p 9000:9000 -p 50000:50000 --name minio \\\n-e \"MINIO_ACCESS_KEY=admin\" \\\n-e \"MINIO_SECRET_KEY=admin123456\" \\\n-v /local/docker/minio/data:/data \\\n-v /local/d/minio/config:/root/.minio \\\nminio/minio server --console-address \":50000\" /data\n```\n\n### 1.3配置阿里云服务器安全组\n\n![image-20211020210958366](https://gitee.com/ambitions-king/picture/raw/master/img/image-20211020210958366.png)\n\n## 2.登录minio服务器管理控制台\n\n### 2.1创建游客用户\n\n![image-20211020211208054](https://gitee.com/ambitions-king/picture/raw/master/img/image-20211020211208054.png)\n\n![image-20211020211340198](https://gitee.com/ambitions-king/picture/raw/master/img/image-20211020211340198.png)\n\n> 将权限设置为只读\n\n### 2.3创建Bucket\n\n![image-20211020211507476](https://gitee.com/ambitions-king/picture/raw/master/img/image-20211020211507476.png)\n\n### 2.4设置Bucket权限为readwrite\n\n![image-20211020211701191](https://gitee.com/ambitions-king/picture/raw/master/img/image-20211020211701191.png)\n\n![image-20211020211729145](https://gitee.com/ambitions-king/picture/raw/master/img/image-20211020211729145.png)\n\n# 八、MongoDB服务安装\n\n## 1.拉取镜像\n\n```sh\ndocker pull mongo\n```\n\n## 2.创建目录\n\n```\nmkdir -p /local/docker/mongo/data\n```\n\n## 3.修改目录权限\n\n```sh\nchmod 777/local/docker/mongo/data\n```\n\n## 4.构建并启动容器\n\n```\ndocker run -d --name mongodb -v /local/docker/mongo/data:/data/db -p 27017:27017 -e MONGO_INITDB_ROOT_USERNAME=admin -e MONGO_INITDB_ROOT_PASSWORD=admin --privileged=true mongo:latest\n```\n> 参数说明\n> -d 后台运行容器\n>\n> --name mongodb 运行容器名\n>\n> -v /mydata/mongodb/datadb:/data/db 挂载目录\n>\n> -p 27017:27017：将27017映射到外部端口27017 将容器的27017端口映射到主机的27017端口，27017是和宿主机的通信接口，所有docker内部容器的连接使用27017接口，集群配置需连接容器内部27017端口，故最好保持前后端口一致\n>\n> -e MONGO_INITDB_ROOT_USERNAME=admin 指定用户名\n>\n> -e MONGO_INITDB_ROOT_PASSWORD=admin 指定密码\n>\n> --privileged=true 使得容器内的root拥有真正的root权限。否则，container内的root只是外部的一个普通用户权限\n\n## 5.查看mongodb日志\n\n```sh\ndocker logs mongodb\n```\n\n## 6.mongodb随 docker 自启动\n\n```sh\ndocker update mongodb --restart=always\n```\n\n注意：这里的 mongodb是容器的名字，不是镜像的名字。\n\n## 7. 启动|停止|重启\n\n```sh\ndocker start mongodb\n\ndocker stop mongodb\n\ndocker restart mongodb\n```\n\n注意：这里的 mongodb 是容器的名字，不是镜像的名字。\n\n## 8.进入mongodb (optional)\n\n```sh\ndocker exec -it mongodb /bin/bash\n```\n\n\n\n# docker 常用命令\n\n```sh\n批量启动容器\n\ndocker container start $(docker container ls -a -q) 或 docker start $(docker container ls -a -q) \n\n批量停止容器\n\ndocker container stop $(docker container ls -a -q) 或 docker stop $(docker container ls -a -q) \n\n批量重启容器\n\ndocker container restart $(docker container ls -a -q) 或 docker restart $(docker container ls -a -q) \n\n批量删除容器\n\ndocker container rm $(docker container ls -a -q) 或 docker rm ${docker container ls -a -q}\n\n批量杀死容器\n\ndocker container kill $(docker container ls -a -q) 或 docker kill ${docker container ls -a -q}\n\ndocker查询所有进程\n\ndocker ps -a\n\ndocker查询正常运行的进程\n\ndocker ps\n\n容器重新命名\n\ndocker rename 原容器名称 新容器名称\n\n举例: docker rename blissful_hoover solr\n```","slug":"Docker使用手册","published":1,"updated":"2023-02-03T15:23:38.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clhrpaia30005eq6q5854ap1a","content":"<h1 id=\"一、Docker简介\"><a href=\"#一、Docker简介\" class=\"headerlink\" title=\"一、Docker简介\"></a>一、Docker简介</h1><blockquote>\n<p>Docker 是基于Go语言实现的开源容器项目。利用操作系统本身已有的机制和特性，可以实现远超传统虚拟机的轻量级虚拟化（通俗解释：Docker内嵌极小型系统，例如Linux只有5M多，windows也是）。它是内核级的虚拟化。期望达到使项目运行环境“一次封装，到处运行的目的”。</p>\n</blockquote>\n<blockquote>\n<p>在Docker里面可以设置使用Windows还是Linux系统，默认是用Linux系统，基于Ubuntu的，只有5M多，包含了最基本功能。<br>利用docker创建的运行环境叫做docker容器，容器是通过docker镜像创建的，docker镜像文件可以放在私有仓库中也可以放在共有仓库中。<br>官网地址：<a href=\"https://www.docker.com/\">https://www.docker.com</a><br>DockerFile指令</p>\n</blockquote>\n<div class=\"code-wrapper\"><pre><code class=\"hljs DockerFile\"><span class=\"hljs-keyword\">FROM</span>\t\t<span class=\"hljs-comment\"># 基础镜像，依赖于谁</span>\n<span class=\"hljs-keyword\">MAINTAINER</span>\t<span class=\"hljs-comment\"># 作者：姓名+邮箱</span>\n<span class=\"hljs-keyword\">RUN</span><span class=\"language-bash\">\t\t\t<span class=\"hljs-comment\"># 镜像构建的时候需要运行的命令</span></span>\n<span class=\"hljs-keyword\">ADD</span><span class=\"language-bash\">\t\t\t<span class=\"hljs-comment\"># 添加，可以添加其他镜像</span></span>\n<span class=\"hljs-keyword\">WORKDIR</span><span class=\"language-bash\">\t\t<span class=\"hljs-comment\"># 镜像的工作目录</span></span>\n<span class=\"hljs-keyword\">VOLUME</span><span class=\"language-bash\">\t\t<span class=\"hljs-comment\"># 挂载的目录</span></span>\n<span class=\"hljs-keyword\">EXPOSE</span>\t\t<span class=\"hljs-comment\"># 暴露的端口</span>\n<span class=\"hljs-keyword\">CMD</span><span class=\"language-bash\">\t\t\t<span class=\"hljs-comment\"># 指定这个容器启动的时候需要运行的命令，最后一个才会生效</span></span>\n<span class=\"hljs-keyword\">ENTRYPOINT</span><span class=\"language-bash\">\t<span class=\"hljs-comment\"># 指定这个容器启动的时候需要运行的命令，可以追加</span></span>\n<span class=\"hljs-keyword\">ONBUILD</span>\t\t<span class=\"hljs-comment\"># 当dockerfile被构建的时候触发的指令</span>\n<span class=\"hljs-keyword\">COPY</span><span class=\"language-bash\">\t\t<span class=\"hljs-comment\"># 类似ADD，讲文件拷贝到镜像中</span></span>\n<span class=\"hljs-keyword\">ENV</span>\t\t\t<span class=\"hljs-comment\"># 构建的时候设置环境变量</span>\n\n<span class=\"hljs-keyword\">ARG</span>\t\t\t<span class=\"hljs-comment\"># 创建镜像过程中使用的变量</span>\n<span class=\"hljs-keyword\">LABEL</span><span class=\"language-bash\">\t\t<span class=\"hljs-comment\"># 为生成的镜像添加元数据标签信息</span></span>\n<span class=\"hljs-keyword\">STOPSIGNAL</span>\t<span class=\"hljs-comment\"># 退出的信号值</span>\n<span class=\"hljs-keyword\">HEALTHCHECK</span><span class=\"language-bash\">\t<span class=\"hljs-comment\"># 配置所启动容器如何进行健康检查</span></span>\n<span class=\"hljs-keyword\">SHELL</span><span class=\"language-bash\">\t\t<span class=\"hljs-comment\"># 指定默认shell类型</span></span></code></pre></div>\n\n<h1 id=\"二、Linux系统中Docker-安装与启动\"><a href=\"#二、Linux系统中Docker-安装与启动\" class=\"headerlink\" title=\"二、Linux系统中Docker 安装与启动\"></a>二、Linux系统中Docker 安装与启动</h1><h2 id=\"1-安装\"><a href=\"#1-安装\" class=\"headerlink\" title=\"1.安装\"></a>1.安装</h2><h3 id=\"1-1-下载docker-ce-repo\"><a href=\"#1-1-下载docker-ce-repo\" class=\"headerlink\" title=\"1.1.下载docker-ce repo\"></a>1.1.下载docker-ce repo</h3><div class=\"code-wrapper\"><pre><code class=\"hljs awk\">curl https:<span class=\"hljs-regexp\">//</span>download.docker.com<span class=\"hljs-regexp\">/linux/</span>centos<span class=\"hljs-regexp\">/docker-ce.repo -o /</span>etc<span class=\"hljs-regexp\">/yum.repos.d/</span>docker-ce.repo</code></pre></div>\n\n<h3 id=\"1-2-安装依赖\"><a href=\"#1-2-安装依赖\" class=\"headerlink\" title=\"1.2. 安装依赖\"></a>1.2. 安装依赖</h3><div class=\"code-wrapper\"><pre><code class=\"hljs awk\">yum install -y https:<span class=\"hljs-regexp\">//</span>download.docker.com<span class=\"hljs-regexp\">/linux/</span>fedora<span class=\"hljs-regexp\">/30/</span>x86_64<span class=\"hljs-regexp\">/stable/</span>Packages/containerd.io-<span class=\"hljs-number\">1.2</span>.<span class=\"hljs-number\">6</span>-<span class=\"hljs-number\">3.3</span>.fc30.x86_64.rpm</code></pre></div>\n\n<h3 id=\"1-3-安装docker-ce\"><a href=\"#1-3-安装docker-ce\" class=\"headerlink\" title=\"1.3. 安装docker-ce\"></a>1.3. 安装docker-ce</h3><div class=\"code-wrapper\"><pre><code class=\"hljs cmake\">yum <span class=\"hljs-keyword\">install</span> -y docker-ce</code></pre></div>\n\n<h2 id=\"2-启动\"><a href=\"#2-启动\" class=\"headerlink\" title=\"2.启动\"></a>2.启动</h2><h3 id=\"2-1-启动命令\"><a href=\"#2-1-启动命令\" class=\"headerlink\" title=\"2.1. 启动命令\"></a>2.1. 启动命令</h3><div class=\"code-wrapper\"><pre><code class=\"hljs crmsh\">systemctl <span class=\"hljs-literal\">start</span> docker</code></pre></div>\n\n<h3 id=\"2-2-查看Docker状态\"><a href=\"#2-2-查看Docker状态\" class=\"headerlink\" title=\"2.2. 查看Docker状态\"></a>2.2. 查看Docker状态</h3><div class=\"code-wrapper\"><pre><code class=\"hljs nginx\"><span class=\"hljs-attribute\">docker</span> <span class=\"hljs-literal\">info</span></code></pre></div>\n\n<p>结果如下:</p>\n<p><img src=\"https://gitee.com/ambitions-king/picture/raw/master/img/image-20211003144315752.png\" alt=\"image-20211003144315752\"></p>\n<h2 id=\"3-镜像加速器配置\"><a href=\"#3-镜像加速器配置\" class=\"headerlink\" title=\"3.镜像加速器配置\"></a>3.镜像加速器配置</h2><p>默认情况下Docker从Docker Hub上下载镜像资源，但速度很慢，可以通过配置国内的镜像加速器来解决。</p>\n<h3 id=\"3-1-使用阿里云镜像\"><a href=\"#3-1-使用阿里云镜像\" class=\"headerlink\" title=\"3.1. 使用阿里云镜像\"></a>3.1. 使用阿里云镜像</h3><p>网址：<a href=\"https://www.aliyun.com/\">https://www.aliyun.com/</a></p>\n<h3 id=\"3-2-进入容器镜像服务\"><a href=\"#3-2-进入容器镜像服务\" class=\"headerlink\" title=\"3.2. 进入容器镜像服务\"></a>3.2. 进入容器镜像服务</h3><p><img src=\"https://gitee.com/ambitions-king/picture/raw/master/img/wps57F3.tmp.jpg\" alt=\"img\"></p>\n<h3 id=\"3-3-进入管理控制台\"><a href=\"#3-3-进入管理控制台\" class=\"headerlink\" title=\"3.3.  进入管理控制台\"></a>3.3.  进入管理控制台</h3><p><img src=\"https://gitee.com/ambitions-king/picture/raw/master/img/wpsA606.tmp.jpg\" alt=\"img\"></p>\n<h3 id=\"3-4-进入镜像加速器\"><a href=\"#3-4-进入镜像加速器\" class=\"headerlink\" title=\"3.4. 进入镜像加速器\"></a>3.4. 进入镜像加速器</h3><p><img src=\"https://gitee.com/ambitions-king/picture/raw/master/img/wps5050.tmp.jpg\" alt=\"img\"></p>\n<h3 id=\"3-5-选择对应的OS并配置\"><a href=\"#3-5-选择对应的OS并配置\" class=\"headerlink\" title=\"3.5. 选择对应的OS并配置\"></a>3.5. 选择对应的OS并配置</h3><p><img src=\"https://gitee.com/ambitions-king/picture/raw/master/img/wpsDEF5.tmp.jpg\" alt=\"img\"></p>\n<h3 id=\"3-6-验证镜像加速器是否配置成功\"><a href=\"#3-6-验证镜像加速器是否配置成功\" class=\"headerlink\" title=\"3.6. 验证镜像加速器是否配置成功\"></a>3.6. 验证镜像加速器是否配置成功</h3><p>通过docker info命令验证镜像加速器配置，结果如下：</p>\n<p><img src=\"https://gitee.com/ambitions-king/picture/raw/master/img/image-20211003145815941.png\" alt=\"image-20211003145815941\"></p>\n<h1 id=\"三、安装redis\"><a href=\"#三、安装redis\" class=\"headerlink\" title=\"三、安装redis\"></a>三、安装redis</h1><h2 id=\"1-获取redis镜像\"><a href=\"#1-获取redis镜像\" class=\"headerlink\" title=\"1.获取redis镜像\"></a>1.获取redis镜像</h2><div class=\"code-wrapper\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">docker</span> pull redis:<span class=\"hljs-number\">6</span>.<span class=\"hljs-number\">0</span>.<span class=\"hljs-number\">5</span></code></pre></div>\n\n<p><img src=\"https://gitee.com/ambitions-king/picture/raw/master/img/image-20211003150145019.png\" alt=\"image-20211003150145019\"></p>\n<h2 id=\"2-查看本地镜像\"><a href=\"#2-查看本地镜像\" class=\"headerlink\" title=\"2.查看本地镜像\"></a>2.查看本地镜像</h2><div class=\"code-wrapper\"><pre><code class=\"hljs ebnf\"><span class=\"hljs-attribute\">docker images</span></code></pre></div>\n\n<p><img src=\"https://gitee.com/ambitions-king/picture/raw/master/img/image-20211003150246436.png\" alt=\"image-20211003150246436\"></p>\n<h3 id=\"3-从官网获取redis-config配置文件\"><a href=\"#3-从官网获取redis-config配置文件\" class=\"headerlink\" title=\"3.从官网获取redis.config配置文件\"></a>3.从官网获取redis.config配置文件</h3><div class=\"code-wrapper\"><pre><code class=\"hljs awk\"><span class=\"hljs-comment\"># 进入文件夹</span>\ncd <span class=\"hljs-regexp\">/local/</span>docker\nwget http:<span class=\"hljs-regexp\">//</span>download.redis.io<span class=\"hljs-regexp\">/redis-stable/</span>redis.conf   <span class=\"hljs-regexp\">//</span>下载redis配置文件\nvim redis.conf  <span class=\"hljs-regexp\">//</span>修改配置文件</code></pre></div>\n\n<blockquote>\n<p>1.注释bind 127.0.0.1。这里限制redis只能本地访问，注释掉之后使redis可以外部访问；<br>2.protected-mode yes 修改为 protected-mode no。默认yes，开启保护模式，限制仅本地访问，改为no之后使redis可以外部访问；<br>3.daemonize no 。默认no，当前界面将进入redis的命令行界面，exit强制退出或者关闭连接工具(putty,xshell等)都会导致redis进程退出。 改为yes意为以守护进程方式启动，该模式下，redis会在后台运行，并将进程pid号写入至redis.conf选项pidfile设置的文件中，此时redis将一直运行，除非手动kill该进程，如果改为yes会使以配置文件方式启动redis的方式失败。<br>4.requirepass pwd。这里的pwd是自己设置的密码，可以不开启，不开启表示无需密码即可连接。<br>5.databases 16。默认数据库个数16，可以不修改。<br>6.appendonly no。默认 no，表示不开启aof方式持久化，改为appendonly yes表示开启aof，可以不修改该配置。</p>\n</blockquote>\n<p>文件夹如下:</p>\n<p><img src=\"https://gitee.com/ambitions-king/picture/raw/master/img/image-20211003183929810.png\" alt=\"image-20211003183929810\"></p>\n<h3 id=\"4-启动redis\"><a href=\"#4-启动redis\" class=\"headerlink\" title=\"4. 启动redis\"></a>4. 启动redis</h3><div class=\"code-wrapper\"><pre><code class=\"hljs awk\">docker run \\\n--name redis \\\n-p <span class=\"hljs-number\">6379</span>:<span class=\"hljs-number\">6379</span> \\\n--restart unless-stopped \\\n-v <span class=\"hljs-regexp\">/local/</span>docker<span class=\"hljs-regexp\">/redis/</span>data:/data \\\n-v <span class=\"hljs-regexp\">/local/</span>docker<span class=\"hljs-regexp\">/redis/</span>conf<span class=\"hljs-regexp\">/redis.conf:/</span>etc<span class=\"hljs-regexp\">/redis/</span>redis.conf \\\n-d redis redis-server <span class=\"hljs-regexp\">/etc/</span>redis/redis.conf \\</code></pre></div>\n\n<h3 id=\"5-查看redis运行是否成功\"><a href=\"#5-查看redis运行是否成功\" class=\"headerlink\" title=\"5. 查看redis运行是否成功\"></a>5. 查看redis运行是否成功</h3><div class=\"code-wrapper\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\">#查看redis容器运行</span>\ndocker ps |grep redis \n<span class=\"hljs-comment\">#进入redis容器中</span>\ndocker <span class=\"hljs-built_in\">exec</span> -it redis /bin/bash\n<span class=\"hljs-comment\">#使用redis客户端</span>\nredis-cli\n<span class=\"hljs-comment\">#设置密码</span>\nconfig <span class=\"hljs-built_in\">set</span> requirepass 123456</code></pre></div>\n\n<p><img src=\"https://gitee.com/ambitions-king/picture/raw/master/img/image-20211003220721877.png\" alt=\"image-20211003220721877\"></p>\n<h1 id=\"四、安装mysql\"><a href=\"#四、安装mysql\" class=\"headerlink\" title=\"四、安装mysql\"></a>四、安装mysql</h1><h2 id=\"1-拉取镜像\"><a href=\"#1-拉取镜像\" class=\"headerlink\" title=\"1. 拉取镜像\"></a>1. 拉取镜像</h2><div class=\"code-wrapper\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">docker</span> pull mysql:<span class=\"hljs-number\">8</span>.<span class=\"hljs-number\">0</span>.<span class=\"hljs-number\">16</span></code></pre></div>\n\n<h2 id=\"2-创建数据目录和配置文件\"><a href=\"#2-创建数据目录和配置文件\" class=\"headerlink\" title=\"2. 创建数据目录和配置文件\"></a>2. 创建数据目录和配置文件</h2><div class=\"code-wrapper\"><pre><code class=\"hljs autoit\">[root<span class=\"hljs-symbol\">@king</span> docker]<span class=\"hljs-meta\"># mkdir -p mysql</span>\n[root<span class=\"hljs-symbol\">@king</span> docker]<span class=\"hljs-meta\"># cd mysql/</span>\n[root<span class=\"hljs-symbol\">@king</span> mysql]<span class=\"hljs-meta\"># mkdir data</span>\n[root<span class=\"hljs-symbol\">@king</span> mysql]<span class=\"hljs-meta\"># mkdir conf</span>\n[root<span class=\"hljs-symbol\">@king</span> mysql]<span class=\"hljs-meta\"># chmod -R 755 /local/docker/mysql</span>\n[root<span class=\"hljs-symbol\">@king</span> mysql]<span class=\"hljs-meta\"># cd conf/</span>\n[root<span class=\"hljs-symbol\">@king</span> conf]<span class=\"hljs-meta\"># vim my.cnf</span></code></pre></div>\n\n<p>添加以下内容到上述创建的配置文件中</p>\n<div class=\"code-wrapper\"><pre><code class=\"hljs shell\">[client]\n<span class=\"hljs-meta prompt_\"></span>\n<span class=\"hljs-meta prompt_\">#</span><span class=\"language-bash\">socket = /usr/mysql/mysqld.sock</span>\n\ndefault-character-set = utf8mb4\n\n[mysqld]\n<span class=\"hljs-meta prompt_\"></span>\n<span class=\"hljs-meta prompt_\">#</span><span class=\"language-bash\">pid-file        = /var/run/mysqld/mysqld.pid</span>\n<span class=\"hljs-meta prompt_\"></span>\n<span class=\"hljs-meta prompt_\">#</span><span class=\"language-bash\">socket          = /var/run/mysqld/mysqld.sock</span>\n<span class=\"hljs-meta prompt_\"></span>\n<span class=\"hljs-meta prompt_\">#</span><span class=\"language-bash\">datadir         = /var/lib/mysql</span>\n<span class=\"hljs-meta prompt_\"></span>\n<span class=\"hljs-meta prompt_\">#</span><span class=\"language-bash\">socket = /usr/mysql/mysqld.sock</span>\n<span class=\"hljs-meta prompt_\"></span>\n<span class=\"hljs-meta prompt_\">#</span><span class=\"language-bash\">pid-file = /usr/mysql/mysqld.pid</span>\n\ndatadir = /local/docker/mysql/data\n\ncharacter_set_server = utf8mb4\n\ncollation_server = utf8mb4_bin\n\nsecure-file-priv= NULL\n<span class=\"hljs-meta prompt_\"></span>\n<span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">Disabling symbolic-links is recommended to prevent assorted security risks</span>\n\nsymbolic-links=0\n<span class=\"hljs-meta prompt_\"></span>\n<span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">Custom config should go here</span>\n\n!includedir /etc/mysql/conf.d/\n</code></pre></div>\n\n<h2 id=\"3-启动创建容器\"><a href=\"#3-启动创建容器\" class=\"headerlink\" title=\"3.启动创建容器\"></a>3.启动创建容器</h2><div class=\"code-wrapper\"><pre><code class=\"hljs awk\">docker run --restart=unless-stopped -d --name mysql \\\n-v <span class=\"hljs-regexp\">/local/</span>docker<span class=\"hljs-regexp\">/mysql/</span>conf<span class=\"hljs-regexp\">/my.cnf:/</span>etc<span class=\"hljs-regexp\">/mysql/my</span>.cnf \\\n-v <span class=\"hljs-regexp\">/local/</span>docker<span class=\"hljs-regexp\">/mysql/</span>data:<span class=\"hljs-regexp\">/var/</span>lib/mysql -p <span class=\"hljs-number\">3306</span>:<span class=\"hljs-number\">3306</span> -e MYSQL_ROOT_PASSWORD=<span class=\"hljs-number\">123456</span> mysql:<span class=\"hljs-number\">8.0</span>.<span class=\"hljs-number\">16</span></code></pre></div>\n\n<p>查看容器启动情况</p>\n<div class=\"code-wrapper\"><pre><code class=\"hljs nginx\"><span class=\"hljs-attribute\">docker</span> <span class=\"hljs-literal\">info</span></code></pre></div>\n\n<h2 id=\"4-修改mysql密码以及可访问主机\"><a href=\"#4-修改mysql密码以及可访问主机\" class=\"headerlink\" title=\"4.修改mysql密码以及可访问主机\"></a>4.修改mysql密码以及可访问主机</h2><ul>\n<li>进入mysql容器内部</li>\n</ul>\n<div class=\"code-wrapper\"><pre><code class=\"hljs autoit\">[root<span class=\"hljs-symbol\">@king</span> conf]<span class=\"hljs-meta\"># docker exec -it mysql /bin/bash</span></code></pre></div>\n\n<ul>\n<li><p>连接mysql</p>\n<div class=\"code-wrapper\"><pre><code class=\"hljs css\">mysql -uroot -<span class=\"hljs-selector-tag\">p</span></code></pre></div></li>\n<li><p>使用mysql库</p>\n<div class=\"code-wrapper\"><pre><code class=\"hljs actionscript\"><span class=\"hljs-keyword\">use</span> mysql</code></pre></div></li>\n<li><p>修改访问主机以及密码等，设置为所有主机可访问</p>\n<div class=\"code-wrapper\"><pre><code class=\"hljs pgsql\"><span class=\"hljs-keyword\">ALTER</span> <span class=\"hljs-keyword\">USER</span> <span class=\"hljs-string\">&#x27;root&#x27;</span>@<span class=\"hljs-string\">&#x27;%&#x27;</span> IDENTIFIED <span class=\"hljs-keyword\">WITH</span> mysql_native_password <span class=\"hljs-keyword\">BY</span> <span class=\"hljs-string\">&#x27;123456&#x27;</span>;</code></pre></div></li>\n<li><p>刷新</p>\n<div class=\"code-wrapper\"><pre><code class=\"hljs arduino\">flush privileges</code></pre></div></li>\n</ul>\n<h1 id=\"五、安装JDK8\"><a href=\"#五、安装JDK8\" class=\"headerlink\" title=\"五、安装JDK8\"></a>五、安装JDK8</h1><h2 id=\"yum安装\"><a href=\"#yum安装\" class=\"headerlink\" title=\"yum安装\"></a>yum安装</h2><div class=\"code-wrapper\"><pre><code class=\"hljs shell\">yum install java-1.8.0-openjdk* -y</code></pre></div>\n<p>执行过这条命令无需配置，直接可以使用。</p>\n<h2 id=\"1-上传文件\"><a href=\"#1-上传文件\" class=\"headerlink\" title=\"1.上传文件\"></a>1.上传文件</h2><p>将jdk文件上传到/local/upload</p>\n<h2 id=\"2-解压压缩包\"><a href=\"#2-解压压缩包\" class=\"headerlink\" title=\"2.解压压缩包\"></a>2.解压压缩包</h2><div class=\"code-wrapper\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">tar</span> zxf jdk-<span class=\"hljs-number\">8</span>u311-linux-x64.tar.gz</code></pre></div>\n\n<h2 id=\"3-移动文件\"><a href=\"#3-移动文件\" class=\"headerlink\" title=\"3.移动文件\"></a>3.移动文件</h2><div class=\"code-wrapper\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">mv</span> jdk1.<span class=\"hljs-number\">8</span>.<span class=\"hljs-number\">0</span>_311 /local/soft/jdk</code></pre></div>\n\n<h2 id=\"4-配置环境变量\"><a href=\"#4-配置环境变量\" class=\"headerlink\" title=\"4.配置环境变量\"></a>4.配置环境变量</h2><blockquote>\n<p>在linux中/etc/profile此文件为环境变量配置文件。</p>\n</blockquote>\n<div class=\"code-wrapper\"><pre><code class=\"hljs routeros\"><span class=\"hljs-comment\">#export PATH USER LOGNAME MAIL HOSTNAME HISTSIZE HISTCONTROL</span>\n<span class=\"hljs-built_in\">export</span> <span class=\"hljs-attribute\">JAVA_HOME</span>=/local/soft/jdk\n<span class=\"hljs-built_in\">export</span> <span class=\"hljs-attribute\">PATH</span>=<span class=\"hljs-variable\">$JAVA_HOME</span>/bin:$PATH</code></pre></div>\n\n<div class=\"code-wrapper\"><pre><code class=\"hljs vim\">#进入etc文件夹并且编译<span class=\"hljs-keyword\">profile</span>文件\n<span class=\"hljs-keyword\">cd</span> /etc &amp;&amp; <span class=\"hljs-keyword\">vim</span> <span class=\"hljs-keyword\">profile</span></code></pre></div>\n\n<p><img src=\"https://gitee.com/ambitions-king/picture/raw/master/img/image-20211004113003179.png\" alt=\"image-20211004113003179\"></p>\n<h2 id=\"5-解析文件\"><a href=\"#5-解析文件\" class=\"headerlink\" title=\"5.解析文件\"></a>5.解析文件</h2><blockquote>\n<p>不解析，必须通过重启才能生效。只要解析不需要重启了</p>\n</blockquote>\n<div class=\"code-wrapper\"><pre><code class=\"hljs gradle\"><span class=\"hljs-keyword\">source</span> <span class=\"hljs-regexp\">/etc/</span>profile</code></pre></div>\n\n<h2 id=\"6-查看配置是否成功\"><a href=\"#6-查看配置是否成功\" class=\"headerlink\" title=\"6.查看配置是否成功\"></a>6.查看配置是否成功</h2><div class=\"code-wrapper\"><pre><code class=\"hljs applescript\">java -<span class=\"hljs-built_in\">version</span></code></pre></div>\n\n<p><img src=\"https://gitee.com/ambitions-king/picture/raw/master/img/image-20211004113221989.png\" alt=\"image-20211004113221989\"></p>\n<h1 id=\"六、安装solr\"><a href=\"#六、安装solr\" class=\"headerlink\" title=\"六、安装solr\"></a>六、安装solr</h1><h2 id=\"1-上传文件-1\"><a href=\"#1-上传文件-1\" class=\"headerlink\" title=\"1.上传文件\"></a>1.上传文件</h2><blockquote>\n<p>上传压缩包solr-8.2.0.tgz到/local/upload中。</p>\n</blockquote>\n<h2 id=\"2-解压\"><a href=\"#2-解压\" class=\"headerlink\" title=\"2.解压\"></a>2.解压</h2><div class=\"code-wrapper\"><pre><code class=\"hljs autoit\">[root<span class=\"hljs-symbol\">@king</span> upload]<span class=\"hljs-meta\"># tar zxf solr-8.2.0.tgz </span></code></pre></div>\n\n<h2 id=\"3-移动文件-1\"><a href=\"#3-移动文件-1\" class=\"headerlink\" title=\"3.移动文件\"></a>3.移动文件</h2><div class=\"code-wrapper\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">mv</span> solr-<span class=\"hljs-number\">8</span>.<span class=\"hljs-number\">2</span>.<span class=\"hljs-number\">0</span> /local/soft/solr</code></pre></div>\n\n<h2 id=\"4-Solr常用目录简介\"><a href=\"#4-Solr常用目录简介\" class=\"headerlink\" title=\"4.Solr常用目录简介\"></a>4.Solr常用目录简介</h2><p><img src=\"https://gitee.com/ambitions-king/picture/raw/master/img/image-20211004113700431.png\" alt=\"image-20211004113700431\"></p>\n<blockquote>\n<p>bin目录：可执行文件所在目录。<br>dist目录：Solr对外提供的核心、扩展、插件等代码jar文件。<br>server目录：Solr搜索应用服务器核心目录。<br>server/solr：Solr的索引库所在位置<br>server/solr-webapp：Solr的WAR核心应用<br>server/etc：Solr的核心配置</p>\n</blockquote>\n<h2 id=\"5-修改启动参数\"><a href=\"#5-修改启动参数\" class=\"headerlink\" title=\"5.修改启动参数\"></a>5.修改启动参数</h2><blockquote>\n<p>修改启动参数，否则启动时报警告。提示设置SOLR_ULIMIT_CHECKS=false</p>\n</blockquote>\n<div class=\"code-wrapper\"><pre><code class=\"hljs vim\">[root@king solr]# <span class=\"hljs-keyword\">cd</span> bin &amp;&amp; <span class=\"hljs-keyword\">vim</span> solr.in.<span class=\"hljs-keyword\">sh</span></code></pre></div>\n\n<p><img src=\"https://gitee.com/ambitions-king/picture/raw/master/img/wps1976.tmp.jpg\" alt=\"img\"></p>\n<h2 id=\"6-启动solr\"><a href=\"#6-启动solr\" class=\"headerlink\" title=\"6.启动solr\"></a>6.启动solr</h2><blockquote>\n<p>Solr内嵌Jetty，直接启动即可。默认监听8983端口。<br>Solr默认不推荐root账户启动，如果是root账户启动需要添加-force参数。</p>\n</blockquote>\n<div class=\"code-wrapper\"><pre><code class=\"hljs bash\">./solr start -force</code></pre></div>\n\n<p>启动成功如下图所示:</p>\n<p><img src=\"https://gitee.com/ambitions-king/picture/raw/master/img/image-20211004114327791.png\" alt=\"image-20211004114327791\"></p>\n<p>==注意:阿里云服务器8983端口放行==</p>\n<p><img src=\"https://gitee.com/ambitions-king/picture/raw/master/img/image-20211004114629744.png\" alt=\"image-20211004114629744\"></p>\n<h2 id=\"7-可视化管理界面\"><a href=\"#7-可视化管理界面\" class=\"headerlink\" title=\"7.可视化管理界面\"></a>7.可视化管理界面</h2><blockquote>\n<p>在浏览器输入ip:8983就可以打开solr可视化管理页面了</p>\n</blockquote>\n<p><img src=\"https://gitee.com/ambitions-king/picture/raw/master/img/image-20211004114856090.png\" alt=\"image-20211004114856090\"></p>\n<p>左侧有5个菜单。分别是：<br>（1）Dashboard：面板显示Solr的总体信息。<br>（2）Logging：日志<br>（3）Core Admin：Solr的核心。类似于数据的Database<br>（4）Java Perperties：所有Java相关属性。<br>（5）Thread Dump：线程相关信息。<br>（6）如果有Core，将显示在此处。</p>\n<h2 id=\"8-创建核心-索引库\"><a href=\"#8-创建核心-索引库\" class=\"headerlink\" title=\"8.创建核心(索引库)\"></a>8.创建核心(索引库)</h2><p>==Solr安装完成后默认是没有核心的。需要手动配置。==</p>\n<p><strong>需要在solr/server/solr下新建文件夹，并给定配置文件，否则无法建立。</strong></p>\n<h3 id=\"8-1-新建目录\"><a href=\"#8-1-新建目录\" class=\"headerlink\" title=\"8.1 新建目录\"></a>8.1 新建目录</h3><p>在 /local/soft/solr/server/solr中新建自定义名称目录。这里我创建了名为blog的目录</p>\n<div class=\"code-wrapper\"><pre><code class=\"hljs autoit\"><span class=\"hljs-meta\">#进入对应文件夹</span>\n[root<span class=\"hljs-symbol\">@king</span> ~]<span class=\"hljs-meta\"># cd /local/soft/solr/server/solr</span>\n<span class=\"hljs-meta\">#创建blog文件夹</span>\n[root<span class=\"hljs-symbol\">@king</span> solr]<span class=\"hljs-meta\"># mkdir blog</span></code></pre></div>\n\n<h3 id=\"8-2-复制配置文件\"><a href=\"#8-2-复制配置文件\" class=\"headerlink\" title=\"8.2 复制配置文件\"></a>8.2 复制配置文件</h3><blockquote>\n<p>在configsets里面包含了_default和sample_techproducts_configs。里面都是配置文件示例。_default属于默认配置，较纯净。sample_techproducts_configs是带有了一些配置示例。</p>\n</blockquote>\n<div class=\"code-wrapper\"><pre><code class=\"hljs gradle\">[root@king solr]# cp -r configsets<span class=\"hljs-regexp\">/_default/</span>conf<span class=\"hljs-regexp\">/ blog/</span></code></pre></div>\n\n<h3 id=\"8-3-创建-core\"><a href=\"#8-3-创建-core\" class=\"headerlink\" title=\"8.3 创建 core\"></a>8.3 创建 core</h3><p>在可视化管理界面填写如下信息</p>\n<p><img src=\"https://gitee.com/ambitions-king/picture/raw/master/img/image-20211004174045581.png\" alt=\"image-20211004174045581\"></p>\n<p>最后点击Add Core按钮创建</p>\n<p>创建成功结果如下：</p>\n<p><img src=\"https://gitee.com/ambitions-king/picture/raw/master/img/image-20211004174415937.png\" alt=\"image-20211004174415937\"></p>\n<h2 id=\"9-安装中文分词器\"><a href=\"#9-安装中文分词器\" class=\"headerlink\" title=\"9.安装中文分词器\"></a>9.安装中文分词器</h2><h3 id=\"9-1上传文件\"><a href=\"#9-1上传文件\" class=\"headerlink\" title=\"9.1上传文件\"></a>9.1上传文件</h3><p>上传ik-analyzer-8.2.0.jar到/local/upload文件夹下</p>\n<h3 id=\"9-2复制文件\"><a href=\"#9-2复制文件\" class=\"headerlink\" title=\"9.2复制文件\"></a>9.2复制文件</h3><p>将ik-analyzer-8.2.0.jar文件复制/local/soft/solr/server/solr-webapp/webapp/WEB-INF/lib文件夹下</p>\n<div class=\"code-wrapper\"><pre><code class=\"hljs shell\">[root@king upload]# cp ik-analyzer-8.2.0.jar /local/soft/solr/server/solr-webapp/webapp/WEB-INF/lib/</code></pre></div>\n\n<h3 id=\"9-3修改配置文件\"><a href=\"#9-3修改配置文件\" class=\"headerlink\" title=\"9.3修改配置文件\"></a>9.3修改配置文件</h3><h4 id=\"修改managed-schema文件\"><a href=\"#修改managed-schema文件\" class=\"headerlink\" title=\"修改managed-schema文件\"></a>修改managed-schema文件</h4><div class=\"code-wrapper\"><pre><code class=\"hljs shell\">[root@king /]# vim /local/soft/solr/server/solr/blog/conf/managed-schema</code></pre></div>\n\n<div class=\"code-wrapper\"><pre><code class=\"hljs shell\">&lt;fieldType name=&quot;text_zh_cn&quot; class=&quot;solr.TextField&quot;&gt;\n            &lt;analyzer&gt;\n                    &lt;tokenizer class=&quot;org.wltea.analyzer.lucene.IKTokenizerFactory&quot; useSmart=&quot;false&quot; conf=&quot;ik.conf&quot;/&gt;\n                    &lt;filter class=&quot;solr.LowerCaseFilterFactory&quot;/&gt;\n            &lt;/analyzer&gt;\n            &lt;analyzer type=&quot;query&quot;&gt;\n                    &lt;tokenizer class=&quot;org.wltea.analyzer.lucene.IKTokenizerFactory&quot; useSmart=&quot;true&quot; conf=&quot;ik.conf&quot;/&gt;\n                    &lt;filter class=&quot;solr.LowerCaseFilterFactory&quot;/&gt;\n            &lt;/analyzer&gt;\n&lt;/fieldType&gt;\n&lt;!--自定义字段，类似于设计数据表一样--&gt;\n\t&lt;!--ID--&gt;\n\t&lt;!--ID 已经在前面有了--&gt;\n\t&lt;!--浏览量--&gt;\n\t&lt;field name=&quot;blog_view_count&quot; type=&quot;pint&quot; indexed=&quot;true&quot; stored=&quot;true&quot; required=&quot;true&quot; multiValued=&quot;false&quot; /&gt;\n\t&lt;!--标题--&gt;\n\t&lt;field name=&quot;blog_title&quot; type=&quot;text_zh_cn&quot; indexed=&quot;true&quot; stored=&quot;true&quot; required=&quot;true&quot; multiValued=&quot;false&quot; /&gt;\n\t&lt;!--主题--&gt;\n\t&lt;field name=&quot;blog_summary&quot; type=&quot;text_zh_cn&quot; indexed=&quot;true&quot; stored=&quot;true&quot; required=&quot;true&quot; multiValued=&quot;false&quot; /&gt;\n\t&lt;!--创建时间--&gt;\n\t&lt;field name=&quot;blog_create_time&quot; type=&quot;pdate&quot; indexed=&quot;true&quot; stored=&quot;true&quot; required=&quot;true&quot; multiValued=&quot;false&quot; /&gt;\n\t&lt;!--标签--&gt;\n\t&lt;field name=&quot;blog_labels&quot; type=&quot;pstring&quot; indexed=&quot;true&quot; stored=&quot;true&quot; required=&quot;true&quot; multiValued=&quot;false&quot; /&gt;\n\t&lt;!--文章链接--&gt;\n\t&lt;field name=&quot;blog_url&quot; type=&quot;pstring&quot; indexed=&quot;true&quot; stored=&quot;true&quot; required=&quot;true&quot; multiValued=&quot;false&quot; /&gt;\n\t&lt;!--分类ID--&gt;\n\t&lt;field name=&quot;blog_category_id&quot; type=&quot;pstring&quot; indexed=&quot;true&quot; stored=&quot;true&quot; required=&quot;true&quot; multiValued=&quot;false&quot; /&gt;\n\t&lt;!--搜索item--&gt;\n\t&lt;field name=&quot;search_item&quot; type=&quot;text_zh_cn&quot; indexed=&quot;true&quot; stored=&quot;true&quot; required=&quot;true&quot; multiValued=&quot;true&quot; /&gt;\n\t&lt;copyField source=&quot;blog_title&quot; dest=&quot;search_item&quot;/&gt;\n\t&lt;copyField source=&quot;blog_summary&quot; dest=&quot;search_item&quot;/&gt;\n\t&lt;copyField source=&quot;blog_labels&quot; dest=&quot;search_item&quot;/&gt;</code></pre></div>\n\n<blockquote>\n<p>排版：Esc 退出编辑状态下：gg=G</p>\n</blockquote>\n<p><img src=\"https://gitee.com/ambitions-king/picture/raw/master/img/image-20211004220435973.png\" alt=\"image-20211004220435973\"></p>\n<h3 id=\"9-4-重启\"><a href=\"#9-4-重启\" class=\"headerlink\" title=\"9.4 重启\"></a>9.4 重启</h3><div class=\"code-wrapper\"><pre><code class=\"hljs awk\">[root@king <span class=\"hljs-regexp\">/]# cd /</span>local<span class=\"hljs-regexp\">/soft/</span>solr<span class=\"hljs-regexp\">/bin/</span>\n[root@king bin]<span class=\"hljs-comment\"># ./solr stop -all</span>\n[root@king bin]<span class=\"hljs-comment\"># ./solr start -force</span></code></pre></div>\n\n<h3 id=\"9-5-验证\"><a href=\"#9-5-验证\" class=\"headerlink\" title=\"9.5 验证\"></a>9.5 验证</h3><p><img src=\"https://gitee.com/ambitions-king/picture/raw/master/img/image-20211004225457462.png\" alt=\"image-20211004225457462\"></p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/10139744-19785d5c0484474c.jpg\" alt=\"img\"></p>\n<p>图片来源于:<a href=\"https://upload-images.jianshu.io/upload_images/10139744-19785d5c0484474c.jpg\">https://upload-images.jianshu.io/upload_images/10139744-19785d5c0484474c.jpg</a></p>\n<h3 id=\"9-6-删除全部数据\"><a href=\"#9-6-删除全部数据\" class=\"headerlink\" title=\"9.6 删除全部数据\"></a>9.6 删除全部数据</h3><blockquote>\n<p>1)documents type 选择 XML<br>2)documents 输入下面语句</p>\n<div class=\"code-wrapper\"><pre><code class=\"hljs xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">delete</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">query</span>&gt;</span>*:*<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">query</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">delete</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">commit</span>/&gt;</span></code></pre></div>\n\n\n</blockquote>\n<h3 id=\"10-使用DockerFile构建solr镜像\"><a href=\"#10-使用DockerFile构建solr镜像\" class=\"headerlink\" title=\"10 使用DockerFile构建solr镜像\"></a>10 使用DockerFile构建solr镜像</h3><h4 id=\"10-1-创建solr目录\"><a href=\"#10-1-创建solr目录\" class=\"headerlink\" title=\"10.1 创建solr目录\"></a>10.1 创建solr目录</h4><div class=\"code-wrapper\"><pre><code class=\"hljs sh\"><span class=\"hljs-built_in\">mkdir</span> solr</code></pre></div>\n\n<h4 id=\"10-2-新建docker-compose-yml文件\"><a href=\"#10-2-新建docker-compose-yml文件\" class=\"headerlink\" title=\"10.2 新建docker-compose.yml文件\"></a>10.2 新建docker-compose.yml文件</h4><div class=\"code-wrapper\"><pre><code class=\"hljs yml\"><span class=\"hljs-attr\">version:</span> <span class=\"hljs-string\">&#x27;3.1&#x27;</span>\n<span class=\"hljs-attr\">services:</span>\n  <span class=\"hljs-attr\">solr:</span>\n    <span class=\"hljs-attr\">build:</span> <span class=\"hljs-string\">solrWithIKAnalyzer</span>\n    <span class=\"hljs-attr\">restart:</span> <span class=\"hljs-string\">always</span>\n    <span class=\"hljs-attr\">container_name:</span> <span class=\"hljs-string\">blog_solr</span>\n    <span class=\"hljs-attr\">ports:</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-number\">8983</span><span class=\"hljs-string\">:8983</span></code></pre></div>\n\n<h4 id=\"10-3-将solrWithIKAnalyzer文件夹下的内容全部放入solr文件夹下\"><a href=\"#10-3-将solrWithIKAnalyzer文件夹下的内容全部放入solr文件夹下\" class=\"headerlink\" title=\"10.3 将solrWithIKAnalyzer文件夹下的内容全部放入solr文件夹下\"></a>10.3 将solrWithIKAnalyzer文件夹下的内容全部放入solr文件夹下</h4><p>solrWithIKAnalyzer文件夹结构如下</p>\n<p><img src=\"https://gitee.com/jinguoguang/images/raw/master/img/20220106095732.png\" alt=\"image-20220106095731927\"></p>\n<h4 id=\"10-4-solrWithIKAnalyzer目录下新建Dockerfile文件\"><a href=\"#10-4-solrWithIKAnalyzer目录下新建Dockerfile文件\" class=\"headerlink\" title=\"10.4  solrWithIKAnalyzer目录下新建Dockerfile文件\"></a>10.4  solrWithIKAnalyzer目录下新建Dockerfile文件</h4><div class=\"code-wrapper\"><pre><code class=\"hljs sh\"><span class=\"hljs-comment\">#新建Dockerfile文件</span>\nvim Dockerfile\n<span class=\"hljs-comment\">#填写如下内容</span></code></pre></div>\n\n<div class=\"code-wrapper\"><pre><code class=\"hljs dockerfile\"><span class=\"hljs-keyword\">MAINTAINER</span> king\n<span class=\"hljs-comment\"># 创建 Core，切换目录</span>\n<span class=\"hljs-keyword\">WORKDIR</span><span class=\"language-bash\"> /opt/solr/server/solr</span>\n<span class=\"hljs-comment\"># 创建目录</span>\n<span class=\"hljs-keyword\">RUN</span><span class=\"language-bash\"> <span class=\"hljs-built_in\">mkdir</span> blog_core</span>\n<span class=\"hljs-comment\"># 切换目录</span>\n<span class=\"hljs-keyword\">WORKDIR</span><span class=\"language-bash\"> /opt/solr/server/solr/blog_core</span>\n<span class=\"hljs-comment\"># 把这个Core名称添加到配置文件中，这样在前端就可以看到了</span>\n<span class=\"hljs-keyword\">RUN</span><span class=\"language-bash\"> <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">&#x27;name=blog_core&#x27;</span> &gt; core.properties</span>\n<span class=\"hljs-comment\"># 从模版中复制一份出来配置文件出来</span>\n<span class=\"hljs-keyword\">RUN</span><span class=\"language-bash\"> <span class=\"hljs-built_in\">cp</span> -r /opt/solr/server/solr/configsets/sample_techproducts_configs/conf/ .</span>\n<span class=\"hljs-comment\"># 进入到容器的lib文件夹</span>\n<span class=\"hljs-keyword\">WORKDIR</span><span class=\"language-bash\"> /opt/solr/server/solr-webapp/webapp/WEB-INF/lib</span>\n<span class=\"hljs-comment\"># 中文分词器</span>\n<span class=\"hljs-keyword\">RUN</span><span class=\"language-bash\"> <span class=\"hljs-built_in\">cp</span> -r /opt/solr/contrib/analysis-extras/lucene-libs/lucene-analyzers-smartcn-5.5.5.jar .</span>\n<span class=\"hljs-comment\"># 复制两个jar包进去</span>\n<span class=\"hljs-keyword\">ADD</span><span class=\"language-bash\"> ik-analyzer-solr5-5.x.jar .</span>\n<span class=\"hljs-keyword\">ADD</span><span class=\"language-bash\"> solr-analyzer-ik-5.1.0.jar .</span>\n<span class=\"hljs-keyword\">WORKDIR</span><span class=\"language-bash\"> /opt/solr/server/solr-webapp/webapp/WEB-INF</span>\n<span class=\"hljs-comment\"># 复制字典</span>\n<span class=\"hljs-keyword\">ADD</span><span class=\"language-bash\"> ext.dic .</span>\n<span class=\"hljs-keyword\">ADD</span><span class=\"language-bash\"> stopword.dic .</span>\n<span class=\"hljs-comment\"># 配置扩展字典的配置文件</span>\n<span class=\"hljs-keyword\">ADD</span><span class=\"language-bash\"> IKAnalyzer.cfg.xml .</span>\n<span class=\"hljs-comment\"># 增加分词配置</span>\n<span class=\"hljs-keyword\">COPY</span><span class=\"language-bash\"> managed-schema /opt/solr/server/solr/blog_core/conf</span>\n<span class=\"hljs-keyword\">WORKDIR</span><span class=\"language-bash\"> /opt/solr</span></code></pre></div>\n\n<h4 id=\"10-5-在solrWithIKAnalyzer目录下构建\"><a href=\"#10-5-在solrWithIKAnalyzer目录下构建\" class=\"headerlink\" title=\"10.5 在solrWithIKAnalyzer目录下构建\"></a>10.5 在solrWithIKAnalyzer目录下构建</h4><div class=\"code-wrapper\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">docker</span> build -t blog_solr:<span class=\"hljs-number\">1</span>.<span class=\"hljs-number\">0</span> .\n<span class=\"hljs-comment\">#注意后面有个小点不要忽视</span></code></pre></div>\n\n<h4 id=\"10-6-在solr目录下使用docker-compose启动容器\"><a href=\"#10-6-在solr目录下使用docker-compose启动容器\" class=\"headerlink\" title=\"10.6 在solr目录下使用docker-compose启动容器\"></a>10.6 在solr目录下使用docker-compose启动容器</h4><blockquote>\n<p>Docker Compose是一个用来定义和运行复杂应用的Docker工具。一个使用Docker容器的应用，通常由多个容器组成。使用Docker Compose不再需要使用shell脚本来启动容器。<br>Compose 通过一个配置文件来管理多个Docker容器，在配置文件中，所有的容器通过services来定义，然后使用docker-compose脚本来启动，停止和重启应用，和应用中的服务以及所有依赖服务的容器，非常适合组合使用多个容器进行开发的场景。</p>\n</blockquote>\n<h5 id=\"安装docker-composr\"><a href=\"#安装docker-composr\" class=\"headerlink\" title=\"安装docker-composr\"></a>安装docker-composr</h5><ul>\n<li>从github上下载docker-compose二进制文件安装</li>\n</ul>\n <div class=\"code-wrapper\"><pre><code class=\"hljs sh\">sudo curl -L https://github.com/docker/compose/releases/download/1.16.1/docker-compose-`<span class=\"hljs-built_in\">uname</span> -s`-`<span class=\"hljs-built_in\">uname</span> -m` -o /usr/local/bin/docker-compose</code></pre></div>\n\n<p>  若是github访问太慢，也可以用daocloud下载</p>\n<div class=\"code-wrapper\"><pre><code class=\"hljs sh\">sudo curl -L https://get.daocloud.io/docker/compose/releases/download/1.25.1/docker-compose-`<span class=\"hljs-built_in\">uname</span> -s`-`<span class=\"hljs-built_in\">uname</span> -m` -o /usr/local/bin/docker-compose</code></pre></div>\n\n<ul>\n<li>添加可执行权限</li>\n</ul>\n <div class=\"code-wrapper\"><pre><code class=\"hljs sh\">sudo <span class=\"hljs-built_in\">chmod</span> +x /usr/local/bin/docker-compose</code></pre></div>\n\n<ul>\n<li><p>测试安装结果</p>\n<div class=\"code-wrapper\"><pre><code class=\"hljs sh\">docker-compose --version</code></pre></div></li>\n</ul>\n<div class=\"code-wrapper\"><pre><code class=\"hljs crmsh\"><span class=\"hljs-comment\">#以后台的方式运行容器。不会在终端上打印运行日志</span>\ndocker-compose up -d\n<span class=\"hljs-comment\"># 停止运行的容器，但不会删除它们。</span>\ndocker-compose <span class=\"hljs-literal\">stop</span>\n<span class=\"hljs-comment\">#停止运行的容器，并且会删除已停止的容器以及已创建的所有网络</span>\ndocker-compose down</code></pre></div>\n\n\n\n<h1 id=\"七、minio服务器安装\"><a href=\"#七、minio服务器安装\" class=\"headerlink\" title=\"七、minio服务器安装\"></a>七、minio服务器安装</h1><h2 id=\"1-安装-1\"><a href=\"#1-安装-1\" class=\"headerlink\" title=\"1.安装\"></a>1.安装</h2><h3 id=\"1-1拉取镜像\"><a href=\"#1-1拉取镜像\" class=\"headerlink\" title=\"1.1拉取镜像\"></a>1.1拉取镜像</h3><div class=\"code-wrapper\"><pre><code class=\"hljs powershell\">docker pull minio/minio</code></pre></div>\n\n<h3 id=\"1-2创建并启动容器\"><a href=\"#1-2创建并启动容器\" class=\"headerlink\" title=\"1.2创建并启动容器\"></a>1.2创建并启动容器</h3><div class=\"code-wrapper\"><pre><code class=\"hljs powershell\">docker run <span class=\"hljs-literal\">-d</span> <span class=\"hljs-literal\">-p</span> <span class=\"hljs-number\">9000</span>:<span class=\"hljs-number\">9000</span> <span class=\"hljs-literal\">-p</span> <span class=\"hljs-number\">50000</span>:<span class=\"hljs-number\">50000</span> <span class=\"hljs-literal\">--name</span> minio \\\n<span class=\"hljs-literal\">-e</span> <span class=\"hljs-string\">&quot;MINIO_ACCESS_KEY=admin&quot;</span> \\\n<span class=\"hljs-literal\">-e</span> <span class=\"hljs-string\">&quot;MINIO_SECRET_KEY=admin123456&quot;</span> \\\n<span class=\"hljs-literal\">-v</span> /local/docker/minio/<span class=\"hljs-keyword\">data</span>:/<span class=\"hljs-keyword\">data</span> \\\n<span class=\"hljs-literal\">-v</span> /local/d/minio/config:/root/.minio \\\nminio/minio server <span class=\"hljs-literal\">--console-address</span> <span class=\"hljs-string\">&quot;:50000&quot;</span> /<span class=\"hljs-keyword\">data</span></code></pre></div>\n\n<h3 id=\"1-3配置阿里云服务器安全组\"><a href=\"#1-3配置阿里云服务器安全组\" class=\"headerlink\" title=\"1.3配置阿里云服务器安全组\"></a>1.3配置阿里云服务器安全组</h3><p><img src=\"https://gitee.com/ambitions-king/picture/raw/master/img/image-20211020210958366.png\" alt=\"image-20211020210958366\"></p>\n<h2 id=\"2-登录minio服务器管理控制台\"><a href=\"#2-登录minio服务器管理控制台\" class=\"headerlink\" title=\"2.登录minio服务器管理控制台\"></a>2.登录minio服务器管理控制台</h2><h3 id=\"2-1创建游客用户\"><a href=\"#2-1创建游客用户\" class=\"headerlink\" title=\"2.1创建游客用户\"></a>2.1创建游客用户</h3><p><img src=\"https://gitee.com/ambitions-king/picture/raw/master/img/image-20211020211208054.png\" alt=\"image-20211020211208054\"></p>\n<p><img src=\"https://gitee.com/ambitions-king/picture/raw/master/img/image-20211020211340198.png\" alt=\"image-20211020211340198\"></p>\n<blockquote>\n<p>将权限设置为只读</p>\n</blockquote>\n<h3 id=\"2-3创建Bucket\"><a href=\"#2-3创建Bucket\" class=\"headerlink\" title=\"2.3创建Bucket\"></a>2.3创建Bucket</h3><p><img src=\"https://gitee.com/ambitions-king/picture/raw/master/img/image-20211020211507476.png\" alt=\"image-20211020211507476\"></p>\n<h3 id=\"2-4设置Bucket权限为readwrite\"><a href=\"#2-4设置Bucket权限为readwrite\" class=\"headerlink\" title=\"2.4设置Bucket权限为readwrite\"></a>2.4设置Bucket权限为readwrite</h3><p><img src=\"https://gitee.com/ambitions-king/picture/raw/master/img/image-20211020211701191.png\" alt=\"image-20211020211701191\"></p>\n<p><img src=\"https://gitee.com/ambitions-king/picture/raw/master/img/image-20211020211729145.png\" alt=\"image-20211020211729145\"></p>\n<h1 id=\"八、MongoDB服务安装\"><a href=\"#八、MongoDB服务安装\" class=\"headerlink\" title=\"八、MongoDB服务安装\"></a>八、MongoDB服务安装</h1><h2 id=\"1-拉取镜像-1\"><a href=\"#1-拉取镜像-1\" class=\"headerlink\" title=\"1.拉取镜像\"></a>1.拉取镜像</h2><div class=\"code-wrapper\"><pre><code class=\"hljs sh\">docker pull mongo</code></pre></div>\n\n<h2 id=\"2-创建目录\"><a href=\"#2-创建目录\" class=\"headerlink\" title=\"2.创建目录\"></a>2.创建目录</h2><div class=\"code-wrapper\"><pre><code class=\"hljs awk\">mkdir -p <span class=\"hljs-regexp\">/local/</span>docker<span class=\"hljs-regexp\">/mongo/</span>data</code></pre></div>\n\n<h2 id=\"3-修改目录权限\"><a href=\"#3-修改目录权限\" class=\"headerlink\" title=\"3.修改目录权限\"></a>3.修改目录权限</h2><div class=\"code-wrapper\"><pre><code class=\"hljs sh\"><span class=\"hljs-built_in\">chmod</span> 777/local/docker/mongo/data</code></pre></div>\n\n<h2 id=\"4-构建并启动容器\"><a href=\"#4-构建并启动容器\" class=\"headerlink\" title=\"4.构建并启动容器\"></a>4.构建并启动容器</h2><div class=\"code-wrapper\"><pre><code class=\"hljs routeros\">docker <span class=\"hljs-built_in\">run</span> -d --name mongodb -v /local/docker/mongo/data:/data/db -p 27017:27017 -e <span class=\"hljs-attribute\">MONGO_INITDB_ROOT_USERNAME</span>=admin -e <span class=\"hljs-attribute\">MONGO_INITDB_ROOT_PASSWORD</span>=admin <span class=\"hljs-attribute\">--privileged</span>=<span class=\"hljs-literal\">true</span> mongo:latest</code></pre></div>\n<blockquote>\n<p>参数说明<br>-d 后台运行容器</p>\n<p>–name mongodb 运行容器名</p>\n<p>-v /mydata/mongodb/datadb:/data/db 挂载目录</p>\n<p>-p 27017:27017：将27017映射到外部端口27017 将容器的27017端口映射到主机的27017端口，27017是和宿主机的通信接口，所有docker内部容器的连接使用27017接口，集群配置需连接容器内部27017端口，故最好保持前后端口一致</p>\n<p>-e MONGO_INITDB_ROOT_USERNAME=admin 指定用户名</p>\n<p>-e MONGO_INITDB_ROOT_PASSWORD=admin 指定密码</p>\n<p>–privileged=true 使得容器内的root拥有真正的root权限。否则，container内的root只是外部的一个普通用户权限</p>\n</blockquote>\n<h2 id=\"5-查看mongodb日志\"><a href=\"#5-查看mongodb日志\" class=\"headerlink\" title=\"5.查看mongodb日志\"></a>5.查看mongodb日志</h2><div class=\"code-wrapper\"><pre><code class=\"hljs sh\">docker logs mongodb</code></pre></div>\n\n<h2 id=\"6-mongodb随-docker-自启动\"><a href=\"#6-mongodb随-docker-自启动\" class=\"headerlink\" title=\"6.mongodb随 docker 自启动\"></a>6.mongodb随 docker 自启动</h2><div class=\"code-wrapper\"><pre><code class=\"hljs sh\">docker update mongodb --restart=always</code></pre></div>\n\n<p>注意：这里的 mongodb是容器的名字，不是镜像的名字。</p>\n<h2 id=\"7-启动-停止-重启\"><a href=\"#7-启动-停止-重启\" class=\"headerlink\" title=\"7. 启动|停止|重启\"></a>7. 启动|停止|重启</h2><div class=\"code-wrapper\"><pre><code class=\"hljs sh\">docker start mongodb\n\ndocker stop mongodb\n\ndocker restart mongodb</code></pre></div>\n\n<p>注意：这里的 mongodb 是容器的名字，不是镜像的名字。</p>\n<h2 id=\"8-进入mongodb-optional\"><a href=\"#8-进入mongodb-optional\" class=\"headerlink\" title=\"8.进入mongodb (optional)\"></a>8.进入mongodb (optional)</h2><div class=\"code-wrapper\"><pre><code class=\"hljs sh\">docker <span class=\"hljs-built_in\">exec</span> -it mongodb /bin/bash</code></pre></div>\n\n\n\n<h1 id=\"docker-常用命令\"><a href=\"#docker-常用命令\" class=\"headerlink\" title=\"docker 常用命令\"></a>docker 常用命令</h1><div class=\"code-wrapper\"><pre><code class=\"hljs sh\">批量启动容器\n\ndocker container start $(docker container <span class=\"hljs-built_in\">ls</span> -a -q) 或 docker start $(docker container <span class=\"hljs-built_in\">ls</span> -a -q) \n\n批量停止容器\n\ndocker container stop $(docker container <span class=\"hljs-built_in\">ls</span> -a -q) 或 docker stop $(docker container <span class=\"hljs-built_in\">ls</span> -a -q) \n\n批量重启容器\n\ndocker container restart $(docker container <span class=\"hljs-built_in\">ls</span> -a -q) 或 docker restart $(docker container <span class=\"hljs-built_in\">ls</span> -a -q) \n\n批量删除容器\n\ndocker container <span class=\"hljs-built_in\">rm</span> $(docker container <span class=\"hljs-built_in\">ls</span> -a -q) 或 docker <span class=\"hljs-built_in\">rm</span> <span class=\"hljs-variable\">$&#123;docker container ls -a -q&#125;</span>\n\n批量杀死容器\n\ndocker container <span class=\"hljs-built_in\">kill</span> $(docker container <span class=\"hljs-built_in\">ls</span> -a -q) 或 docker <span class=\"hljs-built_in\">kill</span> <span class=\"hljs-variable\">$&#123;docker container ls -a -q&#125;</span>\n\ndocker查询所有进程\n\ndocker ps -a\n\ndocker查询正常运行的进程\n\ndocker ps\n\n容器重新命名\n\ndocker rename 原容器名称 新容器名称\n\n举例: docker rename blissful_hoover solr</code></pre></div>","site":{"data":{}},"more":"<h1 id=\"一、Docker简介\"><a href=\"#一、Docker简介\" class=\"headerlink\" title=\"一、Docker简介\"></a>一、Docker简介</h1><blockquote>\n<p>Docker 是基于Go语言实现的开源容器项目。利用操作系统本身已有的机制和特性，可以实现远超传统虚拟机的轻量级虚拟化（通俗解释：Docker内嵌极小型系统，例如Linux只有5M多，windows也是）。它是内核级的虚拟化。期望达到使项目运行环境“一次封装，到处运行的目的”。</p>\n</blockquote>\n<blockquote>\n<p>在Docker里面可以设置使用Windows还是Linux系统，默认是用Linux系统，基于Ubuntu的，只有5M多，包含了最基本功能。<br>利用docker创建的运行环境叫做docker容器，容器是通过docker镜像创建的，docker镜像文件可以放在私有仓库中也可以放在共有仓库中。<br>官网地址：<a href=\"https://www.docker.com/\">https://www.docker.com</a><br>DockerFile指令</p>\n</blockquote>\n<pre><code class=\"hljs DockerFile\"><span class=\"hljs-keyword\">FROM</span>\t\t<span class=\"hljs-comment\"># 基础镜像，依赖于谁</span>\n<span class=\"hljs-keyword\">MAINTAINER</span>\t<span class=\"hljs-comment\"># 作者：姓名+邮箱</span>\n<span class=\"hljs-keyword\">RUN</span><span class=\"language-bash\">\t\t\t<span class=\"hljs-comment\"># 镜像构建的时候需要运行的命令</span></span>\n<span class=\"hljs-keyword\">ADD</span><span class=\"language-bash\">\t\t\t<span class=\"hljs-comment\"># 添加，可以添加其他镜像</span></span>\n<span class=\"hljs-keyword\">WORKDIR</span><span class=\"language-bash\">\t\t<span class=\"hljs-comment\"># 镜像的工作目录</span></span>\n<span class=\"hljs-keyword\">VOLUME</span><span class=\"language-bash\">\t\t<span class=\"hljs-comment\"># 挂载的目录</span></span>\n<span class=\"hljs-keyword\">EXPOSE</span>\t\t<span class=\"hljs-comment\"># 暴露的端口</span>\n<span class=\"hljs-keyword\">CMD</span><span class=\"language-bash\">\t\t\t<span class=\"hljs-comment\"># 指定这个容器启动的时候需要运行的命令，最后一个才会生效</span></span>\n<span class=\"hljs-keyword\">ENTRYPOINT</span><span class=\"language-bash\">\t<span class=\"hljs-comment\"># 指定这个容器启动的时候需要运行的命令，可以追加</span></span>\n<span class=\"hljs-keyword\">ONBUILD</span>\t\t<span class=\"hljs-comment\"># 当dockerfile被构建的时候触发的指令</span>\n<span class=\"hljs-keyword\">COPY</span><span class=\"language-bash\">\t\t<span class=\"hljs-comment\"># 类似ADD，讲文件拷贝到镜像中</span></span>\n<span class=\"hljs-keyword\">ENV</span>\t\t\t<span class=\"hljs-comment\"># 构建的时候设置环境变量</span>\n\n<span class=\"hljs-keyword\">ARG</span>\t\t\t<span class=\"hljs-comment\"># 创建镜像过程中使用的变量</span>\n<span class=\"hljs-keyword\">LABEL</span><span class=\"language-bash\">\t\t<span class=\"hljs-comment\"># 为生成的镜像添加元数据标签信息</span></span>\n<span class=\"hljs-keyword\">STOPSIGNAL</span>\t<span class=\"hljs-comment\"># 退出的信号值</span>\n<span class=\"hljs-keyword\">HEALTHCHECK</span><span class=\"language-bash\">\t<span class=\"hljs-comment\"># 配置所启动容器如何进行健康检查</span></span>\n<span class=\"hljs-keyword\">SHELL</span><span class=\"language-bash\">\t\t<span class=\"hljs-comment\"># 指定默认shell类型</span></span></code></pre>\n\n<h1 id=\"二、Linux系统中Docker-安装与启动\"><a href=\"#二、Linux系统中Docker-安装与启动\" class=\"headerlink\" title=\"二、Linux系统中Docker 安装与启动\"></a>二、Linux系统中Docker 安装与启动</h1><h2 id=\"1-安装\"><a href=\"#1-安装\" class=\"headerlink\" title=\"1.安装\"></a>1.安装</h2><h3 id=\"1-1-下载docker-ce-repo\"><a href=\"#1-1-下载docker-ce-repo\" class=\"headerlink\" title=\"1.1.下载docker-ce repo\"></a>1.1.下载docker-ce repo</h3><pre><code class=\"hljs awk\">curl https:<span class=\"hljs-regexp\">//</span>download.docker.com<span class=\"hljs-regexp\">/linux/</span>centos<span class=\"hljs-regexp\">/docker-ce.repo -o /</span>etc<span class=\"hljs-regexp\">/yum.repos.d/</span>docker-ce.repo</code></pre>\n\n<h3 id=\"1-2-安装依赖\"><a href=\"#1-2-安装依赖\" class=\"headerlink\" title=\"1.2. 安装依赖\"></a>1.2. 安装依赖</h3><pre><code class=\"hljs awk\">yum install -y https:<span class=\"hljs-regexp\">//</span>download.docker.com<span class=\"hljs-regexp\">/linux/</span>fedora<span class=\"hljs-regexp\">/30/</span>x86_64<span class=\"hljs-regexp\">/stable/</span>Packages/containerd.io-<span class=\"hljs-number\">1.2</span>.<span class=\"hljs-number\">6</span>-<span class=\"hljs-number\">3.3</span>.fc30.x86_64.rpm</code></pre>\n\n<h3 id=\"1-3-安装docker-ce\"><a href=\"#1-3-安装docker-ce\" class=\"headerlink\" title=\"1.3. 安装docker-ce\"></a>1.3. 安装docker-ce</h3><pre><code class=\"hljs cmake\">yum <span class=\"hljs-keyword\">install</span> -y docker-ce</code></pre>\n\n<h2 id=\"2-启动\"><a href=\"#2-启动\" class=\"headerlink\" title=\"2.启动\"></a>2.启动</h2><h3 id=\"2-1-启动命令\"><a href=\"#2-1-启动命令\" class=\"headerlink\" title=\"2.1. 启动命令\"></a>2.1. 启动命令</h3><pre><code class=\"hljs crmsh\">systemctl <span class=\"hljs-literal\">start</span> docker</code></pre>\n\n<h3 id=\"2-2-查看Docker状态\"><a href=\"#2-2-查看Docker状态\" class=\"headerlink\" title=\"2.2. 查看Docker状态\"></a>2.2. 查看Docker状态</h3><pre><code class=\"hljs nginx\"><span class=\"hljs-attribute\">docker</span> <span class=\"hljs-literal\">info</span></code></pre>\n\n<p>结果如下:</p>\n<p><img src=\"https://gitee.com/ambitions-king/picture/raw/master/img/image-20211003144315752.png\" alt=\"image-20211003144315752\"></p>\n<h2 id=\"3-镜像加速器配置\"><a href=\"#3-镜像加速器配置\" class=\"headerlink\" title=\"3.镜像加速器配置\"></a>3.镜像加速器配置</h2><p>默认情况下Docker从Docker Hub上下载镜像资源，但速度很慢，可以通过配置国内的镜像加速器来解决。</p>\n<h3 id=\"3-1-使用阿里云镜像\"><a href=\"#3-1-使用阿里云镜像\" class=\"headerlink\" title=\"3.1. 使用阿里云镜像\"></a>3.1. 使用阿里云镜像</h3><p>网址：<a href=\"https://www.aliyun.com/\">https://www.aliyun.com/</a></p>\n<h3 id=\"3-2-进入容器镜像服务\"><a href=\"#3-2-进入容器镜像服务\" class=\"headerlink\" title=\"3.2. 进入容器镜像服务\"></a>3.2. 进入容器镜像服务</h3><p><img src=\"https://gitee.com/ambitions-king/picture/raw/master/img/wps57F3.tmp.jpg\" alt=\"img\"></p>\n<h3 id=\"3-3-进入管理控制台\"><a href=\"#3-3-进入管理控制台\" class=\"headerlink\" title=\"3.3.  进入管理控制台\"></a>3.3.  进入管理控制台</h3><p><img src=\"https://gitee.com/ambitions-king/picture/raw/master/img/wpsA606.tmp.jpg\" alt=\"img\"></p>\n<h3 id=\"3-4-进入镜像加速器\"><a href=\"#3-4-进入镜像加速器\" class=\"headerlink\" title=\"3.4. 进入镜像加速器\"></a>3.4. 进入镜像加速器</h3><p><img src=\"https://gitee.com/ambitions-king/picture/raw/master/img/wps5050.tmp.jpg\" alt=\"img\"></p>\n<h3 id=\"3-5-选择对应的OS并配置\"><a href=\"#3-5-选择对应的OS并配置\" class=\"headerlink\" title=\"3.5. 选择对应的OS并配置\"></a>3.5. 选择对应的OS并配置</h3><p><img src=\"https://gitee.com/ambitions-king/picture/raw/master/img/wpsDEF5.tmp.jpg\" alt=\"img\"></p>\n<h3 id=\"3-6-验证镜像加速器是否配置成功\"><a href=\"#3-6-验证镜像加速器是否配置成功\" class=\"headerlink\" title=\"3.6. 验证镜像加速器是否配置成功\"></a>3.6. 验证镜像加速器是否配置成功</h3><p>通过docker info命令验证镜像加速器配置，结果如下：</p>\n<p><img src=\"https://gitee.com/ambitions-king/picture/raw/master/img/image-20211003145815941.png\" alt=\"image-20211003145815941\"></p>\n<h1 id=\"三、安装redis\"><a href=\"#三、安装redis\" class=\"headerlink\" title=\"三、安装redis\"></a>三、安装redis</h1><h2 id=\"1-获取redis镜像\"><a href=\"#1-获取redis镜像\" class=\"headerlink\" title=\"1.获取redis镜像\"></a>1.获取redis镜像</h2><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">docker</span> pull redis:<span class=\"hljs-number\">6</span>.<span class=\"hljs-number\">0</span>.<span class=\"hljs-number\">5</span></code></pre>\n\n<p><img src=\"https://gitee.com/ambitions-king/picture/raw/master/img/image-20211003150145019.png\" alt=\"image-20211003150145019\"></p>\n<h2 id=\"2-查看本地镜像\"><a href=\"#2-查看本地镜像\" class=\"headerlink\" title=\"2.查看本地镜像\"></a>2.查看本地镜像</h2><pre><code class=\"hljs ebnf\"><span class=\"hljs-attribute\">docker images</span></code></pre>\n\n<p><img src=\"https://gitee.com/ambitions-king/picture/raw/master/img/image-20211003150246436.png\" alt=\"image-20211003150246436\"></p>\n<h3 id=\"3-从官网获取redis-config配置文件\"><a href=\"#3-从官网获取redis-config配置文件\" class=\"headerlink\" title=\"3.从官网获取redis.config配置文件\"></a>3.从官网获取redis.config配置文件</h3><pre><code class=\"hljs awk\"><span class=\"hljs-comment\"># 进入文件夹</span>\ncd <span class=\"hljs-regexp\">/local/</span>docker\nwget http:<span class=\"hljs-regexp\">//</span>download.redis.io<span class=\"hljs-regexp\">/redis-stable/</span>redis.conf   <span class=\"hljs-regexp\">//</span>下载redis配置文件\nvim redis.conf  <span class=\"hljs-regexp\">//</span>修改配置文件</code></pre>\n\n<blockquote>\n<p>1.注释bind 127.0.0.1。这里限制redis只能本地访问，注释掉之后使redis可以外部访问；<br>2.protected-mode yes 修改为 protected-mode no。默认yes，开启保护模式，限制仅本地访问，改为no之后使redis可以外部访问；<br>3.daemonize no 。默认no，当前界面将进入redis的命令行界面，exit强制退出或者关闭连接工具(putty,xshell等)都会导致redis进程退出。 改为yes意为以守护进程方式启动，该模式下，redis会在后台运行，并将进程pid号写入至redis.conf选项pidfile设置的文件中，此时redis将一直运行，除非手动kill该进程，如果改为yes会使以配置文件方式启动redis的方式失败。<br>4.requirepass pwd。这里的pwd是自己设置的密码，可以不开启，不开启表示无需密码即可连接。<br>5.databases 16。默认数据库个数16，可以不修改。<br>6.appendonly no。默认 no，表示不开启aof方式持久化，改为appendonly yes表示开启aof，可以不修改该配置。</p>\n</blockquote>\n<p>文件夹如下:</p>\n<p><img src=\"https://gitee.com/ambitions-king/picture/raw/master/img/image-20211003183929810.png\" alt=\"image-20211003183929810\"></p>\n<h3 id=\"4-启动redis\"><a href=\"#4-启动redis\" class=\"headerlink\" title=\"4. 启动redis\"></a>4. 启动redis</h3><pre><code class=\"hljs awk\">docker run \\\n--name redis \\\n-p <span class=\"hljs-number\">6379</span>:<span class=\"hljs-number\">6379</span> \\\n--restart unless-stopped \\\n-v <span class=\"hljs-regexp\">/local/</span>docker<span class=\"hljs-regexp\">/redis/</span>data:/data \\\n-v <span class=\"hljs-regexp\">/local/</span>docker<span class=\"hljs-regexp\">/redis/</span>conf<span class=\"hljs-regexp\">/redis.conf:/</span>etc<span class=\"hljs-regexp\">/redis/</span>redis.conf \\\n-d redis redis-server <span class=\"hljs-regexp\">/etc/</span>redis/redis.conf \\</code></pre>\n\n<h3 id=\"5-查看redis运行是否成功\"><a href=\"#5-查看redis运行是否成功\" class=\"headerlink\" title=\"5. 查看redis运行是否成功\"></a>5. 查看redis运行是否成功</h3><pre><code class=\"hljs bash\"><span class=\"hljs-comment\">#查看redis容器运行</span>\ndocker ps |grep redis \n<span class=\"hljs-comment\">#进入redis容器中</span>\ndocker <span class=\"hljs-built_in\">exec</span> -it redis /bin/bash\n<span class=\"hljs-comment\">#使用redis客户端</span>\nredis-cli\n<span class=\"hljs-comment\">#设置密码</span>\nconfig <span class=\"hljs-built_in\">set</span> requirepass 123456</code></pre>\n\n<p><img src=\"https://gitee.com/ambitions-king/picture/raw/master/img/image-20211003220721877.png\" alt=\"image-20211003220721877\"></p>\n<h1 id=\"四、安装mysql\"><a href=\"#四、安装mysql\" class=\"headerlink\" title=\"四、安装mysql\"></a>四、安装mysql</h1><h2 id=\"1-拉取镜像\"><a href=\"#1-拉取镜像\" class=\"headerlink\" title=\"1. 拉取镜像\"></a>1. 拉取镜像</h2><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">docker</span> pull mysql:<span class=\"hljs-number\">8</span>.<span class=\"hljs-number\">0</span>.<span class=\"hljs-number\">16</span></code></pre>\n\n<h2 id=\"2-创建数据目录和配置文件\"><a href=\"#2-创建数据目录和配置文件\" class=\"headerlink\" title=\"2. 创建数据目录和配置文件\"></a>2. 创建数据目录和配置文件</h2><pre><code class=\"hljs autoit\">[root<span class=\"hljs-symbol\">@king</span> docker]<span class=\"hljs-meta\"># mkdir -p mysql</span>\n[root<span class=\"hljs-symbol\">@king</span> docker]<span class=\"hljs-meta\"># cd mysql/</span>\n[root<span class=\"hljs-symbol\">@king</span> mysql]<span class=\"hljs-meta\"># mkdir data</span>\n[root<span class=\"hljs-symbol\">@king</span> mysql]<span class=\"hljs-meta\"># mkdir conf</span>\n[root<span class=\"hljs-symbol\">@king</span> mysql]<span class=\"hljs-meta\"># chmod -R 755 /local/docker/mysql</span>\n[root<span class=\"hljs-symbol\">@king</span> mysql]<span class=\"hljs-meta\"># cd conf/</span>\n[root<span class=\"hljs-symbol\">@king</span> conf]<span class=\"hljs-meta\"># vim my.cnf</span></code></pre>\n\n<p>添加以下内容到上述创建的配置文件中</p>\n<pre><code class=\"hljs shell\">[client]\n<span class=\"hljs-meta prompt_\"></span>\n<span class=\"hljs-meta prompt_\">#</span><span class=\"language-bash\">socket = /usr/mysql/mysqld.sock</span>\n\ndefault-character-set = utf8mb4\n\n[mysqld]\n<span class=\"hljs-meta prompt_\"></span>\n<span class=\"hljs-meta prompt_\">#</span><span class=\"language-bash\">pid-file        = /var/run/mysqld/mysqld.pid</span>\n<span class=\"hljs-meta prompt_\"></span>\n<span class=\"hljs-meta prompt_\">#</span><span class=\"language-bash\">socket          = /var/run/mysqld/mysqld.sock</span>\n<span class=\"hljs-meta prompt_\"></span>\n<span class=\"hljs-meta prompt_\">#</span><span class=\"language-bash\">datadir         = /var/lib/mysql</span>\n<span class=\"hljs-meta prompt_\"></span>\n<span class=\"hljs-meta prompt_\">#</span><span class=\"language-bash\">socket = /usr/mysql/mysqld.sock</span>\n<span class=\"hljs-meta prompt_\"></span>\n<span class=\"hljs-meta prompt_\">#</span><span class=\"language-bash\">pid-file = /usr/mysql/mysqld.pid</span>\n\ndatadir = /local/docker/mysql/data\n\ncharacter_set_server = utf8mb4\n\ncollation_server = utf8mb4_bin\n\nsecure-file-priv= NULL\n<span class=\"hljs-meta prompt_\"></span>\n<span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">Disabling symbolic-links is recommended to prevent assorted security risks</span>\n\nsymbolic-links=0\n<span class=\"hljs-meta prompt_\"></span>\n<span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">Custom config should go here</span>\n\n!includedir /etc/mysql/conf.d/\n</code></pre>\n\n<h2 id=\"3-启动创建容器\"><a href=\"#3-启动创建容器\" class=\"headerlink\" title=\"3.启动创建容器\"></a>3.启动创建容器</h2><pre><code class=\"hljs awk\">docker run --restart=unless-stopped -d --name mysql \\\n-v <span class=\"hljs-regexp\">/local/</span>docker<span class=\"hljs-regexp\">/mysql/</span>conf<span class=\"hljs-regexp\">/my.cnf:/</span>etc<span class=\"hljs-regexp\">/mysql/my</span>.cnf \\\n-v <span class=\"hljs-regexp\">/local/</span>docker<span class=\"hljs-regexp\">/mysql/</span>data:<span class=\"hljs-regexp\">/var/</span>lib/mysql -p <span class=\"hljs-number\">3306</span>:<span class=\"hljs-number\">3306</span> -e MYSQL_ROOT_PASSWORD=<span class=\"hljs-number\">123456</span> mysql:<span class=\"hljs-number\">8.0</span>.<span class=\"hljs-number\">16</span></code></pre>\n\n<p>查看容器启动情况</p>\n<pre><code class=\"hljs nginx\"><span class=\"hljs-attribute\">docker</span> <span class=\"hljs-literal\">info</span></code></pre>\n\n<h2 id=\"4-修改mysql密码以及可访问主机\"><a href=\"#4-修改mysql密码以及可访问主机\" class=\"headerlink\" title=\"4.修改mysql密码以及可访问主机\"></a>4.修改mysql密码以及可访问主机</h2><ul>\n<li>进入mysql容器内部</li>\n</ul>\n<pre><code class=\"hljs autoit\">[root<span class=\"hljs-symbol\">@king</span> conf]<span class=\"hljs-meta\"># docker exec -it mysql /bin/bash</span></code></pre>\n\n<ul>\n<li><p>连接mysql</p>\n<pre><code class=\"hljs css\">mysql -uroot -<span class=\"hljs-selector-tag\">p</span></code></pre></li>\n<li><p>使用mysql库</p>\n<pre><code class=\"hljs actionscript\"><span class=\"hljs-keyword\">use</span> mysql</code></pre></li>\n<li><p>修改访问主机以及密码等，设置为所有主机可访问</p>\n<pre><code class=\"hljs pgsql\"><span class=\"hljs-keyword\">ALTER</span> <span class=\"hljs-keyword\">USER</span> <span class=\"hljs-string\">&#x27;root&#x27;</span>@<span class=\"hljs-string\">&#x27;%&#x27;</span> IDENTIFIED <span class=\"hljs-keyword\">WITH</span> mysql_native_password <span class=\"hljs-keyword\">BY</span> <span class=\"hljs-string\">&#x27;123456&#x27;</span>;</code></pre></li>\n<li><p>刷新</p>\n<pre><code class=\"hljs arduino\">flush privileges</code></pre></li>\n</ul>\n<h1 id=\"五、安装JDK8\"><a href=\"#五、安装JDK8\" class=\"headerlink\" title=\"五、安装JDK8\"></a>五、安装JDK8</h1><h2 id=\"yum安装\"><a href=\"#yum安装\" class=\"headerlink\" title=\"yum安装\"></a>yum安装</h2><pre><code class=\"hljs shell\">yum install java-1.8.0-openjdk* -y</code></pre>\n<p>执行过这条命令无需配置，直接可以使用。</p>\n<h2 id=\"1-上传文件\"><a href=\"#1-上传文件\" class=\"headerlink\" title=\"1.上传文件\"></a>1.上传文件</h2><p>将jdk文件上传到/local/upload</p>\n<h2 id=\"2-解压压缩包\"><a href=\"#2-解压压缩包\" class=\"headerlink\" title=\"2.解压压缩包\"></a>2.解压压缩包</h2><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">tar</span> zxf jdk-<span class=\"hljs-number\">8</span>u311-linux-x64.tar.gz</code></pre>\n\n<h2 id=\"3-移动文件\"><a href=\"#3-移动文件\" class=\"headerlink\" title=\"3.移动文件\"></a>3.移动文件</h2><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">mv</span> jdk1.<span class=\"hljs-number\">8</span>.<span class=\"hljs-number\">0</span>_311 /local/soft/jdk</code></pre>\n\n<h2 id=\"4-配置环境变量\"><a href=\"#4-配置环境变量\" class=\"headerlink\" title=\"4.配置环境变量\"></a>4.配置环境变量</h2><blockquote>\n<p>在linux中/etc/profile此文件为环境变量配置文件。</p>\n</blockquote>\n<pre><code class=\"hljs routeros\"><span class=\"hljs-comment\">#export PATH USER LOGNAME MAIL HOSTNAME HISTSIZE HISTCONTROL</span>\n<span class=\"hljs-built_in\">export</span> <span class=\"hljs-attribute\">JAVA_HOME</span>=/local/soft/jdk\n<span class=\"hljs-built_in\">export</span> <span class=\"hljs-attribute\">PATH</span>=<span class=\"hljs-variable\">$JAVA_HOME</span>/bin:$PATH</code></pre>\n\n<pre><code class=\"hljs vim\">#进入etc文件夹并且编译<span class=\"hljs-keyword\">profile</span>文件\n<span class=\"hljs-keyword\">cd</span> /etc &amp;&amp; <span class=\"hljs-keyword\">vim</span> <span class=\"hljs-keyword\">profile</span></code></pre>\n\n<p><img src=\"https://gitee.com/ambitions-king/picture/raw/master/img/image-20211004113003179.png\" alt=\"image-20211004113003179\"></p>\n<h2 id=\"5-解析文件\"><a href=\"#5-解析文件\" class=\"headerlink\" title=\"5.解析文件\"></a>5.解析文件</h2><blockquote>\n<p>不解析，必须通过重启才能生效。只要解析不需要重启了</p>\n</blockquote>\n<pre><code class=\"hljs gradle\"><span class=\"hljs-keyword\">source</span> <span class=\"hljs-regexp\">/etc/</span>profile</code></pre>\n\n<h2 id=\"6-查看配置是否成功\"><a href=\"#6-查看配置是否成功\" class=\"headerlink\" title=\"6.查看配置是否成功\"></a>6.查看配置是否成功</h2><pre><code class=\"hljs applescript\">java -<span class=\"hljs-built_in\">version</span></code></pre>\n\n<p><img src=\"https://gitee.com/ambitions-king/picture/raw/master/img/image-20211004113221989.png\" alt=\"image-20211004113221989\"></p>\n<h1 id=\"六、安装solr\"><a href=\"#六、安装solr\" class=\"headerlink\" title=\"六、安装solr\"></a>六、安装solr</h1><h2 id=\"1-上传文件-1\"><a href=\"#1-上传文件-1\" class=\"headerlink\" title=\"1.上传文件\"></a>1.上传文件</h2><blockquote>\n<p>上传压缩包solr-8.2.0.tgz到/local/upload中。</p>\n</blockquote>\n<h2 id=\"2-解压\"><a href=\"#2-解压\" class=\"headerlink\" title=\"2.解压\"></a>2.解压</h2><pre><code class=\"hljs autoit\">[root<span class=\"hljs-symbol\">@king</span> upload]<span class=\"hljs-meta\"># tar zxf solr-8.2.0.tgz </span></code></pre>\n\n<h2 id=\"3-移动文件-1\"><a href=\"#3-移动文件-1\" class=\"headerlink\" title=\"3.移动文件\"></a>3.移动文件</h2><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">mv</span> solr-<span class=\"hljs-number\">8</span>.<span class=\"hljs-number\">2</span>.<span class=\"hljs-number\">0</span> /local/soft/solr</code></pre>\n\n<h2 id=\"4-Solr常用目录简介\"><a href=\"#4-Solr常用目录简介\" class=\"headerlink\" title=\"4.Solr常用目录简介\"></a>4.Solr常用目录简介</h2><p><img src=\"https://gitee.com/ambitions-king/picture/raw/master/img/image-20211004113700431.png\" alt=\"image-20211004113700431\"></p>\n<blockquote>\n<p>bin目录：可执行文件所在目录。<br>dist目录：Solr对外提供的核心、扩展、插件等代码jar文件。<br>server目录：Solr搜索应用服务器核心目录。<br>server/solr：Solr的索引库所在位置<br>server/solr-webapp：Solr的WAR核心应用<br>server/etc：Solr的核心配置</p>\n</blockquote>\n<h2 id=\"5-修改启动参数\"><a href=\"#5-修改启动参数\" class=\"headerlink\" title=\"5.修改启动参数\"></a>5.修改启动参数</h2><blockquote>\n<p>修改启动参数，否则启动时报警告。提示设置SOLR_ULIMIT_CHECKS=false</p>\n</blockquote>\n<pre><code class=\"hljs vim\">[root@king solr]# <span class=\"hljs-keyword\">cd</span> bin &amp;&amp; <span class=\"hljs-keyword\">vim</span> solr.in.<span class=\"hljs-keyword\">sh</span></code></pre>\n\n<p><img src=\"https://gitee.com/ambitions-king/picture/raw/master/img/wps1976.tmp.jpg\" alt=\"img\"></p>\n<h2 id=\"6-启动solr\"><a href=\"#6-启动solr\" class=\"headerlink\" title=\"6.启动solr\"></a>6.启动solr</h2><blockquote>\n<p>Solr内嵌Jetty，直接启动即可。默认监听8983端口。<br>Solr默认不推荐root账户启动，如果是root账户启动需要添加-force参数。</p>\n</blockquote>\n<pre><code class=\"hljs bash\">./solr start -force</code></pre>\n\n<p>启动成功如下图所示:</p>\n<p><img src=\"https://gitee.com/ambitions-king/picture/raw/master/img/image-20211004114327791.png\" alt=\"image-20211004114327791\"></p>\n<p>==注意:阿里云服务器8983端口放行==</p>\n<p><img src=\"https://gitee.com/ambitions-king/picture/raw/master/img/image-20211004114629744.png\" alt=\"image-20211004114629744\"></p>\n<h2 id=\"7-可视化管理界面\"><a href=\"#7-可视化管理界面\" class=\"headerlink\" title=\"7.可视化管理界面\"></a>7.可视化管理界面</h2><blockquote>\n<p>在浏览器输入ip:8983就可以打开solr可视化管理页面了</p>\n</blockquote>\n<p><img src=\"https://gitee.com/ambitions-king/picture/raw/master/img/image-20211004114856090.png\" alt=\"image-20211004114856090\"></p>\n<p>左侧有5个菜单。分别是：<br>（1）Dashboard：面板显示Solr的总体信息。<br>（2）Logging：日志<br>（3）Core Admin：Solr的核心。类似于数据的Database<br>（4）Java Perperties：所有Java相关属性。<br>（5）Thread Dump：线程相关信息。<br>（6）如果有Core，将显示在此处。</p>\n<h2 id=\"8-创建核心-索引库\"><a href=\"#8-创建核心-索引库\" class=\"headerlink\" title=\"8.创建核心(索引库)\"></a>8.创建核心(索引库)</h2><p>==Solr安装完成后默认是没有核心的。需要手动配置。==</p>\n<p><strong>需要在solr/server/solr下新建文件夹，并给定配置文件，否则无法建立。</strong></p>\n<h3 id=\"8-1-新建目录\"><a href=\"#8-1-新建目录\" class=\"headerlink\" title=\"8.1 新建目录\"></a>8.1 新建目录</h3><p>在 /local/soft/solr/server/solr中新建自定义名称目录。这里我创建了名为blog的目录</p>\n<pre><code class=\"hljs autoit\"><span class=\"hljs-meta\">#进入对应文件夹</span>\n[root<span class=\"hljs-symbol\">@king</span> ~]<span class=\"hljs-meta\"># cd /local/soft/solr/server/solr</span>\n<span class=\"hljs-meta\">#创建blog文件夹</span>\n[root<span class=\"hljs-symbol\">@king</span> solr]<span class=\"hljs-meta\"># mkdir blog</span></code></pre>\n\n<h3 id=\"8-2-复制配置文件\"><a href=\"#8-2-复制配置文件\" class=\"headerlink\" title=\"8.2 复制配置文件\"></a>8.2 复制配置文件</h3><blockquote>\n<p>在configsets里面包含了_default和sample_techproducts_configs。里面都是配置文件示例。_default属于默认配置，较纯净。sample_techproducts_configs是带有了一些配置示例。</p>\n</blockquote>\n<pre><code class=\"hljs gradle\">[root@king solr]# cp -r configsets<span class=\"hljs-regexp\">/_default/</span>conf<span class=\"hljs-regexp\">/ blog/</span></code></pre>\n\n<h3 id=\"8-3-创建-core\"><a href=\"#8-3-创建-core\" class=\"headerlink\" title=\"8.3 创建 core\"></a>8.3 创建 core</h3><p>在可视化管理界面填写如下信息</p>\n<p><img src=\"https://gitee.com/ambitions-king/picture/raw/master/img/image-20211004174045581.png\" alt=\"image-20211004174045581\"></p>\n<p>最后点击Add Core按钮创建</p>\n<p>创建成功结果如下：</p>\n<p><img src=\"https://gitee.com/ambitions-king/picture/raw/master/img/image-20211004174415937.png\" alt=\"image-20211004174415937\"></p>\n<h2 id=\"9-安装中文分词器\"><a href=\"#9-安装中文分词器\" class=\"headerlink\" title=\"9.安装中文分词器\"></a>9.安装中文分词器</h2><h3 id=\"9-1上传文件\"><a href=\"#9-1上传文件\" class=\"headerlink\" title=\"9.1上传文件\"></a>9.1上传文件</h3><p>上传ik-analyzer-8.2.0.jar到/local/upload文件夹下</p>\n<h3 id=\"9-2复制文件\"><a href=\"#9-2复制文件\" class=\"headerlink\" title=\"9.2复制文件\"></a>9.2复制文件</h3><p>将ik-analyzer-8.2.0.jar文件复制/local/soft/solr/server/solr-webapp/webapp/WEB-INF/lib文件夹下</p>\n<pre><code class=\"hljs shell\">[root@king upload]# cp ik-analyzer-8.2.0.jar /local/soft/solr/server/solr-webapp/webapp/WEB-INF/lib/</code></pre>\n\n<h3 id=\"9-3修改配置文件\"><a href=\"#9-3修改配置文件\" class=\"headerlink\" title=\"9.3修改配置文件\"></a>9.3修改配置文件</h3><h4 id=\"修改managed-schema文件\"><a href=\"#修改managed-schema文件\" class=\"headerlink\" title=\"修改managed-schema文件\"></a>修改managed-schema文件</h4><pre><code class=\"hljs shell\">[root@king /]# vim /local/soft/solr/server/solr/blog/conf/managed-schema</code></pre>\n\n<pre><code class=\"hljs shell\">&lt;fieldType name=&quot;text_zh_cn&quot; class=&quot;solr.TextField&quot;&gt;\n            &lt;analyzer&gt;\n                    &lt;tokenizer class=&quot;org.wltea.analyzer.lucene.IKTokenizerFactory&quot; useSmart=&quot;false&quot; conf=&quot;ik.conf&quot;/&gt;\n                    &lt;filter class=&quot;solr.LowerCaseFilterFactory&quot;/&gt;\n            &lt;/analyzer&gt;\n            &lt;analyzer type=&quot;query&quot;&gt;\n                    &lt;tokenizer class=&quot;org.wltea.analyzer.lucene.IKTokenizerFactory&quot; useSmart=&quot;true&quot; conf=&quot;ik.conf&quot;/&gt;\n                    &lt;filter class=&quot;solr.LowerCaseFilterFactory&quot;/&gt;\n            &lt;/analyzer&gt;\n&lt;/fieldType&gt;\n&lt;!--自定义字段，类似于设计数据表一样--&gt;\n\t&lt;!--ID--&gt;\n\t&lt;!--ID 已经在前面有了--&gt;\n\t&lt;!--浏览量--&gt;\n\t&lt;field name=&quot;blog_view_count&quot; type=&quot;pint&quot; indexed=&quot;true&quot; stored=&quot;true&quot; required=&quot;true&quot; multiValued=&quot;false&quot; /&gt;\n\t&lt;!--标题--&gt;\n\t&lt;field name=&quot;blog_title&quot; type=&quot;text_zh_cn&quot; indexed=&quot;true&quot; stored=&quot;true&quot; required=&quot;true&quot; multiValued=&quot;false&quot; /&gt;\n\t&lt;!--主题--&gt;\n\t&lt;field name=&quot;blog_summary&quot; type=&quot;text_zh_cn&quot; indexed=&quot;true&quot; stored=&quot;true&quot; required=&quot;true&quot; multiValued=&quot;false&quot; /&gt;\n\t&lt;!--创建时间--&gt;\n\t&lt;field name=&quot;blog_create_time&quot; type=&quot;pdate&quot; indexed=&quot;true&quot; stored=&quot;true&quot; required=&quot;true&quot; multiValued=&quot;false&quot; /&gt;\n\t&lt;!--标签--&gt;\n\t&lt;field name=&quot;blog_labels&quot; type=&quot;pstring&quot; indexed=&quot;true&quot; stored=&quot;true&quot; required=&quot;true&quot; multiValued=&quot;false&quot; /&gt;\n\t&lt;!--文章链接--&gt;\n\t&lt;field name=&quot;blog_url&quot; type=&quot;pstring&quot; indexed=&quot;true&quot; stored=&quot;true&quot; required=&quot;true&quot; multiValued=&quot;false&quot; /&gt;\n\t&lt;!--分类ID--&gt;\n\t&lt;field name=&quot;blog_category_id&quot; type=&quot;pstring&quot; indexed=&quot;true&quot; stored=&quot;true&quot; required=&quot;true&quot; multiValued=&quot;false&quot; /&gt;\n\t&lt;!--搜索item--&gt;\n\t&lt;field name=&quot;search_item&quot; type=&quot;text_zh_cn&quot; indexed=&quot;true&quot; stored=&quot;true&quot; required=&quot;true&quot; multiValued=&quot;true&quot; /&gt;\n\t&lt;copyField source=&quot;blog_title&quot; dest=&quot;search_item&quot;/&gt;\n\t&lt;copyField source=&quot;blog_summary&quot; dest=&quot;search_item&quot;/&gt;\n\t&lt;copyField source=&quot;blog_labels&quot; dest=&quot;search_item&quot;/&gt;</code></pre>\n\n<blockquote>\n<p>排版：Esc 退出编辑状态下：gg=G</p>\n</blockquote>\n<p><img src=\"https://gitee.com/ambitions-king/picture/raw/master/img/image-20211004220435973.png\" alt=\"image-20211004220435973\"></p>\n<h3 id=\"9-4-重启\"><a href=\"#9-4-重启\" class=\"headerlink\" title=\"9.4 重启\"></a>9.4 重启</h3><pre><code class=\"hljs awk\">[root@king <span class=\"hljs-regexp\">/]# cd /</span>local<span class=\"hljs-regexp\">/soft/</span>solr<span class=\"hljs-regexp\">/bin/</span>\n[root@king bin]<span class=\"hljs-comment\"># ./solr stop -all</span>\n[root@king bin]<span class=\"hljs-comment\"># ./solr start -force</span></code></pre>\n\n<h3 id=\"9-5-验证\"><a href=\"#9-5-验证\" class=\"headerlink\" title=\"9.5 验证\"></a>9.5 验证</h3><p><img src=\"https://gitee.com/ambitions-king/picture/raw/master/img/image-20211004225457462.png\" alt=\"image-20211004225457462\"></p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/10139744-19785d5c0484474c.jpg\" alt=\"img\"></p>\n<p>图片来源于:<a href=\"https://upload-images.jianshu.io/upload_images/10139744-19785d5c0484474c.jpg\">https://upload-images.jianshu.io/upload_images/10139744-19785d5c0484474c.jpg</a></p>\n<h3 id=\"9-6-删除全部数据\"><a href=\"#9-6-删除全部数据\" class=\"headerlink\" title=\"9.6 删除全部数据\"></a>9.6 删除全部数据</h3><blockquote>\n<p>1)documents type 选择 XML<br>2)documents 输入下面语句</p>\n<pre><code class=\"hljs xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">delete</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">query</span>&gt;</span>*:*<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">query</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">delete</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">commit</span>/&gt;</span></code></pre>\n\n\n</blockquote>\n<h3 id=\"10-使用DockerFile构建solr镜像\"><a href=\"#10-使用DockerFile构建solr镜像\" class=\"headerlink\" title=\"10 使用DockerFile构建solr镜像\"></a>10 使用DockerFile构建solr镜像</h3><h4 id=\"10-1-创建solr目录\"><a href=\"#10-1-创建solr目录\" class=\"headerlink\" title=\"10.1 创建solr目录\"></a>10.1 创建solr目录</h4><pre><code class=\"hljs sh\"><span class=\"hljs-built_in\">mkdir</span> solr</code></pre>\n\n<h4 id=\"10-2-新建docker-compose-yml文件\"><a href=\"#10-2-新建docker-compose-yml文件\" class=\"headerlink\" title=\"10.2 新建docker-compose.yml文件\"></a>10.2 新建docker-compose.yml文件</h4><pre><code class=\"hljs yml\"><span class=\"hljs-attr\">version:</span> <span class=\"hljs-string\">&#x27;3.1&#x27;</span>\n<span class=\"hljs-attr\">services:</span>\n  <span class=\"hljs-attr\">solr:</span>\n    <span class=\"hljs-attr\">build:</span> <span class=\"hljs-string\">solrWithIKAnalyzer</span>\n    <span class=\"hljs-attr\">restart:</span> <span class=\"hljs-string\">always</span>\n    <span class=\"hljs-attr\">container_name:</span> <span class=\"hljs-string\">blog_solr</span>\n    <span class=\"hljs-attr\">ports:</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-number\">8983</span><span class=\"hljs-string\">:8983</span></code></pre>\n\n<h4 id=\"10-3-将solrWithIKAnalyzer文件夹下的内容全部放入solr文件夹下\"><a href=\"#10-3-将solrWithIKAnalyzer文件夹下的内容全部放入solr文件夹下\" class=\"headerlink\" title=\"10.3 将solrWithIKAnalyzer文件夹下的内容全部放入solr文件夹下\"></a>10.3 将solrWithIKAnalyzer文件夹下的内容全部放入solr文件夹下</h4><p>solrWithIKAnalyzer文件夹结构如下</p>\n<p><img src=\"https://gitee.com/jinguoguang/images/raw/master/img/20220106095732.png\" alt=\"image-20220106095731927\"></p>\n<h4 id=\"10-4-solrWithIKAnalyzer目录下新建Dockerfile文件\"><a href=\"#10-4-solrWithIKAnalyzer目录下新建Dockerfile文件\" class=\"headerlink\" title=\"10.4  solrWithIKAnalyzer目录下新建Dockerfile文件\"></a>10.4  solrWithIKAnalyzer目录下新建Dockerfile文件</h4><pre><code class=\"hljs sh\"><span class=\"hljs-comment\">#新建Dockerfile文件</span>\nvim Dockerfile\n<span class=\"hljs-comment\">#填写如下内容</span></code></pre>\n\n<pre><code class=\"hljs dockerfile\"><span class=\"hljs-keyword\">MAINTAINER</span> king\n<span class=\"hljs-comment\"># 创建 Core，切换目录</span>\n<span class=\"hljs-keyword\">WORKDIR</span><span class=\"language-bash\"> /opt/solr/server/solr</span>\n<span class=\"hljs-comment\"># 创建目录</span>\n<span class=\"hljs-keyword\">RUN</span><span class=\"language-bash\"> <span class=\"hljs-built_in\">mkdir</span> blog_core</span>\n<span class=\"hljs-comment\"># 切换目录</span>\n<span class=\"hljs-keyword\">WORKDIR</span><span class=\"language-bash\"> /opt/solr/server/solr/blog_core</span>\n<span class=\"hljs-comment\"># 把这个Core名称添加到配置文件中，这样在前端就可以看到了</span>\n<span class=\"hljs-keyword\">RUN</span><span class=\"language-bash\"> <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">&#x27;name=blog_core&#x27;</span> &gt; core.properties</span>\n<span class=\"hljs-comment\"># 从模版中复制一份出来配置文件出来</span>\n<span class=\"hljs-keyword\">RUN</span><span class=\"language-bash\"> <span class=\"hljs-built_in\">cp</span> -r /opt/solr/server/solr/configsets/sample_techproducts_configs/conf/ .</span>\n<span class=\"hljs-comment\"># 进入到容器的lib文件夹</span>\n<span class=\"hljs-keyword\">WORKDIR</span><span class=\"language-bash\"> /opt/solr/server/solr-webapp/webapp/WEB-INF/lib</span>\n<span class=\"hljs-comment\"># 中文分词器</span>\n<span class=\"hljs-keyword\">RUN</span><span class=\"language-bash\"> <span class=\"hljs-built_in\">cp</span> -r /opt/solr/contrib/analysis-extras/lucene-libs/lucene-analyzers-smartcn-5.5.5.jar .</span>\n<span class=\"hljs-comment\"># 复制两个jar包进去</span>\n<span class=\"hljs-keyword\">ADD</span><span class=\"language-bash\"> ik-analyzer-solr5-5.x.jar .</span>\n<span class=\"hljs-keyword\">ADD</span><span class=\"language-bash\"> solr-analyzer-ik-5.1.0.jar .</span>\n<span class=\"hljs-keyword\">WORKDIR</span><span class=\"language-bash\"> /opt/solr/server/solr-webapp/webapp/WEB-INF</span>\n<span class=\"hljs-comment\"># 复制字典</span>\n<span class=\"hljs-keyword\">ADD</span><span class=\"language-bash\"> ext.dic .</span>\n<span class=\"hljs-keyword\">ADD</span><span class=\"language-bash\"> stopword.dic .</span>\n<span class=\"hljs-comment\"># 配置扩展字典的配置文件</span>\n<span class=\"hljs-keyword\">ADD</span><span class=\"language-bash\"> IKAnalyzer.cfg.xml .</span>\n<span class=\"hljs-comment\"># 增加分词配置</span>\n<span class=\"hljs-keyword\">COPY</span><span class=\"language-bash\"> managed-schema /opt/solr/server/solr/blog_core/conf</span>\n<span class=\"hljs-keyword\">WORKDIR</span><span class=\"language-bash\"> /opt/solr</span></code></pre>\n\n<h4 id=\"10-5-在solrWithIKAnalyzer目录下构建\"><a href=\"#10-5-在solrWithIKAnalyzer目录下构建\" class=\"headerlink\" title=\"10.5 在solrWithIKAnalyzer目录下构建\"></a>10.5 在solrWithIKAnalyzer目录下构建</h4><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">docker</span> build -t blog_solr:<span class=\"hljs-number\">1</span>.<span class=\"hljs-number\">0</span> .\n<span class=\"hljs-comment\">#注意后面有个小点不要忽视</span></code></pre>\n\n<h4 id=\"10-6-在solr目录下使用docker-compose启动容器\"><a href=\"#10-6-在solr目录下使用docker-compose启动容器\" class=\"headerlink\" title=\"10.6 在solr目录下使用docker-compose启动容器\"></a>10.6 在solr目录下使用docker-compose启动容器</h4><blockquote>\n<p>Docker Compose是一个用来定义和运行复杂应用的Docker工具。一个使用Docker容器的应用，通常由多个容器组成。使用Docker Compose不再需要使用shell脚本来启动容器。<br>Compose 通过一个配置文件来管理多个Docker容器，在配置文件中，所有的容器通过services来定义，然后使用docker-compose脚本来启动，停止和重启应用，和应用中的服务以及所有依赖服务的容器，非常适合组合使用多个容器进行开发的场景。</p>\n</blockquote>\n<h5 id=\"安装docker-composr\"><a href=\"#安装docker-composr\" class=\"headerlink\" title=\"安装docker-composr\"></a>安装docker-composr</h5><ul>\n<li>从github上下载docker-compose二进制文件安装</li>\n</ul>\n <pre><code class=\"hljs sh\">sudo curl -L https://github.com/docker/compose/releases/download/1.16.1/docker-compose-`<span class=\"hljs-built_in\">uname</span> -s`-`<span class=\"hljs-built_in\">uname</span> -m` -o /usr/local/bin/docker-compose</code></pre>\n\n<p>  若是github访问太慢，也可以用daocloud下载</p>\n<pre><code class=\"hljs sh\">sudo curl -L https://get.daocloud.io/docker/compose/releases/download/1.25.1/docker-compose-`<span class=\"hljs-built_in\">uname</span> -s`-`<span class=\"hljs-built_in\">uname</span> -m` -o /usr/local/bin/docker-compose</code></pre>\n\n<ul>\n<li>添加可执行权限</li>\n</ul>\n <pre><code class=\"hljs sh\">sudo <span class=\"hljs-built_in\">chmod</span> +x /usr/local/bin/docker-compose</code></pre>\n\n<ul>\n<li><p>测试安装结果</p>\n<pre><code class=\"hljs sh\">docker-compose --version</code></pre></li>\n</ul>\n<pre><code class=\"hljs crmsh\"><span class=\"hljs-comment\">#以后台的方式运行容器。不会在终端上打印运行日志</span>\ndocker-compose up -d\n<span class=\"hljs-comment\"># 停止运行的容器，但不会删除它们。</span>\ndocker-compose <span class=\"hljs-literal\">stop</span>\n<span class=\"hljs-comment\">#停止运行的容器，并且会删除已停止的容器以及已创建的所有网络</span>\ndocker-compose down</code></pre>\n\n\n\n<h1 id=\"七、minio服务器安装\"><a href=\"#七、minio服务器安装\" class=\"headerlink\" title=\"七、minio服务器安装\"></a>七、minio服务器安装</h1><h2 id=\"1-安装-1\"><a href=\"#1-安装-1\" class=\"headerlink\" title=\"1.安装\"></a>1.安装</h2><h3 id=\"1-1拉取镜像\"><a href=\"#1-1拉取镜像\" class=\"headerlink\" title=\"1.1拉取镜像\"></a>1.1拉取镜像</h3><pre><code class=\"hljs powershell\">docker pull minio/minio</code></pre>\n\n<h3 id=\"1-2创建并启动容器\"><a href=\"#1-2创建并启动容器\" class=\"headerlink\" title=\"1.2创建并启动容器\"></a>1.2创建并启动容器</h3><pre><code class=\"hljs powershell\">docker run <span class=\"hljs-literal\">-d</span> <span class=\"hljs-literal\">-p</span> <span class=\"hljs-number\">9000</span>:<span class=\"hljs-number\">9000</span> <span class=\"hljs-literal\">-p</span> <span class=\"hljs-number\">50000</span>:<span class=\"hljs-number\">50000</span> <span class=\"hljs-literal\">--name</span> minio \\\n<span class=\"hljs-literal\">-e</span> <span class=\"hljs-string\">&quot;MINIO_ACCESS_KEY=admin&quot;</span> \\\n<span class=\"hljs-literal\">-e</span> <span class=\"hljs-string\">&quot;MINIO_SECRET_KEY=admin123456&quot;</span> \\\n<span class=\"hljs-literal\">-v</span> /local/docker/minio/<span class=\"hljs-keyword\">data</span>:/<span class=\"hljs-keyword\">data</span> \\\n<span class=\"hljs-literal\">-v</span> /local/d/minio/config:/root/.minio \\\nminio/minio server <span class=\"hljs-literal\">--console-address</span> <span class=\"hljs-string\">&quot;:50000&quot;</span> /<span class=\"hljs-keyword\">data</span></code></pre>\n\n<h3 id=\"1-3配置阿里云服务器安全组\"><a href=\"#1-3配置阿里云服务器安全组\" class=\"headerlink\" title=\"1.3配置阿里云服务器安全组\"></a>1.3配置阿里云服务器安全组</h3><p><img src=\"https://gitee.com/ambitions-king/picture/raw/master/img/image-20211020210958366.png\" alt=\"image-20211020210958366\"></p>\n<h2 id=\"2-登录minio服务器管理控制台\"><a href=\"#2-登录minio服务器管理控制台\" class=\"headerlink\" title=\"2.登录minio服务器管理控制台\"></a>2.登录minio服务器管理控制台</h2><h3 id=\"2-1创建游客用户\"><a href=\"#2-1创建游客用户\" class=\"headerlink\" title=\"2.1创建游客用户\"></a>2.1创建游客用户</h3><p><img src=\"https://gitee.com/ambitions-king/picture/raw/master/img/image-20211020211208054.png\" alt=\"image-20211020211208054\"></p>\n<p><img src=\"https://gitee.com/ambitions-king/picture/raw/master/img/image-20211020211340198.png\" alt=\"image-20211020211340198\"></p>\n<blockquote>\n<p>将权限设置为只读</p>\n</blockquote>\n<h3 id=\"2-3创建Bucket\"><a href=\"#2-3创建Bucket\" class=\"headerlink\" title=\"2.3创建Bucket\"></a>2.3创建Bucket</h3><p><img src=\"https://gitee.com/ambitions-king/picture/raw/master/img/image-20211020211507476.png\" alt=\"image-20211020211507476\"></p>\n<h3 id=\"2-4设置Bucket权限为readwrite\"><a href=\"#2-4设置Bucket权限为readwrite\" class=\"headerlink\" title=\"2.4设置Bucket权限为readwrite\"></a>2.4设置Bucket权限为readwrite</h3><p><img src=\"https://gitee.com/ambitions-king/picture/raw/master/img/image-20211020211701191.png\" alt=\"image-20211020211701191\"></p>\n<p><img src=\"https://gitee.com/ambitions-king/picture/raw/master/img/image-20211020211729145.png\" alt=\"image-20211020211729145\"></p>\n<h1 id=\"八、MongoDB服务安装\"><a href=\"#八、MongoDB服务安装\" class=\"headerlink\" title=\"八、MongoDB服务安装\"></a>八、MongoDB服务安装</h1><h2 id=\"1-拉取镜像-1\"><a href=\"#1-拉取镜像-1\" class=\"headerlink\" title=\"1.拉取镜像\"></a>1.拉取镜像</h2><pre><code class=\"hljs sh\">docker pull mongo</code></pre>\n\n<h2 id=\"2-创建目录\"><a href=\"#2-创建目录\" class=\"headerlink\" title=\"2.创建目录\"></a>2.创建目录</h2><pre><code class=\"hljs awk\">mkdir -p <span class=\"hljs-regexp\">/local/</span>docker<span class=\"hljs-regexp\">/mongo/</span>data</code></pre>\n\n<h2 id=\"3-修改目录权限\"><a href=\"#3-修改目录权限\" class=\"headerlink\" title=\"3.修改目录权限\"></a>3.修改目录权限</h2><pre><code class=\"hljs sh\"><span class=\"hljs-built_in\">chmod</span> 777/local/docker/mongo/data</code></pre>\n\n<h2 id=\"4-构建并启动容器\"><a href=\"#4-构建并启动容器\" class=\"headerlink\" title=\"4.构建并启动容器\"></a>4.构建并启动容器</h2><pre><code class=\"hljs routeros\">docker <span class=\"hljs-built_in\">run</span> -d --name mongodb -v /local/docker/mongo/data:/data/db -p 27017:27017 -e <span class=\"hljs-attribute\">MONGO_INITDB_ROOT_USERNAME</span>=admin -e <span class=\"hljs-attribute\">MONGO_INITDB_ROOT_PASSWORD</span>=admin <span class=\"hljs-attribute\">--privileged</span>=<span class=\"hljs-literal\">true</span> mongo:latest</code></pre>\n<blockquote>\n<p>参数说明<br>-d 后台运行容器</p>\n<p>–name mongodb 运行容器名</p>\n<p>-v /mydata/mongodb/datadb:/data/db 挂载目录</p>\n<p>-p 27017:27017：将27017映射到外部端口27017 将容器的27017端口映射到主机的27017端口，27017是和宿主机的通信接口，所有docker内部容器的连接使用27017接口，集群配置需连接容器内部27017端口，故最好保持前后端口一致</p>\n<p>-e MONGO_INITDB_ROOT_USERNAME=admin 指定用户名</p>\n<p>-e MONGO_INITDB_ROOT_PASSWORD=admin 指定密码</p>\n<p>–privileged=true 使得容器内的root拥有真正的root权限。否则，container内的root只是外部的一个普通用户权限</p>\n</blockquote>\n<h2 id=\"5-查看mongodb日志\"><a href=\"#5-查看mongodb日志\" class=\"headerlink\" title=\"5.查看mongodb日志\"></a>5.查看mongodb日志</h2><pre><code class=\"hljs sh\">docker logs mongodb</code></pre>\n\n<h2 id=\"6-mongodb随-docker-自启动\"><a href=\"#6-mongodb随-docker-自启动\" class=\"headerlink\" title=\"6.mongodb随 docker 自启动\"></a>6.mongodb随 docker 自启动</h2><pre><code class=\"hljs sh\">docker update mongodb --restart=always</code></pre>\n\n<p>注意：这里的 mongodb是容器的名字，不是镜像的名字。</p>\n<h2 id=\"7-启动-停止-重启\"><a href=\"#7-启动-停止-重启\" class=\"headerlink\" title=\"7. 启动|停止|重启\"></a>7. 启动|停止|重启</h2><pre><code class=\"hljs sh\">docker start mongodb\n\ndocker stop mongodb\n\ndocker restart mongodb</code></pre>\n\n<p>注意：这里的 mongodb 是容器的名字，不是镜像的名字。</p>\n<h2 id=\"8-进入mongodb-optional\"><a href=\"#8-进入mongodb-optional\" class=\"headerlink\" title=\"8.进入mongodb (optional)\"></a>8.进入mongodb (optional)</h2><pre><code class=\"hljs sh\">docker <span class=\"hljs-built_in\">exec</span> -it mongodb /bin/bash</code></pre>\n\n\n\n<h1 id=\"docker-常用命令\"><a href=\"#docker-常用命令\" class=\"headerlink\" title=\"docker 常用命令\"></a>docker 常用命令</h1><pre><code class=\"hljs sh\">批量启动容器\n\ndocker container start $(docker container <span class=\"hljs-built_in\">ls</span> -a -q) 或 docker start $(docker container <span class=\"hljs-built_in\">ls</span> -a -q) \n\n批量停止容器\n\ndocker container stop $(docker container <span class=\"hljs-built_in\">ls</span> -a -q) 或 docker stop $(docker container <span class=\"hljs-built_in\">ls</span> -a -q) \n\n批量重启容器\n\ndocker container restart $(docker container <span class=\"hljs-built_in\">ls</span> -a -q) 或 docker restart $(docker container <span class=\"hljs-built_in\">ls</span> -a -q) \n\n批量删除容器\n\ndocker container <span class=\"hljs-built_in\">rm</span> $(docker container <span class=\"hljs-built_in\">ls</span> -a -q) 或 docker <span class=\"hljs-built_in\">rm</span> <span class=\"hljs-variable\">$&#123;docker container ls -a -q&#125;</span>\n\n批量杀死容器\n\ndocker container <span class=\"hljs-built_in\">kill</span> $(docker container <span class=\"hljs-built_in\">ls</span> -a -q) 或 docker <span class=\"hljs-built_in\">kill</span> <span class=\"hljs-variable\">$&#123;docker container ls -a -q&#125;</span>\n\ndocker查询所有进程\n\ndocker ps -a\n\ndocker查询正常运行的进程\n\ndocker ps\n\n容器重新命名\n\ndocker rename 原容器名称 新容器名称\n\n举例: docker rename blissful_hoover solr</code></pre>"},{"title":"IDEA常用设置及其技巧","excerpt":"IDEA 作为Java开发工具的后起之秀，几乎以碾压之势把其他对手甩在了身后，主要原因还是归功于：好用；虽然有点重，但依旧瑕不掩瑜，内置了非常多的功能，大大提高了日常的开发效率，下面汇总了常用的使用小技巧，学会之后，让你的撸码效率直接起飞...","index_img":"https://img0.baidu.com/it/u=3480684146,3936777977&fm=253&fmt=auto&app=138&f=JPEG?w=799&h=500","abbrlink":"4f2f0829","date":"2023-05-14T05:55:19.000Z","_content":"\n# 一、常用设置\n\n## 1.设置提示词忽略大小写\n\n把这个勾去掉，(有的idea版本是选择选项 选择none即可)\n\n![image-20230514140010097](https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202305141400256.png)\n\n## 2.显示方法分隔符\n方便查看方法与方法之间的间隔，在代码不规范的项目中 很好用！\n\n![image-20230514140135967](https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202305141401097.png)\n\n## 3.自动导包、自动移除没用的包\n\n![image-20230514140224885](https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202305141402385.png)\n\n# 二、使用技巧\n\n## 4.预览某个类的代码\n\n例如People类里面的test方法，按`ctrl+shift+a`\n\n例如我们在test类中，有句代码：`People p = new People(); `我们想稍微查看一下People这个类，但是tab已经够多了，`ctrl+alt+b`会打开新的标签，标签多了就混乱了，尤其一堆命名类似的tab,这时候我们可以按`ctrl+shift+i` 实现预览功能，不占tab\n\n![image-20230514140354162](https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202305141403416.png)\n\n# 三、插件推荐","source":"_posts/IDEA常用设置及其技巧.md","raw":"---\ntitle: IDEA常用设置及其技巧\nexcerpt: IDEA 作为Java开发工具的后起之秀，几乎以碾压之势把其他对手甩在了身后，主要原因还是归功于：好用；虽然有点重，但依旧瑕不掩瑜，内置了非常多的功能，大大提高了日常的开发效率，下面汇总了常用的使用小技巧，学会之后，让你的撸码效率直接起飞...\ntags:\n  - 开发工具\ncategories:\n  - 生产工具\nindex_img: https://img0.baidu.com/it/u=3480684146,3936777977&fm=253&fmt=auto&app=138&f=JPEG?w=799&h=500\nabbrlink: 4f2f0829\ndate: 2023-05-14 13:55:19\n---\n\n# 一、常用设置\n\n## 1.设置提示词忽略大小写\n\n把这个勾去掉，(有的idea版本是选择选项 选择none即可)\n\n![image-20230514140010097](https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202305141400256.png)\n\n## 2.显示方法分隔符\n方便查看方法与方法之间的间隔，在代码不规范的项目中 很好用！\n\n![image-20230514140135967](https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202305141401097.png)\n\n## 3.自动导包、自动移除没用的包\n\n![image-20230514140224885](https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202305141402385.png)\n\n# 二、使用技巧\n\n## 4.预览某个类的代码\n\n例如People类里面的test方法，按`ctrl+shift+a`\n\n例如我们在test类中，有句代码：`People p = new People(); `我们想稍微查看一下People这个类，但是tab已经够多了，`ctrl+alt+b`会打开新的标签，标签多了就混乱了，尤其一堆命名类似的tab,这时候我们可以按`ctrl+shift+i` 实现预览功能，不占tab\n\n![image-20230514140354162](https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202305141403416.png)\n\n# 三、插件推荐","slug":"IDEA常用设置及其技巧","published":1,"updated":"2023-05-15T05:01:23.665Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clhrpaia40006eq6qatz27ph6","content":"<h1 id=\"一、常用设置\"><a href=\"#一、常用设置\" class=\"headerlink\" title=\"一、常用设置\"></a>一、常用设置</h1><h2 id=\"1-设置提示词忽略大小写\"><a href=\"#1-设置提示词忽略大小写\" class=\"headerlink\" title=\"1.设置提示词忽略大小写\"></a>1.设置提示词忽略大小写</h2><p>把这个勾去掉，(有的idea版本是选择选项 选择none即可)</p>\n<p><img src=\"https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202305141400256.png\" alt=\"image-20230514140010097\"></p>\n<h2 id=\"2-显示方法分隔符\"><a href=\"#2-显示方法分隔符\" class=\"headerlink\" title=\"2.显示方法分隔符\"></a>2.显示方法分隔符</h2><p>方便查看方法与方法之间的间隔，在代码不规范的项目中 很好用！</p>\n<p><img src=\"https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202305141401097.png\" alt=\"image-20230514140135967\"></p>\n<h2 id=\"3-自动导包、自动移除没用的包\"><a href=\"#3-自动导包、自动移除没用的包\" class=\"headerlink\" title=\"3.自动导包、自动移除没用的包\"></a>3.自动导包、自动移除没用的包</h2><p><img src=\"https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202305141402385.png\" alt=\"image-20230514140224885\"></p>\n<h1 id=\"二、使用技巧\"><a href=\"#二、使用技巧\" class=\"headerlink\" title=\"二、使用技巧\"></a>二、使用技巧</h1><h2 id=\"4-预览某个类的代码\"><a href=\"#4-预览某个类的代码\" class=\"headerlink\" title=\"4.预览某个类的代码\"></a>4.预览某个类的代码</h2><p>例如People类里面的test方法，按<code>ctrl+shift+a</code></p>\n<p>例如我们在test类中，有句代码：<code>People p = new People(); </code>我们想稍微查看一下People这个类，但是tab已经够多了，<code>ctrl+alt+b</code>会打开新的标签，标签多了就混乱了，尤其一堆命名类似的tab,这时候我们可以按<code>ctrl+shift+i</code> 实现预览功能，不占tab</p>\n<p><img src=\"https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202305141403416.png\" alt=\"image-20230514140354162\"></p>\n<h1 id=\"三、插件推荐\"><a href=\"#三、插件推荐\" class=\"headerlink\" title=\"三、插件推荐\"></a>三、插件推荐</h1>","site":{"data":{}},"more":"<h1 id=\"一、常用设置\"><a href=\"#一、常用设置\" class=\"headerlink\" title=\"一、常用设置\"></a>一、常用设置</h1><h2 id=\"1-设置提示词忽略大小写\"><a href=\"#1-设置提示词忽略大小写\" class=\"headerlink\" title=\"1.设置提示词忽略大小写\"></a>1.设置提示词忽略大小写</h2><p>把这个勾去掉，(有的idea版本是选择选项 选择none即可)</p>\n<p><img src=\"https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202305141400256.png\" alt=\"image-20230514140010097\"></p>\n<h2 id=\"2-显示方法分隔符\"><a href=\"#2-显示方法分隔符\" class=\"headerlink\" title=\"2.显示方法分隔符\"></a>2.显示方法分隔符</h2><p>方便查看方法与方法之间的间隔，在代码不规范的项目中 很好用！</p>\n<p><img src=\"https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202305141401097.png\" alt=\"image-20230514140135967\"></p>\n<h2 id=\"3-自动导包、自动移除没用的包\"><a href=\"#3-自动导包、自动移除没用的包\" class=\"headerlink\" title=\"3.自动导包、自动移除没用的包\"></a>3.自动导包、自动移除没用的包</h2><p><img src=\"https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202305141402385.png\" alt=\"image-20230514140224885\"></p>\n<h1 id=\"二、使用技巧\"><a href=\"#二、使用技巧\" class=\"headerlink\" title=\"二、使用技巧\"></a>二、使用技巧</h1><h2 id=\"4-预览某个类的代码\"><a href=\"#4-预览某个类的代码\" class=\"headerlink\" title=\"4.预览某个类的代码\"></a>4.预览某个类的代码</h2><p>例如People类里面的test方法，按<code>ctrl+shift+a</code></p>\n<p>例如我们在test类中，有句代码：<code>People p = new People(); </code>我们想稍微查看一下People这个类，但是tab已经够多了，<code>ctrl+alt+b</code>会打开新的标签，标签多了就混乱了，尤其一堆命名类似的tab,这时候我们可以按<code>ctrl+shift+i</code> 实现预览功能，不占tab</p>\n<p><img src=\"https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202305141403416.png\" alt=\"image-20230514140354162\"></p>\n<h1 id=\"三、插件推荐\"><a href=\"#三、插件推荐\" class=\"headerlink\" title=\"三、插件推荐\"></a>三、插件推荐</h1>"},{"title":"Redis学习笔记","excerpt":"VuePress 由两部分组成：第一部分是一个极简静态网站生成器 (opens new window)，它包含由 Vue 驱动的主题系统和插件 API，另一个部分是为书写技术文档而优化的默认主题，它的诞生初衷是为了支持 Vue 及其子项目的文档需求。","index_img":"https://img0.baidu.com/it/u=1229487231,1522020023&fm=253&fmt=auto&app=138&f=JPEG?w=480&h=260","abbrlink":"26960e5d","date":"2022-01-31T16:00:00.000Z","_content":"\n## 一、概述\n\n### (一)什么是Redis\n\nRedis(Remote Dictionary Server) 是一个使用 C 语言编写的，开源的（BSD许可）高性能非关系型（NoSQL）的键值对数据库。\n\nRedis 可以存储键和五种不同类型的值之间的映射。键的类型只能为字符串，值支持五种数据类型：字符串、列表、集合、散列表、有序集合。\n\n与传统数据库不同的是 Redis 的数据是存在内存中的，所以读写速度非常快，因此 redis 被广泛应用于缓存方向，每秒可以处理超过 10万次读写操作，是已知性能最快的Key-Value DB。\n\n另外，Redis 也经常用来做分布式锁。除此之外，Redis 支持事务 、持久化、LUA脚本、LRU驱动事件、多种集群方案。\n\n### (二)Redis优缺点\n\n优点\n\n- 读写性能优异， Redis能读的速度是110000次/s，写的速度是81000次/s。\n- 支持数据持久化，支持AOF和RDB两种持久化方式。\n- 支持事务，Redis的所有操作都是原子性的，同时Redis还支持对几个操作合并后的原子性执行。\n- 数据结构丰富，除了支持string类型的value外还支持hash、set、zset、list等数据结构。\n- 支持主从复制，主机会自动将数据同步到从机，可以进行读写分离。\n\n缺点\n\n- 数据库容量受到物理内存的限制，不能用作海量数据的高性能读写，因此Redis适合的场景主要局限在较小数据量的高性能操作和运算上。\n- Redis 不具备自动容错和恢复功能，主机从机的宕机都会导致前端部分读写请求失败，需要等待机器重启或者手动切换前端的IP才能恢复。\n- 主机宕机，宕机前有部分数据未能及时同步到从机，切换IP后还会引入数据不一致的问题，降低了系统的可用性。\n- Redis 较难支持在线扩容，在集群容量达到上限时在线扩容会变得很复杂。为避免这一问题，运维人员在系统上线时必须确保有足够的空间，这对资源造成了很大的浪费。\n\n### (三)为什么要用 Redis /为什么要用缓存\n\n主要从“高性能”和“高并发”这两点来看待这个问题。\n\n**高性能：**\n\n假如用户第一次访问数据库中的某些数据。这个过程会比较慢，因为是从硬盘上读取的。将该用户访问的数据存在数缓存中，这样下一次再访问这些数据的时候就可以直接从缓存中获取了。\n\n操作缓存就是直接操作内存，所以速度相当快。如果数据库中的对应数据改变的之后，同步改变缓存中相应的数据即可！\n\n![img](https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202302101630596.png)\n\n**高并发：**\n\n直接操作缓存能够承受的请求是远远大于直接访问数据库的，所以我们可以考虑把数据库中的部分数据转移到缓存中去，这样用户的一部分请求会直接到缓存这里而不用经过数据库。\n\n![img](https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202302101630478.png)\n\n## 二、数据类型\n\n| 数据类型 | 可以存储的值           | 操作                                                         | 应用场景                                                     |\n| :------: | ---------------------- | ------------------------------------------------------------ | ------------------------------------------------------------ |\n|  String  | 字符串、整数或者浮点数 | 对整个字符串或者字符串的其中一部分执行操作 对整数和浮点数执行自增或者自减操作 | 做简单的键值对缓存                                           |\n|   List   | 列表                   | 从两端压入或者弹出元素 对单个或者多个元素进行修剪， 只保留一个范围内的元素 | 存储一些列表型的数据结构，类似粉丝列表、文章的评论列表之类的数据 |\n|   Set    | 无序集合               | 添加、获取、移除单个元素 检查一个元素是否存在于集合中 计算交集、并集、差集 从集合里面随机获取元素 | 交集、并集、差集的操作，比如交集，可以把两个人的粉丝列表整一个交集 |\n|   Hash   | 包含键值对的无序散列表 | 添加、获取、移除单个键值对 获取所有键值对 检查某个键是否存在 | 结构化的数据，比如一个对象                                   |\n|   ZSET   | 有序集合               | 添加、获取、删除元素 根据分值范围或者成员来获取元素 计算一个键的排名 | 去重但可以排序，如获取排名前几名的用户                       |\n\n## 三、Redis的应用场景\n\n**计数器**\n\n​\t\t可以对 String 进行自增自减运算，从而实现计数器功能。Redis 这种内存型数据库的读写性能非常高，很适合存储频繁读写的计数量。\n\n**缓存**\n\n​\t\t将热点数据放到内存中，设置内存的最大使用量以及淘汰策略来保证缓存的命中率。\n\n**会话缓存**\n\n​\t\t可以使用 Redis 来统一存储多台应用服务器的会话信息。当应用服务器不再存储用户的会话信息，也就不再具有状态，一个用户可以请求任意一个应用服务器，从而更容易实现高可用性以及可伸缩性。\n\n**全页缓存（FPC）**\n\n​\t\t除基本的会话token之外，Redis还提供很简便的FPC平台。以Magento为例，Magento提供一个插件来使用Redis作为全页缓存后端。此外，对WordPress的用户来说，Pantheon有一个非常好的插件 wp-redis，这个插件能帮助你以最快速度加载你曾浏览过的页面。\n\n**查找表**\n\n​\t\t例如 DNS 记录就很适合使用 Redis 进行存储。查找表和缓存类似，也是利用了 Redis 快速的查找特性。但是查找表的内容不能失效，而缓存的内容可以失效，因为缓存不作为可靠的数据来源。\n\n**消息队列(发布/订阅功能)**\n\n​\t\tList 是一个双向链表，可以通过 lpush 和 rpop 写入和读取消息。不过最好使用 Kafka、RabbitMQ 等消息中间件。\n\n**分布式锁实现**\n\n​\t\t在分布式场景下，无法使用单机环境下的锁来对多个节点上的进程进行同步。可以使用 Redis 自带的 SETNX 命令实现分布式锁，除此之外，还可以使用官方提供的 RedLock 分布式锁实现。\n\n**其它**\n\n​\t\tSet 可以实现交集、并集等操作，从而实现共同好友等功能。ZSet 可以实现有序性操作，从而实现排行榜等功能。\n\n![img](https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202302101632204.png)\n\n## 四、持久化\n\n### (一)什么是持久化\n\n持久化就是把内存的数据写到磁盘中去，防止服务宕机了内存数据丢失。\n\n### (二)Redis 的持久化机制是什么？各自的优缺点？\n\nRedis 提供两种持久化机制 **RDB**（默认） 和 **AOF** 机制:\n\n#### 1.RDB\n\n1.RDB：是Redis DataBase缩写快照\n\n​\tRDB是Redis默认的持久化方式。按照一定的时间将内存的数据以快照的形式保存到硬盘中，对应产生的数据文件为dump.rdb。通过配置文件中的save参数来定义快照的周期。\n\nRDB持久化可以手动执行也可以根据配置定期执行，它的作用是将某个时间点上的数据库状态保存到RDB文件中，RDB文件是一个压缩的二进制文件，通过它可以还原某个时刻数据库的状态。由于RDB文件是保存在硬盘上的，所以即使redis崩溃或者退出，只要RDB文件存在，就可以用它来恢复还原数据库的状态。\n\n可以通过SAVE或者BGSAVE来生成RDB文件。\n\nSAVE命令会阻塞redis进程，直到RDB文件生成完毕，在进程阻塞期间，redis不能处理任何命令请求，这显然是不合适的。\n\nBGSAVE则是会fork出一个子进程，然后由子进程去负责生成RDB文件，父进程还可以继续处理命令请求，不会阻塞进程。\n\n![img](https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202302101633696.png)\n\n**优点：**\n\n- 1、只有一个文件 dump.rdb，方便持久化。\n- 2、容灾性好，一个文件可以保存到安全的磁盘。\n- 3、性能最大化，fork 子进程来完成写操作，让主进程继续处理命令，所以是 IO 最大化。使用单独子进程来进行持久化，主进程不会进行任何 IO 操作，保证了 redis 的高性能\n- 4.相对于数据集大时，比 AOF 的启动效率更高。\n\n**缺点：**\n\n数据安全性低。RDB 是间隔一段时间进行持久化，如果持久化之间 redis 发生故障，会发生数据丢失。所以这种方式更适合数据要求不严谨的时候。\n\n#### 2.AOF\n\nAOF持久化(即Append Only File持久化)，则是将Redis执行的每次写命令记录到单独的日志文件中，当重启Redis会重新将持久化的日志中文件恢复数据。\n\n当两种方式同时开启时，数据恢复Redis会优先选择AOF恢复。\n\nAOF和RDB不同，AOF是通过保存redis服务器所执行的写命令来记录数据库状态的。\n\nAOF通过追加、写入、同步三个步骤来实现持久化机制。\n\n​\t1.当AOF持久化处于激活状态，服务器执行完写命令之后，写命令将会被追加append到aof_buf缓冲区的末尾\n\n​\t2.在服务器每结束一个事件循环之前，将会调用flushAppendOnlyFile函数决定是否要将aof_buf的内容保存到AOF文件中，可以通过配置appendfsync来决定。\n\nalways ##aof_buf内容写入并同步到AOF文件\n\neverysec ##将aof_buf中内容写入到AOF文件，如果上次同步AOF文件时间距离现在超过1秒，则再次对AOF文件进行同步\n\nno ##将aof_buf内容写入AOF文件，但是并不对AOF文件进行同步，同步时间由操作系统决定\n\n如果不设置，默认选项将会是everysec，因为always来说虽然最安全（只会丢失一次事件循环的写命令），但是性能较差，而everysec模式只不过会可能丢失1秒钟的数据，而no模式的效率和everysec相仿，但是会丢失上次同步AOF文件之后的所有写命令数据。\n\n![img](https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202302101633783.png)\n\n**优点：**\n\n- 1、数据安全，aof 持久化可以配置 appendfsync 属性，有 always，每进行一次 命令操作就记录到 aof 文件中一次。\n- 2、通过 append 模式写文件，即使中途服务器宕机，可以通过 redis-check-aof 工具解决数据一致性问题。\n- 3、AOF 机制的 rewrite 模式。AOF 文件没被 rewrite 之前（文件过大时会对命令 进行合并重写），可以删除其中的某些命令（比如误操作的 flushall）)\n\n**缺点：**\n\n- 1、AOF 文件比 RDB 文件大，且恢复速度慢。\n- 2、数据集大的时候，比 rdb 启动效率低。\n\n优缺点是什么？\n\n- AOF文件比RDB更新频率高，优先使用AOF还原数据。\n- AOF比RDB更安全也更大\n- RDB性能比AOF好\n- 如果两个都配了优先加载AOF\n\n#### 3.如何选择合适的持久化方式\n\n- 一般来说， 如果想达到足以媲美PostgreSQL的数据安全性，你应该同时使用两种持久化功能。在这种情况下，当 Redis 重启的时候会优先载入AOF文件来恢复原始的数据，因为在通常情况下AOF文件保存的数据集要比RDB文件保存的数据集要完整。\n- 如果你非常关心你的数据， 但仍然可以承受数分钟以内的数据丢失，那么你可以只使用RDB持久化。\n- 有很多用户都只使用AOF持久化，但并不推荐这种方式，因为定时生成RDB快照（snapshot）非常便于进行数据库备份， 并且 RDB 恢复数据集的速度也要比AOF恢复的速度要快，除此之外，使用RDB还可以避免AOF程序的bug。\n- 如果你只希望你的数据在服务器运行的时候存在，你也可以不使用任何持久化方式。\n\n## 五、过期键的删除策略\n\n### Redis的过期键的删除策略\n\n我们都知道，Redis是key-value数据库，我们可以设置Redis中缓存的key的过期时间。Redis的过期策略就是指当Redis中缓存的key过期了，Redis如何处理。\n\n过期策略通常有以下三种：\n\n- 定时过期：每个设置过期时间的key都需要创建一个定时器，到过期时间就会立即清除。该策略可以立即清除过期的数据，对内存很友好；但是会占用大量的CPU资源去处理过期的数据，从而影响缓存的响应时间和吞吐量。\n- 惰性过期：只有当访问一个key时，才会判断该key是否已过期，过期则清除。该策略可以最大化地节省CPU资源，却对内存非常不友好。极端情况可能出现大量的过期key没有再次被访问，从而不会被清除，占用大量内存。\n  ![img](https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202302101635749.png)\n- 定期过期：每隔一定的时间，会扫描一定数量的数据库的expires字典中一定数量的key，并清除其中已过期的key。该策略是前两者的一个折中方案。通过调整定时扫描的时间间隔和每次扫描的限定耗时，可以在不同情况下使得CPU和内存资源达到最优的平衡效果。(expires字典会保存所有设置了过期时间的key的过期时间数据，其中，key是指向键空间中的某个键的指针，value是该键的毫秒精度的UNIX时间戳表示的过期时间。键空间是指该Redis集群中保存的所有键。)\n\nRedis中同时使用了**惰性过期**和**定期过期**两种过期策略。\n\n## 六、Redis的内存淘汰策略\n\n假设redis每次定期随机查询key的时候没有删掉，这些key也没有做查询的话，就会导致这些key一直保存在redis里面无法被删除，这时候就会走到redis的内存淘汰机制。\n\n**全局的键空间选择性移除**\n\n- **noeviction**：当内存不足以容纳新写入数据时，新写入操作会报错。\n- **allkeys-lru**：当内存不足以容纳新写入数据时，在键空间中，移除最近最少使用的key。(这个是最常用的)\n- **allkeys-random**：当内存不足以容纳新写入数据时，在键空间中，随机移除某个key。\n\n**设置过期时间的键空间选择性移除**\n\n- **volatile-lru**：当内存不足以容纳新写入数据时，在设置了过期时间的键空间中，移除最近最少使用的key。\n- **volatile-random**：当内存不足以容纳新写入数据时，在设置了过期时间的键空间中，随机移除某个key。\n- **volatile-ttl**：当内存不足以容纳新写入数据时，在设置了过期时间的键空间中，有更早过期时间的key优先移除。\n\n**总结**\n\n​\t\tRedis的内存淘汰策略的选取并不会影响过期的key的处理。内存淘汰策略用于处理内存不足时的需要申请额外空间的数据；过期策略用于处理过期的缓存数据。\n\n## 七、缓存异常\n\n### (一)缓存雪崩\n\n**缓存雪崩**是指缓存同一时间大面积的失效，所以，后面的请求都会落到数据库上，造成数据库短时间内承受大量请求而崩掉。雪崩和击穿、热key的问题不太一样的是，它是指大规模的缓存都过期失效了。\n\n![img](https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202302101637632.png)\n\n**解决方案**\n\n1. 缓存数据的过期时间设置随机，防止同一时间大量数据过期现象发生。\n2. 一般并发量不是特别多的时候，使用最多的解决方案是加锁排队。\n3. 给每一个缓存数据增加相应的缓存标记，记录缓存的是否失效，如果缓存标记失效，则更新数据缓存。\n\n### (二)缓存穿透\n\n**缓存穿透**是指缓存和数据库中都没有的数据，导致所有的请求都落到数据库上，造成数据库短时间内承受大量请求而崩掉。\n\n![img](https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202302101637840.png)\n\n**解决方案**\n\n1. 接口层增加校验，如用户鉴权校验，id做基础校验，id<=0的直接拦截；\n2. 从缓存取不到的数据，在数据库中也没有取到，这时也可以将key-value对写为key-null，缓存有效时间可以设置短点，如30秒（设置太长会导致正常情况也没法使用）。这样可以防止攻击用户反复用同一个id暴力攻击\n3. 采用布隆过滤器，将所有可能存在的数据哈希到一个足够大的 bitmap 中，一个一定不存在的数据会被这个 bitmap 拦截掉，从而避免了对底层存储系统的查询压力\n   布隆过滤器的原理是在你存入数据的时候，会通过散列函数将它映射为一个位数组中的K个点，同时把他们置为1。这样当用户再次来查询A，而A在布隆过滤器值为0，直接返回，就不会产生击穿请求打到DB了。\n   显然，使用布隆过滤器之后会有一个问题就是误判，因为它本身是一个数组，可能会有多个值落到同一个位置，那么理论上来说只要我们的数组长度够长，误判的概率就会越低，这种问题就根据实际情况来就好了。\n\n![img](https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202302101637859.png)\n\n**附加**：\n\n对于空间的利用到达了一种极致，那就是Bitmap和布隆过滤器(Bloom Filter)。\n\nBitmap： 典型的就是哈希表\n\n缺点是，Bitmap对于每个元素只能记录1bit信息，如果还想完成额外的功能，恐怕只能靠牺牲更多的空间、时间来完成了。\n\n布隆过滤器（推荐）\n\n就是引入了k(k>1)k(k>1)个相互独立的哈希函数，保证在给定的空间、误判率下，完成元素判重的过程。\n\n它的优点是空间效率和查询时间都远远超过一般的算法，缺点是有一定的误识别率和删除困难。\n\nBloom-Filter算法的核心思想就是利用多个不同的Hash函数来解决“冲突”。\n\nHash存在一个冲突（碰撞）的问题，用同一个Hash得到的两个URL的值有可能相同。为了减少冲突，我们可以多引入几个Hash，如果通过其中的一个Hash值我们得出某元素不在集合中，那么该元素肯定不在集合中。只有在所有的Hash函数告诉我们该元素在集合中时，才能确定该元素存在于集合中。这便是Bloom-Filter的基本思想。\n\nBloom-Filter一般用于在大数据量的集合中判定某元素是否存在。\n\n### (三)缓存击穿\n\n**缓存击穿**是指缓存中没有但数据库中有的数据（一般是缓存时间到期），这时由于并发用户特别多，同时读缓存没读到数据，又同时去数据库去取数据，引起数据库压力瞬间增大，造成过大压力。和缓存雪崩不同的是，缓存击穿指并发查同一条数据，缓存雪崩是不同数据都过期了，很多数据都查不到从而查数据库。\n\n**解决方案**\n\n1. 设置热点数据永远不过期。\n2. 加互斥锁，互斥锁\n\n### (四)缓存预热\n\n**缓存预热**就是系统上线后，将相关的缓存数据直接加载到缓存系统。这样就可以避免在用户请求的时候，先查询数据库，然后再将数据缓存的问题！用户直接查询事先被预热的缓存数据！\n\n**解决方案**\n\n1. 直接写个缓存刷新页面，上线时手工操作一下；\n2. 数据量不大，可以在项目启动的时候自动进行加载；\n3. 定时刷新缓存；\n\n### (五)缓存降级\n\n当访问量剧增、服务出现问题（如响应时间慢或不响应）或非核心服务影响到核心流程的性能时，仍然需要保证服务还是可用的，即使是有损服务。系统可以根据一些关键数据进行自动降级，也可以配置开关实现人工降级。\n\n**缓存降级**的最终目的是保证核心服务可用，即使是有损的。而且有些服务是无法降级的（如加入购物车、结算）。\n\n在进行降级之前要对系统进行梳理，看看系统是不是可以丢卒保帅；从而梳理出哪些必须誓死保护，哪些可降级；比如可以参考日志级别设置预案：\n\n1. 一般：比如有些服务偶尔因为网络抖动或者服务正在上线而超时，可以自动降级；\n2. 警告：有些服务在一段时间内成功率有波动（如在95~100%之间），可以自动降级或人工降级，并发送告警；\n3. 错误：比如可用率低于90%，或者数据库连接池被打爆了，或者访问量突然猛增到系统能承受的最大阀值，此时可以根据情况自动降级或者人工降级；\n4. 严重错误：比如因为特殊原因数据错误了，此时需要紧急人工降级。\n\n服务降级的目的，是为了防止Redis服务故障，导致数据库跟着一起发生雪崩问题。因此，对于不重要的缓存数据，可以采取服务降级策略，例如一个比较常见的做法就是，Redis出现问题，不去数据库查询，而是直接返回默认值给用户。\n\n### (六)热点数据和冷数据\n\n热点数据，缓存才有价值\n\n对于冷数据而言，大部分数据可能还没有再次访问到就已经被挤出内存，不仅占用内存，而且价值不大。频繁修改的数据，看情况考虑使用缓存\n\n对于热点数据，比如我们的某IM产品，生日祝福模块，当天的寿星列表，缓存以后可能读取数十万次。再举个例子，某导航产品，我们将导航信息，缓存以后可能读取数百万次。\n\n数据更新前至少读取两次，缓存才有意义。这个是最基本的策略，如果缓存还没有起作用就失效了，那就没有太大价值了。\n\n那存不存在，修改频率很高，但是又不得不考虑缓存的场景呢？有！比如，这个读取接口对数据库的压力很大，但是又是热点数据，这个时候就需要考虑通过缓存手段，减少数据库的压力，比如我们的某助手产品的，点赞数，收藏数，分享数等是非常典型的热点数据，但是又不断变化，此时就需要将数据同步保存到Redis缓存，减少数据库压力。\n\n### (七)缓存热点key\n\n缓存中的一个Key(比如一个促销商品)，在某个时间点过期的时候，恰好在这个时间点对这个Key有大量的并发请求过来，这些请求发现缓存过期一般都会从后端DB加载数据并回设到缓存，这个时候大并发的请求可能会瞬间把后端DB压垮。\n\n![img](https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202302101636857.png)\n\n**解决方案**\n\n1.对缓存查询加锁，如果KEY不存在，就加锁，然后查DB入缓存，然后解锁；其他进程如果发现有锁就等待，然后等解锁后返回数据或者进入DB查询\n\n2.提前把热key打散到不同的服务器，降低压力\n\n## 八、实现Redis的高可用\n\n要想实现高可用，一台机器肯定是不够的，而redis要保证高可用，有2个可选方案。\n\n### (一)主从架构\n\n主从模式是最简单的实现高可用的方案，核心就是主从同步。主从同步的原理如下：\n\n1. slave发送sync命令到master\n2. master收到sync之后，执行bgsave，生成RDB全量文件\n3. master把slave的写命令记录到缓存\n4. bgsave执行完毕之后，发送RDB文件到slave，slave执行\n5. master发送缓存中的写命令到slave，slave执行\n\n![img](https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202302101638248.png)\n\n这里我写的这个命令是sync，但是在redis2.8版本之后已经使用psync来替代sync了，原因是sync命令非常消耗系统资源，而psync的效率更高。\n\n### (二)哨兵\n\n基于主从方案的缺点还是很明显的，假设master宕机，那么就不能写入数据，那么slave也就失去了作用，整个架构就不可用了，除非你手动切换，主要原因就是因为没有自动故障转移机制。而哨兵(sentinel)的功能比单纯的主从架构全面的多了，它具备自动故障转移、集群监控、消息通知等功能。\n\n![img](https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202302101638387.png)\n\n哨兵可以同时监视多个主从服务器，并且在被监视的master下线时，自动将某个slave提升为master，然后由新的master继续接收命令。整个过程如下：\n\n1. 初始化sentinel，将普通的redis代码替换成sentinel专用代码\n2. 初始化masters字典和服务器信息，服务器信息主要保存ip:port，并记录实例的地址和ID\n3. 创建和master的两个连接，命令连接和订阅连接，并且订阅sentinel:hello频道\n4. 每隔10秒向master发送info命令，获取master和它下面所有slave的当前信息\n5. 当发现master有新的slave之后，sentinel和新的slave同样建立两个连接，同时每个10秒发送info命令，更新master信息\n6. sentinel每隔1秒向所有服务器发送ping命令，如果某台服务器在配置的响应时间内连续返回无效回复，将会被标记为下线状态\n7. 选举出领头sentinel，领头sentinel需要半数以上的sentinel同意\n8. 领头sentinel从已下线的的master所有slave中挑选一个，将其转换为master\n9. 让所有的slave改为从新的master复制数据\n10. 将原来的master设置为新的master的从服务器，当原来master重新回复连接时，就变成了新master的从服务器\n\nsentinel会每隔1秒向所有实例（包括主从服务器和其他sentinel）发送ping命令，并且根据回复判断是否已经下线，这种方式叫做主观下线。当判断为主观下线时，就会向其他监视的sentinel询问，如果超过半数的投票认为已经是下线状态，则会标记为客观下线状态，同时触发故障转移。\n\n## 九、Redis集群原理\n\n如果说依靠哨兵可以实现redis的高可用，如果还想在支持高并发同时容纳海量的数据，那就需要redis集群。redis集群是redis提供的分布式数据存储方案，集群通过数据分片sharding来进行数据的共享，同时提供复制和故障转移的功能。\n\n### (一)节点\n\n一个redis集群由多个节点node组成，而多个node之间通过cluster meet命令来进行连接，节点的握手过程：\n\n1. 节点A收到客户端的cluster meet命令\n2. A根据收到的IP地址和端口号，向B发送一条meet消息\n3. 节点B收到meet消息返回pong\n4. A知道B收到了meet消息，返回一条ping消息，握手成功\n5. 最后，节点A将会通过gossip协议把节点B的信息传播给集群中的其他节点，其他节点也将和B进行握手\n\n![img](https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202302101638556.png)\n\n### (二)槽slot\n\n​\t\tredis通过集群分片的形式来保存数据，整个集群数据库被分为16384个slot，集群中的每个节点可以处理0-16384个slot，当数据库16384个slot都有节点在处理时，集群处于上线状态，反之只要有一个slot没有得到处理都会处理下线状态。通过cluster addslots命令可以将slot指派给对应节点处理。\n\nslot是一个位数组，数组的长度是16384/8=2048，而数组的每一位用1表示被节点处理，0表示不处理，如图所示的话表示A节点处理0-7的slot。\n\n![img](https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202302101639676.png)\n\n当客户端向节点发送命令，如果刚好找到slot属于当前节点，那么节点就执行命令，反之，则会返回一个MOVED命令到客户端指引客户端转向正确的节点。（MOVED过程是自动的）\n\n![img](https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202302101639222.png)\n\n如果增加或者移出节点，对于slot的重新分配也是非常方便的，redis提供了工具帮助实现slot的迁移，整个过程是完全在线的，不需要停止服务。\n\n### (三)故障转移\n\n如果节点A向节点B发送ping消息，节点B没有在规定的时间内响应pong，那么节点A会标记节点B为pfail疑似下线状态，同时把B的状态通过消息的形式发送给其他节点，如果超过半数以上的节点都标记B为pfail状态，B就会被标记为fail下线状态，此时将会发生故障转移，优先从复制数据较多的从节点选择一个成为主节点，并且接管下线节点的slot，整个过程和哨兵非常类似，都是基于Raft协议做选举。","source":"_posts/Redis学习笔记.md","raw":"---\ntitle: Redis学习笔记\nexcerpt: VuePress 由两部分组成：第一部分是一个极简静态网站生成器 (opens new window)，它包含由 Vue 驱动的主题系统和插件 API，另一个部分是为书写技术文档而优化的默认主题，它的诞生初衷是为了支持 Vue 及其子项目的文档需求。\ntags:\n  - Redis\ncategories:\n  - 笔记\nindex_img: https://img0.baidu.com/it/u=1229487231,1522020023&fm=253&fmt=auto&app=138&f=JPEG?w=480&h=260\nabbrlink: 26960e5d\ndate: 2022-02-01\n---\n\n## 一、概述\n\n### (一)什么是Redis\n\nRedis(Remote Dictionary Server) 是一个使用 C 语言编写的，开源的（BSD许可）高性能非关系型（NoSQL）的键值对数据库。\n\nRedis 可以存储键和五种不同类型的值之间的映射。键的类型只能为字符串，值支持五种数据类型：字符串、列表、集合、散列表、有序集合。\n\n与传统数据库不同的是 Redis 的数据是存在内存中的，所以读写速度非常快，因此 redis 被广泛应用于缓存方向，每秒可以处理超过 10万次读写操作，是已知性能最快的Key-Value DB。\n\n另外，Redis 也经常用来做分布式锁。除此之外，Redis 支持事务 、持久化、LUA脚本、LRU驱动事件、多种集群方案。\n\n### (二)Redis优缺点\n\n优点\n\n- 读写性能优异， Redis能读的速度是110000次/s，写的速度是81000次/s。\n- 支持数据持久化，支持AOF和RDB两种持久化方式。\n- 支持事务，Redis的所有操作都是原子性的，同时Redis还支持对几个操作合并后的原子性执行。\n- 数据结构丰富，除了支持string类型的value外还支持hash、set、zset、list等数据结构。\n- 支持主从复制，主机会自动将数据同步到从机，可以进行读写分离。\n\n缺点\n\n- 数据库容量受到物理内存的限制，不能用作海量数据的高性能读写，因此Redis适合的场景主要局限在较小数据量的高性能操作和运算上。\n- Redis 不具备自动容错和恢复功能，主机从机的宕机都会导致前端部分读写请求失败，需要等待机器重启或者手动切换前端的IP才能恢复。\n- 主机宕机，宕机前有部分数据未能及时同步到从机，切换IP后还会引入数据不一致的问题，降低了系统的可用性。\n- Redis 较难支持在线扩容，在集群容量达到上限时在线扩容会变得很复杂。为避免这一问题，运维人员在系统上线时必须确保有足够的空间，这对资源造成了很大的浪费。\n\n### (三)为什么要用 Redis /为什么要用缓存\n\n主要从“高性能”和“高并发”这两点来看待这个问题。\n\n**高性能：**\n\n假如用户第一次访问数据库中的某些数据。这个过程会比较慢，因为是从硬盘上读取的。将该用户访问的数据存在数缓存中，这样下一次再访问这些数据的时候就可以直接从缓存中获取了。\n\n操作缓存就是直接操作内存，所以速度相当快。如果数据库中的对应数据改变的之后，同步改变缓存中相应的数据即可！\n\n![img](https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202302101630596.png)\n\n**高并发：**\n\n直接操作缓存能够承受的请求是远远大于直接访问数据库的，所以我们可以考虑把数据库中的部分数据转移到缓存中去，这样用户的一部分请求会直接到缓存这里而不用经过数据库。\n\n![img](https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202302101630478.png)\n\n## 二、数据类型\n\n| 数据类型 | 可以存储的值           | 操作                                                         | 应用场景                                                     |\n| :------: | ---------------------- | ------------------------------------------------------------ | ------------------------------------------------------------ |\n|  String  | 字符串、整数或者浮点数 | 对整个字符串或者字符串的其中一部分执行操作 对整数和浮点数执行自增或者自减操作 | 做简单的键值对缓存                                           |\n|   List   | 列表                   | 从两端压入或者弹出元素 对单个或者多个元素进行修剪， 只保留一个范围内的元素 | 存储一些列表型的数据结构，类似粉丝列表、文章的评论列表之类的数据 |\n|   Set    | 无序集合               | 添加、获取、移除单个元素 检查一个元素是否存在于集合中 计算交集、并集、差集 从集合里面随机获取元素 | 交集、并集、差集的操作，比如交集，可以把两个人的粉丝列表整一个交集 |\n|   Hash   | 包含键值对的无序散列表 | 添加、获取、移除单个键值对 获取所有键值对 检查某个键是否存在 | 结构化的数据，比如一个对象                                   |\n|   ZSET   | 有序集合               | 添加、获取、删除元素 根据分值范围或者成员来获取元素 计算一个键的排名 | 去重但可以排序，如获取排名前几名的用户                       |\n\n## 三、Redis的应用场景\n\n**计数器**\n\n​\t\t可以对 String 进行自增自减运算，从而实现计数器功能。Redis 这种内存型数据库的读写性能非常高，很适合存储频繁读写的计数量。\n\n**缓存**\n\n​\t\t将热点数据放到内存中，设置内存的最大使用量以及淘汰策略来保证缓存的命中率。\n\n**会话缓存**\n\n​\t\t可以使用 Redis 来统一存储多台应用服务器的会话信息。当应用服务器不再存储用户的会话信息，也就不再具有状态，一个用户可以请求任意一个应用服务器，从而更容易实现高可用性以及可伸缩性。\n\n**全页缓存（FPC）**\n\n​\t\t除基本的会话token之外，Redis还提供很简便的FPC平台。以Magento为例，Magento提供一个插件来使用Redis作为全页缓存后端。此外，对WordPress的用户来说，Pantheon有一个非常好的插件 wp-redis，这个插件能帮助你以最快速度加载你曾浏览过的页面。\n\n**查找表**\n\n​\t\t例如 DNS 记录就很适合使用 Redis 进行存储。查找表和缓存类似，也是利用了 Redis 快速的查找特性。但是查找表的内容不能失效，而缓存的内容可以失效，因为缓存不作为可靠的数据来源。\n\n**消息队列(发布/订阅功能)**\n\n​\t\tList 是一个双向链表，可以通过 lpush 和 rpop 写入和读取消息。不过最好使用 Kafka、RabbitMQ 等消息中间件。\n\n**分布式锁实现**\n\n​\t\t在分布式场景下，无法使用单机环境下的锁来对多个节点上的进程进行同步。可以使用 Redis 自带的 SETNX 命令实现分布式锁，除此之外，还可以使用官方提供的 RedLock 分布式锁实现。\n\n**其它**\n\n​\t\tSet 可以实现交集、并集等操作，从而实现共同好友等功能。ZSet 可以实现有序性操作，从而实现排行榜等功能。\n\n![img](https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202302101632204.png)\n\n## 四、持久化\n\n### (一)什么是持久化\n\n持久化就是把内存的数据写到磁盘中去，防止服务宕机了内存数据丢失。\n\n### (二)Redis 的持久化机制是什么？各自的优缺点？\n\nRedis 提供两种持久化机制 **RDB**（默认） 和 **AOF** 机制:\n\n#### 1.RDB\n\n1.RDB：是Redis DataBase缩写快照\n\n​\tRDB是Redis默认的持久化方式。按照一定的时间将内存的数据以快照的形式保存到硬盘中，对应产生的数据文件为dump.rdb。通过配置文件中的save参数来定义快照的周期。\n\nRDB持久化可以手动执行也可以根据配置定期执行，它的作用是将某个时间点上的数据库状态保存到RDB文件中，RDB文件是一个压缩的二进制文件，通过它可以还原某个时刻数据库的状态。由于RDB文件是保存在硬盘上的，所以即使redis崩溃或者退出，只要RDB文件存在，就可以用它来恢复还原数据库的状态。\n\n可以通过SAVE或者BGSAVE来生成RDB文件。\n\nSAVE命令会阻塞redis进程，直到RDB文件生成完毕，在进程阻塞期间，redis不能处理任何命令请求，这显然是不合适的。\n\nBGSAVE则是会fork出一个子进程，然后由子进程去负责生成RDB文件，父进程还可以继续处理命令请求，不会阻塞进程。\n\n![img](https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202302101633696.png)\n\n**优点：**\n\n- 1、只有一个文件 dump.rdb，方便持久化。\n- 2、容灾性好，一个文件可以保存到安全的磁盘。\n- 3、性能最大化，fork 子进程来完成写操作，让主进程继续处理命令，所以是 IO 最大化。使用单独子进程来进行持久化，主进程不会进行任何 IO 操作，保证了 redis 的高性能\n- 4.相对于数据集大时，比 AOF 的启动效率更高。\n\n**缺点：**\n\n数据安全性低。RDB 是间隔一段时间进行持久化，如果持久化之间 redis 发生故障，会发生数据丢失。所以这种方式更适合数据要求不严谨的时候。\n\n#### 2.AOF\n\nAOF持久化(即Append Only File持久化)，则是将Redis执行的每次写命令记录到单独的日志文件中，当重启Redis会重新将持久化的日志中文件恢复数据。\n\n当两种方式同时开启时，数据恢复Redis会优先选择AOF恢复。\n\nAOF和RDB不同，AOF是通过保存redis服务器所执行的写命令来记录数据库状态的。\n\nAOF通过追加、写入、同步三个步骤来实现持久化机制。\n\n​\t1.当AOF持久化处于激活状态，服务器执行完写命令之后，写命令将会被追加append到aof_buf缓冲区的末尾\n\n​\t2.在服务器每结束一个事件循环之前，将会调用flushAppendOnlyFile函数决定是否要将aof_buf的内容保存到AOF文件中，可以通过配置appendfsync来决定。\n\nalways ##aof_buf内容写入并同步到AOF文件\n\neverysec ##将aof_buf中内容写入到AOF文件，如果上次同步AOF文件时间距离现在超过1秒，则再次对AOF文件进行同步\n\nno ##将aof_buf内容写入AOF文件，但是并不对AOF文件进行同步，同步时间由操作系统决定\n\n如果不设置，默认选项将会是everysec，因为always来说虽然最安全（只会丢失一次事件循环的写命令），但是性能较差，而everysec模式只不过会可能丢失1秒钟的数据，而no模式的效率和everysec相仿，但是会丢失上次同步AOF文件之后的所有写命令数据。\n\n![img](https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202302101633783.png)\n\n**优点：**\n\n- 1、数据安全，aof 持久化可以配置 appendfsync 属性，有 always，每进行一次 命令操作就记录到 aof 文件中一次。\n- 2、通过 append 模式写文件，即使中途服务器宕机，可以通过 redis-check-aof 工具解决数据一致性问题。\n- 3、AOF 机制的 rewrite 模式。AOF 文件没被 rewrite 之前（文件过大时会对命令 进行合并重写），可以删除其中的某些命令（比如误操作的 flushall）)\n\n**缺点：**\n\n- 1、AOF 文件比 RDB 文件大，且恢复速度慢。\n- 2、数据集大的时候，比 rdb 启动效率低。\n\n优缺点是什么？\n\n- AOF文件比RDB更新频率高，优先使用AOF还原数据。\n- AOF比RDB更安全也更大\n- RDB性能比AOF好\n- 如果两个都配了优先加载AOF\n\n#### 3.如何选择合适的持久化方式\n\n- 一般来说， 如果想达到足以媲美PostgreSQL的数据安全性，你应该同时使用两种持久化功能。在这种情况下，当 Redis 重启的时候会优先载入AOF文件来恢复原始的数据，因为在通常情况下AOF文件保存的数据集要比RDB文件保存的数据集要完整。\n- 如果你非常关心你的数据， 但仍然可以承受数分钟以内的数据丢失，那么你可以只使用RDB持久化。\n- 有很多用户都只使用AOF持久化，但并不推荐这种方式，因为定时生成RDB快照（snapshot）非常便于进行数据库备份， 并且 RDB 恢复数据集的速度也要比AOF恢复的速度要快，除此之外，使用RDB还可以避免AOF程序的bug。\n- 如果你只希望你的数据在服务器运行的时候存在，你也可以不使用任何持久化方式。\n\n## 五、过期键的删除策略\n\n### Redis的过期键的删除策略\n\n我们都知道，Redis是key-value数据库，我们可以设置Redis中缓存的key的过期时间。Redis的过期策略就是指当Redis中缓存的key过期了，Redis如何处理。\n\n过期策略通常有以下三种：\n\n- 定时过期：每个设置过期时间的key都需要创建一个定时器，到过期时间就会立即清除。该策略可以立即清除过期的数据，对内存很友好；但是会占用大量的CPU资源去处理过期的数据，从而影响缓存的响应时间和吞吐量。\n- 惰性过期：只有当访问一个key时，才会判断该key是否已过期，过期则清除。该策略可以最大化地节省CPU资源，却对内存非常不友好。极端情况可能出现大量的过期key没有再次被访问，从而不会被清除，占用大量内存。\n  ![img](https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202302101635749.png)\n- 定期过期：每隔一定的时间，会扫描一定数量的数据库的expires字典中一定数量的key，并清除其中已过期的key。该策略是前两者的一个折中方案。通过调整定时扫描的时间间隔和每次扫描的限定耗时，可以在不同情况下使得CPU和内存资源达到最优的平衡效果。(expires字典会保存所有设置了过期时间的key的过期时间数据，其中，key是指向键空间中的某个键的指针，value是该键的毫秒精度的UNIX时间戳表示的过期时间。键空间是指该Redis集群中保存的所有键。)\n\nRedis中同时使用了**惰性过期**和**定期过期**两种过期策略。\n\n## 六、Redis的内存淘汰策略\n\n假设redis每次定期随机查询key的时候没有删掉，这些key也没有做查询的话，就会导致这些key一直保存在redis里面无法被删除，这时候就会走到redis的内存淘汰机制。\n\n**全局的键空间选择性移除**\n\n- **noeviction**：当内存不足以容纳新写入数据时，新写入操作会报错。\n- **allkeys-lru**：当内存不足以容纳新写入数据时，在键空间中，移除最近最少使用的key。(这个是最常用的)\n- **allkeys-random**：当内存不足以容纳新写入数据时，在键空间中，随机移除某个key。\n\n**设置过期时间的键空间选择性移除**\n\n- **volatile-lru**：当内存不足以容纳新写入数据时，在设置了过期时间的键空间中，移除最近最少使用的key。\n- **volatile-random**：当内存不足以容纳新写入数据时，在设置了过期时间的键空间中，随机移除某个key。\n- **volatile-ttl**：当内存不足以容纳新写入数据时，在设置了过期时间的键空间中，有更早过期时间的key优先移除。\n\n**总结**\n\n​\t\tRedis的内存淘汰策略的选取并不会影响过期的key的处理。内存淘汰策略用于处理内存不足时的需要申请额外空间的数据；过期策略用于处理过期的缓存数据。\n\n## 七、缓存异常\n\n### (一)缓存雪崩\n\n**缓存雪崩**是指缓存同一时间大面积的失效，所以，后面的请求都会落到数据库上，造成数据库短时间内承受大量请求而崩掉。雪崩和击穿、热key的问题不太一样的是，它是指大规模的缓存都过期失效了。\n\n![img](https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202302101637632.png)\n\n**解决方案**\n\n1. 缓存数据的过期时间设置随机，防止同一时间大量数据过期现象发生。\n2. 一般并发量不是特别多的时候，使用最多的解决方案是加锁排队。\n3. 给每一个缓存数据增加相应的缓存标记，记录缓存的是否失效，如果缓存标记失效，则更新数据缓存。\n\n### (二)缓存穿透\n\n**缓存穿透**是指缓存和数据库中都没有的数据，导致所有的请求都落到数据库上，造成数据库短时间内承受大量请求而崩掉。\n\n![img](https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202302101637840.png)\n\n**解决方案**\n\n1. 接口层增加校验，如用户鉴权校验，id做基础校验，id<=0的直接拦截；\n2. 从缓存取不到的数据，在数据库中也没有取到，这时也可以将key-value对写为key-null，缓存有效时间可以设置短点，如30秒（设置太长会导致正常情况也没法使用）。这样可以防止攻击用户反复用同一个id暴力攻击\n3. 采用布隆过滤器，将所有可能存在的数据哈希到一个足够大的 bitmap 中，一个一定不存在的数据会被这个 bitmap 拦截掉，从而避免了对底层存储系统的查询压力\n   布隆过滤器的原理是在你存入数据的时候，会通过散列函数将它映射为一个位数组中的K个点，同时把他们置为1。这样当用户再次来查询A，而A在布隆过滤器值为0，直接返回，就不会产生击穿请求打到DB了。\n   显然，使用布隆过滤器之后会有一个问题就是误判，因为它本身是一个数组，可能会有多个值落到同一个位置，那么理论上来说只要我们的数组长度够长，误判的概率就会越低，这种问题就根据实际情况来就好了。\n\n![img](https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202302101637859.png)\n\n**附加**：\n\n对于空间的利用到达了一种极致，那就是Bitmap和布隆过滤器(Bloom Filter)。\n\nBitmap： 典型的就是哈希表\n\n缺点是，Bitmap对于每个元素只能记录1bit信息，如果还想完成额外的功能，恐怕只能靠牺牲更多的空间、时间来完成了。\n\n布隆过滤器（推荐）\n\n就是引入了k(k>1)k(k>1)个相互独立的哈希函数，保证在给定的空间、误判率下，完成元素判重的过程。\n\n它的优点是空间效率和查询时间都远远超过一般的算法，缺点是有一定的误识别率和删除困难。\n\nBloom-Filter算法的核心思想就是利用多个不同的Hash函数来解决“冲突”。\n\nHash存在一个冲突（碰撞）的问题，用同一个Hash得到的两个URL的值有可能相同。为了减少冲突，我们可以多引入几个Hash，如果通过其中的一个Hash值我们得出某元素不在集合中，那么该元素肯定不在集合中。只有在所有的Hash函数告诉我们该元素在集合中时，才能确定该元素存在于集合中。这便是Bloom-Filter的基本思想。\n\nBloom-Filter一般用于在大数据量的集合中判定某元素是否存在。\n\n### (三)缓存击穿\n\n**缓存击穿**是指缓存中没有但数据库中有的数据（一般是缓存时间到期），这时由于并发用户特别多，同时读缓存没读到数据，又同时去数据库去取数据，引起数据库压力瞬间增大，造成过大压力。和缓存雪崩不同的是，缓存击穿指并发查同一条数据，缓存雪崩是不同数据都过期了，很多数据都查不到从而查数据库。\n\n**解决方案**\n\n1. 设置热点数据永远不过期。\n2. 加互斥锁，互斥锁\n\n### (四)缓存预热\n\n**缓存预热**就是系统上线后，将相关的缓存数据直接加载到缓存系统。这样就可以避免在用户请求的时候，先查询数据库，然后再将数据缓存的问题！用户直接查询事先被预热的缓存数据！\n\n**解决方案**\n\n1. 直接写个缓存刷新页面，上线时手工操作一下；\n2. 数据量不大，可以在项目启动的时候自动进行加载；\n3. 定时刷新缓存；\n\n### (五)缓存降级\n\n当访问量剧增、服务出现问题（如响应时间慢或不响应）或非核心服务影响到核心流程的性能时，仍然需要保证服务还是可用的，即使是有损服务。系统可以根据一些关键数据进行自动降级，也可以配置开关实现人工降级。\n\n**缓存降级**的最终目的是保证核心服务可用，即使是有损的。而且有些服务是无法降级的（如加入购物车、结算）。\n\n在进行降级之前要对系统进行梳理，看看系统是不是可以丢卒保帅；从而梳理出哪些必须誓死保护，哪些可降级；比如可以参考日志级别设置预案：\n\n1. 一般：比如有些服务偶尔因为网络抖动或者服务正在上线而超时，可以自动降级；\n2. 警告：有些服务在一段时间内成功率有波动（如在95~100%之间），可以自动降级或人工降级，并发送告警；\n3. 错误：比如可用率低于90%，或者数据库连接池被打爆了，或者访问量突然猛增到系统能承受的最大阀值，此时可以根据情况自动降级或者人工降级；\n4. 严重错误：比如因为特殊原因数据错误了，此时需要紧急人工降级。\n\n服务降级的目的，是为了防止Redis服务故障，导致数据库跟着一起发生雪崩问题。因此，对于不重要的缓存数据，可以采取服务降级策略，例如一个比较常见的做法就是，Redis出现问题，不去数据库查询，而是直接返回默认值给用户。\n\n### (六)热点数据和冷数据\n\n热点数据，缓存才有价值\n\n对于冷数据而言，大部分数据可能还没有再次访问到就已经被挤出内存，不仅占用内存，而且价值不大。频繁修改的数据，看情况考虑使用缓存\n\n对于热点数据，比如我们的某IM产品，生日祝福模块，当天的寿星列表，缓存以后可能读取数十万次。再举个例子，某导航产品，我们将导航信息，缓存以后可能读取数百万次。\n\n数据更新前至少读取两次，缓存才有意义。这个是最基本的策略，如果缓存还没有起作用就失效了，那就没有太大价值了。\n\n那存不存在，修改频率很高，但是又不得不考虑缓存的场景呢？有！比如，这个读取接口对数据库的压力很大，但是又是热点数据，这个时候就需要考虑通过缓存手段，减少数据库的压力，比如我们的某助手产品的，点赞数，收藏数，分享数等是非常典型的热点数据，但是又不断变化，此时就需要将数据同步保存到Redis缓存，减少数据库压力。\n\n### (七)缓存热点key\n\n缓存中的一个Key(比如一个促销商品)，在某个时间点过期的时候，恰好在这个时间点对这个Key有大量的并发请求过来，这些请求发现缓存过期一般都会从后端DB加载数据并回设到缓存，这个时候大并发的请求可能会瞬间把后端DB压垮。\n\n![img](https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202302101636857.png)\n\n**解决方案**\n\n1.对缓存查询加锁，如果KEY不存在，就加锁，然后查DB入缓存，然后解锁；其他进程如果发现有锁就等待，然后等解锁后返回数据或者进入DB查询\n\n2.提前把热key打散到不同的服务器，降低压力\n\n## 八、实现Redis的高可用\n\n要想实现高可用，一台机器肯定是不够的，而redis要保证高可用，有2个可选方案。\n\n### (一)主从架构\n\n主从模式是最简单的实现高可用的方案，核心就是主从同步。主从同步的原理如下：\n\n1. slave发送sync命令到master\n2. master收到sync之后，执行bgsave，生成RDB全量文件\n3. master把slave的写命令记录到缓存\n4. bgsave执行完毕之后，发送RDB文件到slave，slave执行\n5. master发送缓存中的写命令到slave，slave执行\n\n![img](https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202302101638248.png)\n\n这里我写的这个命令是sync，但是在redis2.8版本之后已经使用psync来替代sync了，原因是sync命令非常消耗系统资源，而psync的效率更高。\n\n### (二)哨兵\n\n基于主从方案的缺点还是很明显的，假设master宕机，那么就不能写入数据，那么slave也就失去了作用，整个架构就不可用了，除非你手动切换，主要原因就是因为没有自动故障转移机制。而哨兵(sentinel)的功能比单纯的主从架构全面的多了，它具备自动故障转移、集群监控、消息通知等功能。\n\n![img](https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202302101638387.png)\n\n哨兵可以同时监视多个主从服务器，并且在被监视的master下线时，自动将某个slave提升为master，然后由新的master继续接收命令。整个过程如下：\n\n1. 初始化sentinel，将普通的redis代码替换成sentinel专用代码\n2. 初始化masters字典和服务器信息，服务器信息主要保存ip:port，并记录实例的地址和ID\n3. 创建和master的两个连接，命令连接和订阅连接，并且订阅sentinel:hello频道\n4. 每隔10秒向master发送info命令，获取master和它下面所有slave的当前信息\n5. 当发现master有新的slave之后，sentinel和新的slave同样建立两个连接，同时每个10秒发送info命令，更新master信息\n6. sentinel每隔1秒向所有服务器发送ping命令，如果某台服务器在配置的响应时间内连续返回无效回复，将会被标记为下线状态\n7. 选举出领头sentinel，领头sentinel需要半数以上的sentinel同意\n8. 领头sentinel从已下线的的master所有slave中挑选一个，将其转换为master\n9. 让所有的slave改为从新的master复制数据\n10. 将原来的master设置为新的master的从服务器，当原来master重新回复连接时，就变成了新master的从服务器\n\nsentinel会每隔1秒向所有实例（包括主从服务器和其他sentinel）发送ping命令，并且根据回复判断是否已经下线，这种方式叫做主观下线。当判断为主观下线时，就会向其他监视的sentinel询问，如果超过半数的投票认为已经是下线状态，则会标记为客观下线状态，同时触发故障转移。\n\n## 九、Redis集群原理\n\n如果说依靠哨兵可以实现redis的高可用，如果还想在支持高并发同时容纳海量的数据，那就需要redis集群。redis集群是redis提供的分布式数据存储方案，集群通过数据分片sharding来进行数据的共享，同时提供复制和故障转移的功能。\n\n### (一)节点\n\n一个redis集群由多个节点node组成，而多个node之间通过cluster meet命令来进行连接，节点的握手过程：\n\n1. 节点A收到客户端的cluster meet命令\n2. A根据收到的IP地址和端口号，向B发送一条meet消息\n3. 节点B收到meet消息返回pong\n4. A知道B收到了meet消息，返回一条ping消息，握手成功\n5. 最后，节点A将会通过gossip协议把节点B的信息传播给集群中的其他节点，其他节点也将和B进行握手\n\n![img](https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202302101638556.png)\n\n### (二)槽slot\n\n​\t\tredis通过集群分片的形式来保存数据，整个集群数据库被分为16384个slot，集群中的每个节点可以处理0-16384个slot，当数据库16384个slot都有节点在处理时，集群处于上线状态，反之只要有一个slot没有得到处理都会处理下线状态。通过cluster addslots命令可以将slot指派给对应节点处理。\n\nslot是一个位数组，数组的长度是16384/8=2048，而数组的每一位用1表示被节点处理，0表示不处理，如图所示的话表示A节点处理0-7的slot。\n\n![img](https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202302101639676.png)\n\n当客户端向节点发送命令，如果刚好找到slot属于当前节点，那么节点就执行命令，反之，则会返回一个MOVED命令到客户端指引客户端转向正确的节点。（MOVED过程是自动的）\n\n![img](https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202302101639222.png)\n\n如果增加或者移出节点，对于slot的重新分配也是非常方便的，redis提供了工具帮助实现slot的迁移，整个过程是完全在线的，不需要停止服务。\n\n### (三)故障转移\n\n如果节点A向节点B发送ping消息，节点B没有在规定的时间内响应pong，那么节点A会标记节点B为pfail疑似下线状态，同时把B的状态通过消息的形式发送给其他节点，如果超过半数以上的节点都标记B为pfail状态，B就会被标记为fail下线状态，此时将会发生故障转移，优先从复制数据较多的从节点选择一个成为主节点，并且接管下线节点的slot，整个过程和哨兵非常类似，都是基于Raft协议做选举。","slug":"Redis学习笔记","published":1,"updated":"2023-02-16T15:11:22.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clhrpaia60008eq6q3g7541dg","content":"<h2 id=\"一、概述\"><a href=\"#一、概述\" class=\"headerlink\" title=\"一、概述\"></a>一、概述</h2><h3 id=\"一-什么是Redis\"><a href=\"#一-什么是Redis\" class=\"headerlink\" title=\"(一)什么是Redis\"></a>(一)什么是Redis</h3><p>Redis(Remote Dictionary Server) 是一个使用 C 语言编写的，开源的（BSD许可）高性能非关系型（NoSQL）的键值对数据库。</p>\n<p>Redis 可以存储键和五种不同类型的值之间的映射。键的类型只能为字符串，值支持五种数据类型：字符串、列表、集合、散列表、有序集合。</p>\n<p>与传统数据库不同的是 Redis 的数据是存在内存中的，所以读写速度非常快，因此 redis 被广泛应用于缓存方向，每秒可以处理超过 10万次读写操作，是已知性能最快的Key-Value DB。</p>\n<p>另外，Redis 也经常用来做分布式锁。除此之外，Redis 支持事务 、持久化、LUA脚本、LRU驱动事件、多种集群方案。</p>\n<h3 id=\"二-Redis优缺点\"><a href=\"#二-Redis优缺点\" class=\"headerlink\" title=\"(二)Redis优缺点\"></a>(二)Redis优缺点</h3><p>优点</p>\n<ul>\n<li>读写性能优异， Redis能读的速度是110000次/s，写的速度是81000次/s。</li>\n<li>支持数据持久化，支持AOF和RDB两种持久化方式。</li>\n<li>支持事务，Redis的所有操作都是原子性的，同时Redis还支持对几个操作合并后的原子性执行。</li>\n<li>数据结构丰富，除了支持string类型的value外还支持hash、set、zset、list等数据结构。</li>\n<li>支持主从复制，主机会自动将数据同步到从机，可以进行读写分离。</li>\n</ul>\n<p>缺点</p>\n<ul>\n<li>数据库容量受到物理内存的限制，不能用作海量数据的高性能读写，因此Redis适合的场景主要局限在较小数据量的高性能操作和运算上。</li>\n<li>Redis 不具备自动容错和恢复功能，主机从机的宕机都会导致前端部分读写请求失败，需要等待机器重启或者手动切换前端的IP才能恢复。</li>\n<li>主机宕机，宕机前有部分数据未能及时同步到从机，切换IP后还会引入数据不一致的问题，降低了系统的可用性。</li>\n<li>Redis 较难支持在线扩容，在集群容量达到上限时在线扩容会变得很复杂。为避免这一问题，运维人员在系统上线时必须确保有足够的空间，这对资源造成了很大的浪费。</li>\n</ul>\n<h3 id=\"三-为什么要用-Redis-为什么要用缓存\"><a href=\"#三-为什么要用-Redis-为什么要用缓存\" class=\"headerlink\" title=\"(三)为什么要用 Redis /为什么要用缓存\"></a>(三)为什么要用 Redis /为什么要用缓存</h3><p>主要从“高性能”和“高并发”这两点来看待这个问题。</p>\n<p><strong>高性能：</strong></p>\n<p>假如用户第一次访问数据库中的某些数据。这个过程会比较慢，因为是从硬盘上读取的。将该用户访问的数据存在数缓存中，这样下一次再访问这些数据的时候就可以直接从缓存中获取了。</p>\n<p>操作缓存就是直接操作内存，所以速度相当快。如果数据库中的对应数据改变的之后，同步改变缓存中相应的数据即可！</p>\n<p><img src=\"https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202302101630596.png\" alt=\"img\"></p>\n<p><strong>高并发：</strong></p>\n<p>直接操作缓存能够承受的请求是远远大于直接访问数据库的，所以我们可以考虑把数据库中的部分数据转移到缓存中去，这样用户的一部分请求会直接到缓存这里而不用经过数据库。</p>\n<p><img src=\"https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202302101630478.png\" alt=\"img\"></p>\n<h2 id=\"二、数据类型\"><a href=\"#二、数据类型\" class=\"headerlink\" title=\"二、数据类型\"></a>二、数据类型</h2><table>\n<thead>\n<tr>\n<th align=\"center\">数据类型</th>\n<th>可以存储的值</th>\n<th>操作</th>\n<th>应用场景</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">String</td>\n<td>字符串、整数或者浮点数</td>\n<td>对整个字符串或者字符串的其中一部分执行操作 对整数和浮点数执行自增或者自减操作</td>\n<td>做简单的键值对缓存</td>\n</tr>\n<tr>\n<td align=\"center\">List</td>\n<td>列表</td>\n<td>从两端压入或者弹出元素 对单个或者多个元素进行修剪， 只保留一个范围内的元素</td>\n<td>存储一些列表型的数据结构，类似粉丝列表、文章的评论列表之类的数据</td>\n</tr>\n<tr>\n<td align=\"center\">Set</td>\n<td>无序集合</td>\n<td>添加、获取、移除单个元素 检查一个元素是否存在于集合中 计算交集、并集、差集 从集合里面随机获取元素</td>\n<td>交集、并集、差集的操作，比如交集，可以把两个人的粉丝列表整一个交集</td>\n</tr>\n<tr>\n<td align=\"center\">Hash</td>\n<td>包含键值对的无序散列表</td>\n<td>添加、获取、移除单个键值对 获取所有键值对 检查某个键是否存在</td>\n<td>结构化的数据，比如一个对象</td>\n</tr>\n<tr>\n<td align=\"center\">ZSET</td>\n<td>有序集合</td>\n<td>添加、获取、删除元素 根据分值范围或者成员来获取元素 计算一个键的排名</td>\n<td>去重但可以排序，如获取排名前几名的用户</td>\n</tr>\n</tbody></table>\n<h2 id=\"三、Redis的应用场景\"><a href=\"#三、Redis的应用场景\" class=\"headerlink\" title=\"三、Redis的应用场景\"></a>三、Redis的应用场景</h2><p><strong>计数器</strong></p>\n<p>​        可以对 String 进行自增自减运算，从而实现计数器功能。Redis 这种内存型数据库的读写性能非常高，很适合存储频繁读写的计数量。</p>\n<p><strong>缓存</strong></p>\n<p>​        将热点数据放到内存中，设置内存的最大使用量以及淘汰策略来保证缓存的命中率。</p>\n<p><strong>会话缓存</strong></p>\n<p>​        可以使用 Redis 来统一存储多台应用服务器的会话信息。当应用服务器不再存储用户的会话信息，也就不再具有状态，一个用户可以请求任意一个应用服务器，从而更容易实现高可用性以及可伸缩性。</p>\n<p><strong>全页缓存（FPC）</strong></p>\n<p>​        除基本的会话token之外，Redis还提供很简便的FPC平台。以Magento为例，Magento提供一个插件来使用Redis作为全页缓存后端。此外，对WordPress的用户来说，Pantheon有一个非常好的插件 wp-redis，这个插件能帮助你以最快速度加载你曾浏览过的页面。</p>\n<p><strong>查找表</strong></p>\n<p>​        例如 DNS 记录就很适合使用 Redis 进行存储。查找表和缓存类似，也是利用了 Redis 快速的查找特性。但是查找表的内容不能失效，而缓存的内容可以失效，因为缓存不作为可靠的数据来源。</p>\n<p><strong>消息队列(发布/订阅功能)</strong></p>\n<p>​        List 是一个双向链表，可以通过 lpush 和 rpop 写入和读取消息。不过最好使用 Kafka、RabbitMQ 等消息中间件。</p>\n<p><strong>分布式锁实现</strong></p>\n<p>​        在分布式场景下，无法使用单机环境下的锁来对多个节点上的进程进行同步。可以使用 Redis 自带的 SETNX 命令实现分布式锁，除此之外，还可以使用官方提供的 RedLock 分布式锁实现。</p>\n<p><strong>其它</strong></p>\n<p>​        Set 可以实现交集、并集等操作，从而实现共同好友等功能。ZSet 可以实现有序性操作，从而实现排行榜等功能。</p>\n<p><img src=\"https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202302101632204.png\" alt=\"img\"></p>\n<h2 id=\"四、持久化\"><a href=\"#四、持久化\" class=\"headerlink\" title=\"四、持久化\"></a>四、持久化</h2><h3 id=\"一-什么是持久化\"><a href=\"#一-什么是持久化\" class=\"headerlink\" title=\"(一)什么是持久化\"></a>(一)什么是持久化</h3><p>持久化就是把内存的数据写到磁盘中去，防止服务宕机了内存数据丢失。</p>\n<h3 id=\"二-Redis-的持久化机制是什么？各自的优缺点？\"><a href=\"#二-Redis-的持久化机制是什么？各自的优缺点？\" class=\"headerlink\" title=\"(二)Redis 的持久化机制是什么？各自的优缺点？\"></a>(二)Redis 的持久化机制是什么？各自的优缺点？</h3><p>Redis 提供两种持久化机制 <strong>RDB</strong>（默认） 和 <strong>AOF</strong> 机制:</p>\n<h4 id=\"1-RDB\"><a href=\"#1-RDB\" class=\"headerlink\" title=\"1.RDB\"></a>1.RDB</h4><p>1.RDB：是Redis DataBase缩写快照</p>\n<p>​    RDB是Redis默认的持久化方式。按照一定的时间将内存的数据以快照的形式保存到硬盘中，对应产生的数据文件为dump.rdb。通过配置文件中的save参数来定义快照的周期。</p>\n<p>RDB持久化可以手动执行也可以根据配置定期执行，它的作用是将某个时间点上的数据库状态保存到RDB文件中，RDB文件是一个压缩的二进制文件，通过它可以还原某个时刻数据库的状态。由于RDB文件是保存在硬盘上的，所以即使redis崩溃或者退出，只要RDB文件存在，就可以用它来恢复还原数据库的状态。</p>\n<p>可以通过SAVE或者BGSAVE来生成RDB文件。</p>\n<p>SAVE命令会阻塞redis进程，直到RDB文件生成完毕，在进程阻塞期间，redis不能处理任何命令请求，这显然是不合适的。</p>\n<p>BGSAVE则是会fork出一个子进程，然后由子进程去负责生成RDB文件，父进程还可以继续处理命令请求，不会阻塞进程。</p>\n<p><img src=\"https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202302101633696.png\" alt=\"img\"></p>\n<p><strong>优点：</strong></p>\n<ul>\n<li>1、只有一个文件 dump.rdb，方便持久化。</li>\n<li>2、容灾性好，一个文件可以保存到安全的磁盘。</li>\n<li>3、性能最大化，fork 子进程来完成写操作，让主进程继续处理命令，所以是 IO 最大化。使用单独子进程来进行持久化，主进程不会进行任何 IO 操作，保证了 redis 的高性能</li>\n<li>4.相对于数据集大时，比 AOF 的启动效率更高。</li>\n</ul>\n<p><strong>缺点：</strong></p>\n<p>数据安全性低。RDB 是间隔一段时间进行持久化，如果持久化之间 redis 发生故障，会发生数据丢失。所以这种方式更适合数据要求不严谨的时候。</p>\n<h4 id=\"2-AOF\"><a href=\"#2-AOF\" class=\"headerlink\" title=\"2.AOF\"></a>2.AOF</h4><p>AOF持久化(即Append Only File持久化)，则是将Redis执行的每次写命令记录到单独的日志文件中，当重启Redis会重新将持久化的日志中文件恢复数据。</p>\n<p>当两种方式同时开启时，数据恢复Redis会优先选择AOF恢复。</p>\n<p>AOF和RDB不同，AOF是通过保存redis服务器所执行的写命令来记录数据库状态的。</p>\n<p>AOF通过追加、写入、同步三个步骤来实现持久化机制。</p>\n<p>​    1.当AOF持久化处于激活状态，服务器执行完写命令之后，写命令将会被追加append到aof_buf缓冲区的末尾</p>\n<p>​    2.在服务器每结束一个事件循环之前，将会调用flushAppendOnlyFile函数决定是否要将aof_buf的内容保存到AOF文件中，可以通过配置appendfsync来决定。</p>\n<p>always ##aof_buf内容写入并同步到AOF文件</p>\n<p>everysec ##将aof_buf中内容写入到AOF文件，如果上次同步AOF文件时间距离现在超过1秒，则再次对AOF文件进行同步</p>\n<p>no ##将aof_buf内容写入AOF文件，但是并不对AOF文件进行同步，同步时间由操作系统决定</p>\n<p>如果不设置，默认选项将会是everysec，因为always来说虽然最安全（只会丢失一次事件循环的写命令），但是性能较差，而everysec模式只不过会可能丢失1秒钟的数据，而no模式的效率和everysec相仿，但是会丢失上次同步AOF文件之后的所有写命令数据。</p>\n<p><img src=\"https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202302101633783.png\" alt=\"img\"></p>\n<p><strong>优点：</strong></p>\n<ul>\n<li>1、数据安全，aof 持久化可以配置 appendfsync 属性，有 always，每进行一次 命令操作就记录到 aof 文件中一次。</li>\n<li>2、通过 append 模式写文件，即使中途服务器宕机，可以通过 redis-check-aof 工具解决数据一致性问题。</li>\n<li>3、AOF 机制的 rewrite 模式。AOF 文件没被 rewrite 之前（文件过大时会对命令 进行合并重写），可以删除其中的某些命令（比如误操作的 flushall）)</li>\n</ul>\n<p><strong>缺点：</strong></p>\n<ul>\n<li>1、AOF 文件比 RDB 文件大，且恢复速度慢。</li>\n<li>2、数据集大的时候，比 rdb 启动效率低。</li>\n</ul>\n<p>优缺点是什么？</p>\n<ul>\n<li>AOF文件比RDB更新频率高，优先使用AOF还原数据。</li>\n<li>AOF比RDB更安全也更大</li>\n<li>RDB性能比AOF好</li>\n<li>如果两个都配了优先加载AOF</li>\n</ul>\n<h4 id=\"3-如何选择合适的持久化方式\"><a href=\"#3-如何选择合适的持久化方式\" class=\"headerlink\" title=\"3.如何选择合适的持久化方式\"></a>3.如何选择合适的持久化方式</h4><ul>\n<li>一般来说， 如果想达到足以媲美PostgreSQL的数据安全性，你应该同时使用两种持久化功能。在这种情况下，当 Redis 重启的时候会优先载入AOF文件来恢复原始的数据，因为在通常情况下AOF文件保存的数据集要比RDB文件保存的数据集要完整。</li>\n<li>如果你非常关心你的数据， 但仍然可以承受数分钟以内的数据丢失，那么你可以只使用RDB持久化。</li>\n<li>有很多用户都只使用AOF持久化，但并不推荐这种方式，因为定时生成RDB快照（snapshot）非常便于进行数据库备份， 并且 RDB 恢复数据集的速度也要比AOF恢复的速度要快，除此之外，使用RDB还可以避免AOF程序的bug。</li>\n<li>如果你只希望你的数据在服务器运行的时候存在，你也可以不使用任何持久化方式。</li>\n</ul>\n<h2 id=\"五、过期键的删除策略\"><a href=\"#五、过期键的删除策略\" class=\"headerlink\" title=\"五、过期键的删除策略\"></a>五、过期键的删除策略</h2><h3 id=\"Redis的过期键的删除策略\"><a href=\"#Redis的过期键的删除策略\" class=\"headerlink\" title=\"Redis的过期键的删除策略\"></a>Redis的过期键的删除策略</h3><p>我们都知道，Redis是key-value数据库，我们可以设置Redis中缓存的key的过期时间。Redis的过期策略就是指当Redis中缓存的key过期了，Redis如何处理。</p>\n<p>过期策略通常有以下三种：</p>\n<ul>\n<li>定时过期：每个设置过期时间的key都需要创建一个定时器，到过期时间就会立即清除。该策略可以立即清除过期的数据，对内存很友好；但是会占用大量的CPU资源去处理过期的数据，从而影响缓存的响应时间和吞吐量。</li>\n<li>惰性过期：只有当访问一个key时，才会判断该key是否已过期，过期则清除。该策略可以最大化地节省CPU资源，却对内存非常不友好。极端情况可能出现大量的过期key没有再次被访问，从而不会被清除，占用大量内存。<br><img src=\"https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202302101635749.png\" alt=\"img\"></li>\n<li>定期过期：每隔一定的时间，会扫描一定数量的数据库的expires字典中一定数量的key，并清除其中已过期的key。该策略是前两者的一个折中方案。通过调整定时扫描的时间间隔和每次扫描的限定耗时，可以在不同情况下使得CPU和内存资源达到最优的平衡效果。(expires字典会保存所有设置了过期时间的key的过期时间数据，其中，key是指向键空间中的某个键的指针，value是该键的毫秒精度的UNIX时间戳表示的过期时间。键空间是指该Redis集群中保存的所有键。)</li>\n</ul>\n<p>Redis中同时使用了<strong>惰性过期</strong>和<strong>定期过期</strong>两种过期策略。</p>\n<h2 id=\"六、Redis的内存淘汰策略\"><a href=\"#六、Redis的内存淘汰策略\" class=\"headerlink\" title=\"六、Redis的内存淘汰策略\"></a>六、Redis的内存淘汰策略</h2><p>假设redis每次定期随机查询key的时候没有删掉，这些key也没有做查询的话，就会导致这些key一直保存在redis里面无法被删除，这时候就会走到redis的内存淘汰机制。</p>\n<p><strong>全局的键空间选择性移除</strong></p>\n<ul>\n<li><strong>noeviction</strong>：当内存不足以容纳新写入数据时，新写入操作会报错。</li>\n<li><strong>allkeys-lru</strong>：当内存不足以容纳新写入数据时，在键空间中，移除最近最少使用的key。(这个是最常用的)</li>\n<li><strong>allkeys-random</strong>：当内存不足以容纳新写入数据时，在键空间中，随机移除某个key。</li>\n</ul>\n<p><strong>设置过期时间的键空间选择性移除</strong></p>\n<ul>\n<li><strong>volatile-lru</strong>：当内存不足以容纳新写入数据时，在设置了过期时间的键空间中，移除最近最少使用的key。</li>\n<li><strong>volatile-random</strong>：当内存不足以容纳新写入数据时，在设置了过期时间的键空间中，随机移除某个key。</li>\n<li><strong>volatile-ttl</strong>：当内存不足以容纳新写入数据时，在设置了过期时间的键空间中，有更早过期时间的key优先移除。</li>\n</ul>\n<p><strong>总结</strong></p>\n<p>​        Redis的内存淘汰策略的选取并不会影响过期的key的处理。内存淘汰策略用于处理内存不足时的需要申请额外空间的数据；过期策略用于处理过期的缓存数据。</p>\n<h2 id=\"七、缓存异常\"><a href=\"#七、缓存异常\" class=\"headerlink\" title=\"七、缓存异常\"></a>七、缓存异常</h2><h3 id=\"一-缓存雪崩\"><a href=\"#一-缓存雪崩\" class=\"headerlink\" title=\"(一)缓存雪崩\"></a>(一)缓存雪崩</h3><p><strong>缓存雪崩</strong>是指缓存同一时间大面积的失效，所以，后面的请求都会落到数据库上，造成数据库短时间内承受大量请求而崩掉。雪崩和击穿、热key的问题不太一样的是，它是指大规模的缓存都过期失效了。</p>\n<p><img src=\"https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202302101637632.png\" alt=\"img\"></p>\n<p><strong>解决方案</strong></p>\n<ol>\n<li>缓存数据的过期时间设置随机，防止同一时间大量数据过期现象发生。</li>\n<li>一般并发量不是特别多的时候，使用最多的解决方案是加锁排队。</li>\n<li>给每一个缓存数据增加相应的缓存标记，记录缓存的是否失效，如果缓存标记失效，则更新数据缓存。</li>\n</ol>\n<h3 id=\"二-缓存穿透\"><a href=\"#二-缓存穿透\" class=\"headerlink\" title=\"(二)缓存穿透\"></a>(二)缓存穿透</h3><p><strong>缓存穿透</strong>是指缓存和数据库中都没有的数据，导致所有的请求都落到数据库上，造成数据库短时间内承受大量请求而崩掉。</p>\n<p><img src=\"https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202302101637840.png\" alt=\"img\"></p>\n<p><strong>解决方案</strong></p>\n<ol>\n<li>接口层增加校验，如用户鉴权校验，id做基础校验，id&lt;=0的直接拦截；</li>\n<li>从缓存取不到的数据，在数据库中也没有取到，这时也可以将key-value对写为key-null，缓存有效时间可以设置短点，如30秒（设置太长会导致正常情况也没法使用）。这样可以防止攻击用户反复用同一个id暴力攻击</li>\n<li>采用布隆过滤器，将所有可能存在的数据哈希到一个足够大的 bitmap 中，一个一定不存在的数据会被这个 bitmap 拦截掉，从而避免了对底层存储系统的查询压力<br>布隆过滤器的原理是在你存入数据的时候，会通过散列函数将它映射为一个位数组中的K个点，同时把他们置为1。这样当用户再次来查询A，而A在布隆过滤器值为0，直接返回，就不会产生击穿请求打到DB了。<br>显然，使用布隆过滤器之后会有一个问题就是误判，因为它本身是一个数组，可能会有多个值落到同一个位置，那么理论上来说只要我们的数组长度够长，误判的概率就会越低，这种问题就根据实际情况来就好了。</li>\n</ol>\n<p><img src=\"https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202302101637859.png\" alt=\"img\"></p>\n<p><strong>附加</strong>：</p>\n<p>对于空间的利用到达了一种极致，那就是Bitmap和布隆过滤器(Bloom Filter)。</p>\n<p>Bitmap： 典型的就是哈希表</p>\n<p>缺点是，Bitmap对于每个元素只能记录1bit信息，如果还想完成额外的功能，恐怕只能靠牺牲更多的空间、时间来完成了。</p>\n<p>布隆过滤器（推荐）</p>\n<p>就是引入了k(k&gt;1)k(k&gt;1)个相互独立的哈希函数，保证在给定的空间、误判率下，完成元素判重的过程。</p>\n<p>它的优点是空间效率和查询时间都远远超过一般的算法，缺点是有一定的误识别率和删除困难。</p>\n<p>Bloom-Filter算法的核心思想就是利用多个不同的Hash函数来解决“冲突”。</p>\n<p>Hash存在一个冲突（碰撞）的问题，用同一个Hash得到的两个URL的值有可能相同。为了减少冲突，我们可以多引入几个Hash，如果通过其中的一个Hash值我们得出某元素不在集合中，那么该元素肯定不在集合中。只有在所有的Hash函数告诉我们该元素在集合中时，才能确定该元素存在于集合中。这便是Bloom-Filter的基本思想。</p>\n<p>Bloom-Filter一般用于在大数据量的集合中判定某元素是否存在。</p>\n<h3 id=\"三-缓存击穿\"><a href=\"#三-缓存击穿\" class=\"headerlink\" title=\"(三)缓存击穿\"></a>(三)缓存击穿</h3><p><strong>缓存击穿</strong>是指缓存中没有但数据库中有的数据（一般是缓存时间到期），这时由于并发用户特别多，同时读缓存没读到数据，又同时去数据库去取数据，引起数据库压力瞬间增大，造成过大压力。和缓存雪崩不同的是，缓存击穿指并发查同一条数据，缓存雪崩是不同数据都过期了，很多数据都查不到从而查数据库。</p>\n<p><strong>解决方案</strong></p>\n<ol>\n<li>设置热点数据永远不过期。</li>\n<li>加互斥锁，互斥锁</li>\n</ol>\n<h3 id=\"四-缓存预热\"><a href=\"#四-缓存预热\" class=\"headerlink\" title=\"(四)缓存预热\"></a>(四)缓存预热</h3><p><strong>缓存预热</strong>就是系统上线后，将相关的缓存数据直接加载到缓存系统。这样就可以避免在用户请求的时候，先查询数据库，然后再将数据缓存的问题！用户直接查询事先被预热的缓存数据！</p>\n<p><strong>解决方案</strong></p>\n<ol>\n<li>直接写个缓存刷新页面，上线时手工操作一下；</li>\n<li>数据量不大，可以在项目启动的时候自动进行加载；</li>\n<li>定时刷新缓存；</li>\n</ol>\n<h3 id=\"五-缓存降级\"><a href=\"#五-缓存降级\" class=\"headerlink\" title=\"(五)缓存降级\"></a>(五)缓存降级</h3><p>当访问量剧增、服务出现问题（如响应时间慢或不响应）或非核心服务影响到核心流程的性能时，仍然需要保证服务还是可用的，即使是有损服务。系统可以根据一些关键数据进行自动降级，也可以配置开关实现人工降级。</p>\n<p><strong>缓存降级</strong>的最终目的是保证核心服务可用，即使是有损的。而且有些服务是无法降级的（如加入购物车、结算）。</p>\n<p>在进行降级之前要对系统进行梳理，看看系统是不是可以丢卒保帅；从而梳理出哪些必须誓死保护，哪些可降级；比如可以参考日志级别设置预案：</p>\n<ol>\n<li>一般：比如有些服务偶尔因为网络抖动或者服务正在上线而超时，可以自动降级；</li>\n<li>警告：有些服务在一段时间内成功率有波动（如在95~100%之间），可以自动降级或人工降级，并发送告警；</li>\n<li>错误：比如可用率低于90%，或者数据库连接池被打爆了，或者访问量突然猛增到系统能承受的最大阀值，此时可以根据情况自动降级或者人工降级；</li>\n<li>严重错误：比如因为特殊原因数据错误了，此时需要紧急人工降级。</li>\n</ol>\n<p>服务降级的目的，是为了防止Redis服务故障，导致数据库跟着一起发生雪崩问题。因此，对于不重要的缓存数据，可以采取服务降级策略，例如一个比较常见的做法就是，Redis出现问题，不去数据库查询，而是直接返回默认值给用户。</p>\n<h3 id=\"六-热点数据和冷数据\"><a href=\"#六-热点数据和冷数据\" class=\"headerlink\" title=\"(六)热点数据和冷数据\"></a>(六)热点数据和冷数据</h3><p>热点数据，缓存才有价值</p>\n<p>对于冷数据而言，大部分数据可能还没有再次访问到就已经被挤出内存，不仅占用内存，而且价值不大。频繁修改的数据，看情况考虑使用缓存</p>\n<p>对于热点数据，比如我们的某IM产品，生日祝福模块，当天的寿星列表，缓存以后可能读取数十万次。再举个例子，某导航产品，我们将导航信息，缓存以后可能读取数百万次。</p>\n<p>数据更新前至少读取两次，缓存才有意义。这个是最基本的策略，如果缓存还没有起作用就失效了，那就没有太大价值了。</p>\n<p>那存不存在，修改频率很高，但是又不得不考虑缓存的场景呢？有！比如，这个读取接口对数据库的压力很大，但是又是热点数据，这个时候就需要考虑通过缓存手段，减少数据库的压力，比如我们的某助手产品的，点赞数，收藏数，分享数等是非常典型的热点数据，但是又不断变化，此时就需要将数据同步保存到Redis缓存，减少数据库压力。</p>\n<h3 id=\"七-缓存热点key\"><a href=\"#七-缓存热点key\" class=\"headerlink\" title=\"(七)缓存热点key\"></a>(七)缓存热点key</h3><p>缓存中的一个Key(比如一个促销商品)，在某个时间点过期的时候，恰好在这个时间点对这个Key有大量的并发请求过来，这些请求发现缓存过期一般都会从后端DB加载数据并回设到缓存，这个时候大并发的请求可能会瞬间把后端DB压垮。</p>\n<p><img src=\"https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202302101636857.png\" alt=\"img\"></p>\n<p><strong>解决方案</strong></p>\n<p>1.对缓存查询加锁，如果KEY不存在，就加锁，然后查DB入缓存，然后解锁；其他进程如果发现有锁就等待，然后等解锁后返回数据或者进入DB查询</p>\n<p>2.提前把热key打散到不同的服务器，降低压力</p>\n<h2 id=\"八、实现Redis的高可用\"><a href=\"#八、实现Redis的高可用\" class=\"headerlink\" title=\"八、实现Redis的高可用\"></a>八、实现Redis的高可用</h2><p>要想实现高可用，一台机器肯定是不够的，而redis要保证高可用，有2个可选方案。</p>\n<h3 id=\"一-主从架构\"><a href=\"#一-主从架构\" class=\"headerlink\" title=\"(一)主从架构\"></a>(一)主从架构</h3><p>主从模式是最简单的实现高可用的方案，核心就是主从同步。主从同步的原理如下：</p>\n<ol>\n<li>slave发送sync命令到master</li>\n<li>master收到sync之后，执行bgsave，生成RDB全量文件</li>\n<li>master把slave的写命令记录到缓存</li>\n<li>bgsave执行完毕之后，发送RDB文件到slave，slave执行</li>\n<li>master发送缓存中的写命令到slave，slave执行</li>\n</ol>\n<p><img src=\"https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202302101638248.png\" alt=\"img\"></p>\n<p>这里我写的这个命令是sync，但是在redis2.8版本之后已经使用psync来替代sync了，原因是sync命令非常消耗系统资源，而psync的效率更高。</p>\n<h3 id=\"二-哨兵\"><a href=\"#二-哨兵\" class=\"headerlink\" title=\"(二)哨兵\"></a>(二)哨兵</h3><p>基于主从方案的缺点还是很明显的，假设master宕机，那么就不能写入数据，那么slave也就失去了作用，整个架构就不可用了，除非你手动切换，主要原因就是因为没有自动故障转移机制。而哨兵(sentinel)的功能比单纯的主从架构全面的多了，它具备自动故障转移、集群监控、消息通知等功能。</p>\n<p><img src=\"https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202302101638387.png\" alt=\"img\"></p>\n<p>哨兵可以同时监视多个主从服务器，并且在被监视的master下线时，自动将某个slave提升为master，然后由新的master继续接收命令。整个过程如下：</p>\n<ol>\n<li>初始化sentinel，将普通的redis代码替换成sentinel专用代码</li>\n<li>初始化masters字典和服务器信息，服务器信息主要保存ip:port，并记录实例的地址和ID</li>\n<li>创建和master的两个连接，命令连接和订阅连接，并且订阅sentinel:hello频道</li>\n<li>每隔10秒向master发送info命令，获取master和它下面所有slave的当前信息</li>\n<li>当发现master有新的slave之后，sentinel和新的slave同样建立两个连接，同时每个10秒发送info命令，更新master信息</li>\n<li>sentinel每隔1秒向所有服务器发送ping命令，如果某台服务器在配置的响应时间内连续返回无效回复，将会被标记为下线状态</li>\n<li>选举出领头sentinel，领头sentinel需要半数以上的sentinel同意</li>\n<li>领头sentinel从已下线的的master所有slave中挑选一个，将其转换为master</li>\n<li>让所有的slave改为从新的master复制数据</li>\n<li>将原来的master设置为新的master的从服务器，当原来master重新回复连接时，就变成了新master的从服务器</li>\n</ol>\n<p>sentinel会每隔1秒向所有实例（包括主从服务器和其他sentinel）发送ping命令，并且根据回复判断是否已经下线，这种方式叫做主观下线。当判断为主观下线时，就会向其他监视的sentinel询问，如果超过半数的投票认为已经是下线状态，则会标记为客观下线状态，同时触发故障转移。</p>\n<h2 id=\"九、Redis集群原理\"><a href=\"#九、Redis集群原理\" class=\"headerlink\" title=\"九、Redis集群原理\"></a>九、Redis集群原理</h2><p>如果说依靠哨兵可以实现redis的高可用，如果还想在支持高并发同时容纳海量的数据，那就需要redis集群。redis集群是redis提供的分布式数据存储方案，集群通过数据分片sharding来进行数据的共享，同时提供复制和故障转移的功能。</p>\n<h3 id=\"一-节点\"><a href=\"#一-节点\" class=\"headerlink\" title=\"(一)节点\"></a>(一)节点</h3><p>一个redis集群由多个节点node组成，而多个node之间通过cluster meet命令来进行连接，节点的握手过程：</p>\n<ol>\n<li>节点A收到客户端的cluster meet命令</li>\n<li>A根据收到的IP地址和端口号，向B发送一条meet消息</li>\n<li>节点B收到meet消息返回pong</li>\n<li>A知道B收到了meet消息，返回一条ping消息，握手成功</li>\n<li>最后，节点A将会通过gossip协议把节点B的信息传播给集群中的其他节点，其他节点也将和B进行握手</li>\n</ol>\n<p><img src=\"https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202302101638556.png\" alt=\"img\"></p>\n<h3 id=\"二-槽slot\"><a href=\"#二-槽slot\" class=\"headerlink\" title=\"(二)槽slot\"></a>(二)槽slot</h3><p>​        redis通过集群分片的形式来保存数据，整个集群数据库被分为16384个slot，集群中的每个节点可以处理0-16384个slot，当数据库16384个slot都有节点在处理时，集群处于上线状态，反之只要有一个slot没有得到处理都会处理下线状态。通过cluster addslots命令可以将slot指派给对应节点处理。</p>\n<p>slot是一个位数组，数组的长度是16384/8=2048，而数组的每一位用1表示被节点处理，0表示不处理，如图所示的话表示A节点处理0-7的slot。</p>\n<p><img src=\"https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202302101639676.png\" alt=\"img\"></p>\n<p>当客户端向节点发送命令，如果刚好找到slot属于当前节点，那么节点就执行命令，反之，则会返回一个MOVED命令到客户端指引客户端转向正确的节点。（MOVED过程是自动的）</p>\n<p><img src=\"https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202302101639222.png\" alt=\"img\"></p>\n<p>如果增加或者移出节点，对于slot的重新分配也是非常方便的，redis提供了工具帮助实现slot的迁移，整个过程是完全在线的，不需要停止服务。</p>\n<h3 id=\"三-故障转移\"><a href=\"#三-故障转移\" class=\"headerlink\" title=\"(三)故障转移\"></a>(三)故障转移</h3><p>如果节点A向节点B发送ping消息，节点B没有在规定的时间内响应pong，那么节点A会标记节点B为pfail疑似下线状态，同时把B的状态通过消息的形式发送给其他节点，如果超过半数以上的节点都标记B为pfail状态，B就会被标记为fail下线状态，此时将会发生故障转移，优先从复制数据较多的从节点选择一个成为主节点，并且接管下线节点的slot，整个过程和哨兵非常类似，都是基于Raft协议做选举。</p>\n","site":{"data":{}},"more":"<h2 id=\"一、概述\"><a href=\"#一、概述\" class=\"headerlink\" title=\"一、概述\"></a>一、概述</h2><h3 id=\"一-什么是Redis\"><a href=\"#一-什么是Redis\" class=\"headerlink\" title=\"(一)什么是Redis\"></a>(一)什么是Redis</h3><p>Redis(Remote Dictionary Server) 是一个使用 C 语言编写的，开源的（BSD许可）高性能非关系型（NoSQL）的键值对数据库。</p>\n<p>Redis 可以存储键和五种不同类型的值之间的映射。键的类型只能为字符串，值支持五种数据类型：字符串、列表、集合、散列表、有序集合。</p>\n<p>与传统数据库不同的是 Redis 的数据是存在内存中的，所以读写速度非常快，因此 redis 被广泛应用于缓存方向，每秒可以处理超过 10万次读写操作，是已知性能最快的Key-Value DB。</p>\n<p>另外，Redis 也经常用来做分布式锁。除此之外，Redis 支持事务 、持久化、LUA脚本、LRU驱动事件、多种集群方案。</p>\n<h3 id=\"二-Redis优缺点\"><a href=\"#二-Redis优缺点\" class=\"headerlink\" title=\"(二)Redis优缺点\"></a>(二)Redis优缺点</h3><p>优点</p>\n<ul>\n<li>读写性能优异， Redis能读的速度是110000次/s，写的速度是81000次/s。</li>\n<li>支持数据持久化，支持AOF和RDB两种持久化方式。</li>\n<li>支持事务，Redis的所有操作都是原子性的，同时Redis还支持对几个操作合并后的原子性执行。</li>\n<li>数据结构丰富，除了支持string类型的value外还支持hash、set、zset、list等数据结构。</li>\n<li>支持主从复制，主机会自动将数据同步到从机，可以进行读写分离。</li>\n</ul>\n<p>缺点</p>\n<ul>\n<li>数据库容量受到物理内存的限制，不能用作海量数据的高性能读写，因此Redis适合的场景主要局限在较小数据量的高性能操作和运算上。</li>\n<li>Redis 不具备自动容错和恢复功能，主机从机的宕机都会导致前端部分读写请求失败，需要等待机器重启或者手动切换前端的IP才能恢复。</li>\n<li>主机宕机，宕机前有部分数据未能及时同步到从机，切换IP后还会引入数据不一致的问题，降低了系统的可用性。</li>\n<li>Redis 较难支持在线扩容，在集群容量达到上限时在线扩容会变得很复杂。为避免这一问题，运维人员在系统上线时必须确保有足够的空间，这对资源造成了很大的浪费。</li>\n</ul>\n<h3 id=\"三-为什么要用-Redis-为什么要用缓存\"><a href=\"#三-为什么要用-Redis-为什么要用缓存\" class=\"headerlink\" title=\"(三)为什么要用 Redis /为什么要用缓存\"></a>(三)为什么要用 Redis /为什么要用缓存</h3><p>主要从“高性能”和“高并发”这两点来看待这个问题。</p>\n<p><strong>高性能：</strong></p>\n<p>假如用户第一次访问数据库中的某些数据。这个过程会比较慢，因为是从硬盘上读取的。将该用户访问的数据存在数缓存中，这样下一次再访问这些数据的时候就可以直接从缓存中获取了。</p>\n<p>操作缓存就是直接操作内存，所以速度相当快。如果数据库中的对应数据改变的之后，同步改变缓存中相应的数据即可！</p>\n<p><img src=\"https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202302101630596.png\" alt=\"img\"></p>\n<p><strong>高并发：</strong></p>\n<p>直接操作缓存能够承受的请求是远远大于直接访问数据库的，所以我们可以考虑把数据库中的部分数据转移到缓存中去，这样用户的一部分请求会直接到缓存这里而不用经过数据库。</p>\n<p><img src=\"https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202302101630478.png\" alt=\"img\"></p>\n<h2 id=\"二、数据类型\"><a href=\"#二、数据类型\" class=\"headerlink\" title=\"二、数据类型\"></a>二、数据类型</h2><table>\n<thead>\n<tr>\n<th align=\"center\">数据类型</th>\n<th>可以存储的值</th>\n<th>操作</th>\n<th>应用场景</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">String</td>\n<td>字符串、整数或者浮点数</td>\n<td>对整个字符串或者字符串的其中一部分执行操作 对整数和浮点数执行自增或者自减操作</td>\n<td>做简单的键值对缓存</td>\n</tr>\n<tr>\n<td align=\"center\">List</td>\n<td>列表</td>\n<td>从两端压入或者弹出元素 对单个或者多个元素进行修剪， 只保留一个范围内的元素</td>\n<td>存储一些列表型的数据结构，类似粉丝列表、文章的评论列表之类的数据</td>\n</tr>\n<tr>\n<td align=\"center\">Set</td>\n<td>无序集合</td>\n<td>添加、获取、移除单个元素 检查一个元素是否存在于集合中 计算交集、并集、差集 从集合里面随机获取元素</td>\n<td>交集、并集、差集的操作，比如交集，可以把两个人的粉丝列表整一个交集</td>\n</tr>\n<tr>\n<td align=\"center\">Hash</td>\n<td>包含键值对的无序散列表</td>\n<td>添加、获取、移除单个键值对 获取所有键值对 检查某个键是否存在</td>\n<td>结构化的数据，比如一个对象</td>\n</tr>\n<tr>\n<td align=\"center\">ZSET</td>\n<td>有序集合</td>\n<td>添加、获取、删除元素 根据分值范围或者成员来获取元素 计算一个键的排名</td>\n<td>去重但可以排序，如获取排名前几名的用户</td>\n</tr>\n</tbody></table>\n<h2 id=\"三、Redis的应用场景\"><a href=\"#三、Redis的应用场景\" class=\"headerlink\" title=\"三、Redis的应用场景\"></a>三、Redis的应用场景</h2><p><strong>计数器</strong></p>\n<p>​        可以对 String 进行自增自减运算，从而实现计数器功能。Redis 这种内存型数据库的读写性能非常高，很适合存储频繁读写的计数量。</p>\n<p><strong>缓存</strong></p>\n<p>​        将热点数据放到内存中，设置内存的最大使用量以及淘汰策略来保证缓存的命中率。</p>\n<p><strong>会话缓存</strong></p>\n<p>​        可以使用 Redis 来统一存储多台应用服务器的会话信息。当应用服务器不再存储用户的会话信息，也就不再具有状态，一个用户可以请求任意一个应用服务器，从而更容易实现高可用性以及可伸缩性。</p>\n<p><strong>全页缓存（FPC）</strong></p>\n<p>​        除基本的会话token之外，Redis还提供很简便的FPC平台。以Magento为例，Magento提供一个插件来使用Redis作为全页缓存后端。此外，对WordPress的用户来说，Pantheon有一个非常好的插件 wp-redis，这个插件能帮助你以最快速度加载你曾浏览过的页面。</p>\n<p><strong>查找表</strong></p>\n<p>​        例如 DNS 记录就很适合使用 Redis 进行存储。查找表和缓存类似，也是利用了 Redis 快速的查找特性。但是查找表的内容不能失效，而缓存的内容可以失效，因为缓存不作为可靠的数据来源。</p>\n<p><strong>消息队列(发布/订阅功能)</strong></p>\n<p>​        List 是一个双向链表，可以通过 lpush 和 rpop 写入和读取消息。不过最好使用 Kafka、RabbitMQ 等消息中间件。</p>\n<p><strong>分布式锁实现</strong></p>\n<p>​        在分布式场景下，无法使用单机环境下的锁来对多个节点上的进程进行同步。可以使用 Redis 自带的 SETNX 命令实现分布式锁，除此之外，还可以使用官方提供的 RedLock 分布式锁实现。</p>\n<p><strong>其它</strong></p>\n<p>​        Set 可以实现交集、并集等操作，从而实现共同好友等功能。ZSet 可以实现有序性操作，从而实现排行榜等功能。</p>\n<p><img src=\"https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202302101632204.png\" alt=\"img\"></p>\n<h2 id=\"四、持久化\"><a href=\"#四、持久化\" class=\"headerlink\" title=\"四、持久化\"></a>四、持久化</h2><h3 id=\"一-什么是持久化\"><a href=\"#一-什么是持久化\" class=\"headerlink\" title=\"(一)什么是持久化\"></a>(一)什么是持久化</h3><p>持久化就是把内存的数据写到磁盘中去，防止服务宕机了内存数据丢失。</p>\n<h3 id=\"二-Redis-的持久化机制是什么？各自的优缺点？\"><a href=\"#二-Redis-的持久化机制是什么？各自的优缺点？\" class=\"headerlink\" title=\"(二)Redis 的持久化机制是什么？各自的优缺点？\"></a>(二)Redis 的持久化机制是什么？各自的优缺点？</h3><p>Redis 提供两种持久化机制 <strong>RDB</strong>（默认） 和 <strong>AOF</strong> 机制:</p>\n<h4 id=\"1-RDB\"><a href=\"#1-RDB\" class=\"headerlink\" title=\"1.RDB\"></a>1.RDB</h4><p>1.RDB：是Redis DataBase缩写快照</p>\n<p>​    RDB是Redis默认的持久化方式。按照一定的时间将内存的数据以快照的形式保存到硬盘中，对应产生的数据文件为dump.rdb。通过配置文件中的save参数来定义快照的周期。</p>\n<p>RDB持久化可以手动执行也可以根据配置定期执行，它的作用是将某个时间点上的数据库状态保存到RDB文件中，RDB文件是一个压缩的二进制文件，通过它可以还原某个时刻数据库的状态。由于RDB文件是保存在硬盘上的，所以即使redis崩溃或者退出，只要RDB文件存在，就可以用它来恢复还原数据库的状态。</p>\n<p>可以通过SAVE或者BGSAVE来生成RDB文件。</p>\n<p>SAVE命令会阻塞redis进程，直到RDB文件生成完毕，在进程阻塞期间，redis不能处理任何命令请求，这显然是不合适的。</p>\n<p>BGSAVE则是会fork出一个子进程，然后由子进程去负责生成RDB文件，父进程还可以继续处理命令请求，不会阻塞进程。</p>\n<p><img src=\"https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202302101633696.png\" alt=\"img\"></p>\n<p><strong>优点：</strong></p>\n<ul>\n<li>1、只有一个文件 dump.rdb，方便持久化。</li>\n<li>2、容灾性好，一个文件可以保存到安全的磁盘。</li>\n<li>3、性能最大化，fork 子进程来完成写操作，让主进程继续处理命令，所以是 IO 最大化。使用单独子进程来进行持久化，主进程不会进行任何 IO 操作，保证了 redis 的高性能</li>\n<li>4.相对于数据集大时，比 AOF 的启动效率更高。</li>\n</ul>\n<p><strong>缺点：</strong></p>\n<p>数据安全性低。RDB 是间隔一段时间进行持久化，如果持久化之间 redis 发生故障，会发生数据丢失。所以这种方式更适合数据要求不严谨的时候。</p>\n<h4 id=\"2-AOF\"><a href=\"#2-AOF\" class=\"headerlink\" title=\"2.AOF\"></a>2.AOF</h4><p>AOF持久化(即Append Only File持久化)，则是将Redis执行的每次写命令记录到单独的日志文件中，当重启Redis会重新将持久化的日志中文件恢复数据。</p>\n<p>当两种方式同时开启时，数据恢复Redis会优先选择AOF恢复。</p>\n<p>AOF和RDB不同，AOF是通过保存redis服务器所执行的写命令来记录数据库状态的。</p>\n<p>AOF通过追加、写入、同步三个步骤来实现持久化机制。</p>\n<p>​    1.当AOF持久化处于激活状态，服务器执行完写命令之后，写命令将会被追加append到aof_buf缓冲区的末尾</p>\n<p>​    2.在服务器每结束一个事件循环之前，将会调用flushAppendOnlyFile函数决定是否要将aof_buf的内容保存到AOF文件中，可以通过配置appendfsync来决定。</p>\n<p>always ##aof_buf内容写入并同步到AOF文件</p>\n<p>everysec ##将aof_buf中内容写入到AOF文件，如果上次同步AOF文件时间距离现在超过1秒，则再次对AOF文件进行同步</p>\n<p>no ##将aof_buf内容写入AOF文件，但是并不对AOF文件进行同步，同步时间由操作系统决定</p>\n<p>如果不设置，默认选项将会是everysec，因为always来说虽然最安全（只会丢失一次事件循环的写命令），但是性能较差，而everysec模式只不过会可能丢失1秒钟的数据，而no模式的效率和everysec相仿，但是会丢失上次同步AOF文件之后的所有写命令数据。</p>\n<p><img src=\"https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202302101633783.png\" alt=\"img\"></p>\n<p><strong>优点：</strong></p>\n<ul>\n<li>1、数据安全，aof 持久化可以配置 appendfsync 属性，有 always，每进行一次 命令操作就记录到 aof 文件中一次。</li>\n<li>2、通过 append 模式写文件，即使中途服务器宕机，可以通过 redis-check-aof 工具解决数据一致性问题。</li>\n<li>3、AOF 机制的 rewrite 模式。AOF 文件没被 rewrite 之前（文件过大时会对命令 进行合并重写），可以删除其中的某些命令（比如误操作的 flushall）)</li>\n</ul>\n<p><strong>缺点：</strong></p>\n<ul>\n<li>1、AOF 文件比 RDB 文件大，且恢复速度慢。</li>\n<li>2、数据集大的时候，比 rdb 启动效率低。</li>\n</ul>\n<p>优缺点是什么？</p>\n<ul>\n<li>AOF文件比RDB更新频率高，优先使用AOF还原数据。</li>\n<li>AOF比RDB更安全也更大</li>\n<li>RDB性能比AOF好</li>\n<li>如果两个都配了优先加载AOF</li>\n</ul>\n<h4 id=\"3-如何选择合适的持久化方式\"><a href=\"#3-如何选择合适的持久化方式\" class=\"headerlink\" title=\"3.如何选择合适的持久化方式\"></a>3.如何选择合适的持久化方式</h4><ul>\n<li>一般来说， 如果想达到足以媲美PostgreSQL的数据安全性，你应该同时使用两种持久化功能。在这种情况下，当 Redis 重启的时候会优先载入AOF文件来恢复原始的数据，因为在通常情况下AOF文件保存的数据集要比RDB文件保存的数据集要完整。</li>\n<li>如果你非常关心你的数据， 但仍然可以承受数分钟以内的数据丢失，那么你可以只使用RDB持久化。</li>\n<li>有很多用户都只使用AOF持久化，但并不推荐这种方式，因为定时生成RDB快照（snapshot）非常便于进行数据库备份， 并且 RDB 恢复数据集的速度也要比AOF恢复的速度要快，除此之外，使用RDB还可以避免AOF程序的bug。</li>\n<li>如果你只希望你的数据在服务器运行的时候存在，你也可以不使用任何持久化方式。</li>\n</ul>\n<h2 id=\"五、过期键的删除策略\"><a href=\"#五、过期键的删除策略\" class=\"headerlink\" title=\"五、过期键的删除策略\"></a>五、过期键的删除策略</h2><h3 id=\"Redis的过期键的删除策略\"><a href=\"#Redis的过期键的删除策略\" class=\"headerlink\" title=\"Redis的过期键的删除策略\"></a>Redis的过期键的删除策略</h3><p>我们都知道，Redis是key-value数据库，我们可以设置Redis中缓存的key的过期时间。Redis的过期策略就是指当Redis中缓存的key过期了，Redis如何处理。</p>\n<p>过期策略通常有以下三种：</p>\n<ul>\n<li>定时过期：每个设置过期时间的key都需要创建一个定时器，到过期时间就会立即清除。该策略可以立即清除过期的数据，对内存很友好；但是会占用大量的CPU资源去处理过期的数据，从而影响缓存的响应时间和吞吐量。</li>\n<li>惰性过期：只有当访问一个key时，才会判断该key是否已过期，过期则清除。该策略可以最大化地节省CPU资源，却对内存非常不友好。极端情况可能出现大量的过期key没有再次被访问，从而不会被清除，占用大量内存。<br><img src=\"https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202302101635749.png\" alt=\"img\"></li>\n<li>定期过期：每隔一定的时间，会扫描一定数量的数据库的expires字典中一定数量的key，并清除其中已过期的key。该策略是前两者的一个折中方案。通过调整定时扫描的时间间隔和每次扫描的限定耗时，可以在不同情况下使得CPU和内存资源达到最优的平衡效果。(expires字典会保存所有设置了过期时间的key的过期时间数据，其中，key是指向键空间中的某个键的指针，value是该键的毫秒精度的UNIX时间戳表示的过期时间。键空间是指该Redis集群中保存的所有键。)</li>\n</ul>\n<p>Redis中同时使用了<strong>惰性过期</strong>和<strong>定期过期</strong>两种过期策略。</p>\n<h2 id=\"六、Redis的内存淘汰策略\"><a href=\"#六、Redis的内存淘汰策略\" class=\"headerlink\" title=\"六、Redis的内存淘汰策略\"></a>六、Redis的内存淘汰策略</h2><p>假设redis每次定期随机查询key的时候没有删掉，这些key也没有做查询的话，就会导致这些key一直保存在redis里面无法被删除，这时候就会走到redis的内存淘汰机制。</p>\n<p><strong>全局的键空间选择性移除</strong></p>\n<ul>\n<li><strong>noeviction</strong>：当内存不足以容纳新写入数据时，新写入操作会报错。</li>\n<li><strong>allkeys-lru</strong>：当内存不足以容纳新写入数据时，在键空间中，移除最近最少使用的key。(这个是最常用的)</li>\n<li><strong>allkeys-random</strong>：当内存不足以容纳新写入数据时，在键空间中，随机移除某个key。</li>\n</ul>\n<p><strong>设置过期时间的键空间选择性移除</strong></p>\n<ul>\n<li><strong>volatile-lru</strong>：当内存不足以容纳新写入数据时，在设置了过期时间的键空间中，移除最近最少使用的key。</li>\n<li><strong>volatile-random</strong>：当内存不足以容纳新写入数据时，在设置了过期时间的键空间中，随机移除某个key。</li>\n<li><strong>volatile-ttl</strong>：当内存不足以容纳新写入数据时，在设置了过期时间的键空间中，有更早过期时间的key优先移除。</li>\n</ul>\n<p><strong>总结</strong></p>\n<p>​        Redis的内存淘汰策略的选取并不会影响过期的key的处理。内存淘汰策略用于处理内存不足时的需要申请额外空间的数据；过期策略用于处理过期的缓存数据。</p>\n<h2 id=\"七、缓存异常\"><a href=\"#七、缓存异常\" class=\"headerlink\" title=\"七、缓存异常\"></a>七、缓存异常</h2><h3 id=\"一-缓存雪崩\"><a href=\"#一-缓存雪崩\" class=\"headerlink\" title=\"(一)缓存雪崩\"></a>(一)缓存雪崩</h3><p><strong>缓存雪崩</strong>是指缓存同一时间大面积的失效，所以，后面的请求都会落到数据库上，造成数据库短时间内承受大量请求而崩掉。雪崩和击穿、热key的问题不太一样的是，它是指大规模的缓存都过期失效了。</p>\n<p><img src=\"https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202302101637632.png\" alt=\"img\"></p>\n<p><strong>解决方案</strong></p>\n<ol>\n<li>缓存数据的过期时间设置随机，防止同一时间大量数据过期现象发生。</li>\n<li>一般并发量不是特别多的时候，使用最多的解决方案是加锁排队。</li>\n<li>给每一个缓存数据增加相应的缓存标记，记录缓存的是否失效，如果缓存标记失效，则更新数据缓存。</li>\n</ol>\n<h3 id=\"二-缓存穿透\"><a href=\"#二-缓存穿透\" class=\"headerlink\" title=\"(二)缓存穿透\"></a>(二)缓存穿透</h3><p><strong>缓存穿透</strong>是指缓存和数据库中都没有的数据，导致所有的请求都落到数据库上，造成数据库短时间内承受大量请求而崩掉。</p>\n<p><img src=\"https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202302101637840.png\" alt=\"img\"></p>\n<p><strong>解决方案</strong></p>\n<ol>\n<li>接口层增加校验，如用户鉴权校验，id做基础校验，id&lt;=0的直接拦截；</li>\n<li>从缓存取不到的数据，在数据库中也没有取到，这时也可以将key-value对写为key-null，缓存有效时间可以设置短点，如30秒（设置太长会导致正常情况也没法使用）。这样可以防止攻击用户反复用同一个id暴力攻击</li>\n<li>采用布隆过滤器，将所有可能存在的数据哈希到一个足够大的 bitmap 中，一个一定不存在的数据会被这个 bitmap 拦截掉，从而避免了对底层存储系统的查询压力<br>布隆过滤器的原理是在你存入数据的时候，会通过散列函数将它映射为一个位数组中的K个点，同时把他们置为1。这样当用户再次来查询A，而A在布隆过滤器值为0，直接返回，就不会产生击穿请求打到DB了。<br>显然，使用布隆过滤器之后会有一个问题就是误判，因为它本身是一个数组，可能会有多个值落到同一个位置，那么理论上来说只要我们的数组长度够长，误判的概率就会越低，这种问题就根据实际情况来就好了。</li>\n</ol>\n<p><img src=\"https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202302101637859.png\" alt=\"img\"></p>\n<p><strong>附加</strong>：</p>\n<p>对于空间的利用到达了一种极致，那就是Bitmap和布隆过滤器(Bloom Filter)。</p>\n<p>Bitmap： 典型的就是哈希表</p>\n<p>缺点是，Bitmap对于每个元素只能记录1bit信息，如果还想完成额外的功能，恐怕只能靠牺牲更多的空间、时间来完成了。</p>\n<p>布隆过滤器（推荐）</p>\n<p>就是引入了k(k&gt;1)k(k&gt;1)个相互独立的哈希函数，保证在给定的空间、误判率下，完成元素判重的过程。</p>\n<p>它的优点是空间效率和查询时间都远远超过一般的算法，缺点是有一定的误识别率和删除困难。</p>\n<p>Bloom-Filter算法的核心思想就是利用多个不同的Hash函数来解决“冲突”。</p>\n<p>Hash存在一个冲突（碰撞）的问题，用同一个Hash得到的两个URL的值有可能相同。为了减少冲突，我们可以多引入几个Hash，如果通过其中的一个Hash值我们得出某元素不在集合中，那么该元素肯定不在集合中。只有在所有的Hash函数告诉我们该元素在集合中时，才能确定该元素存在于集合中。这便是Bloom-Filter的基本思想。</p>\n<p>Bloom-Filter一般用于在大数据量的集合中判定某元素是否存在。</p>\n<h3 id=\"三-缓存击穿\"><a href=\"#三-缓存击穿\" class=\"headerlink\" title=\"(三)缓存击穿\"></a>(三)缓存击穿</h3><p><strong>缓存击穿</strong>是指缓存中没有但数据库中有的数据（一般是缓存时间到期），这时由于并发用户特别多，同时读缓存没读到数据，又同时去数据库去取数据，引起数据库压力瞬间增大，造成过大压力。和缓存雪崩不同的是，缓存击穿指并发查同一条数据，缓存雪崩是不同数据都过期了，很多数据都查不到从而查数据库。</p>\n<p><strong>解决方案</strong></p>\n<ol>\n<li>设置热点数据永远不过期。</li>\n<li>加互斥锁，互斥锁</li>\n</ol>\n<h3 id=\"四-缓存预热\"><a href=\"#四-缓存预热\" class=\"headerlink\" title=\"(四)缓存预热\"></a>(四)缓存预热</h3><p><strong>缓存预热</strong>就是系统上线后，将相关的缓存数据直接加载到缓存系统。这样就可以避免在用户请求的时候，先查询数据库，然后再将数据缓存的问题！用户直接查询事先被预热的缓存数据！</p>\n<p><strong>解决方案</strong></p>\n<ol>\n<li>直接写个缓存刷新页面，上线时手工操作一下；</li>\n<li>数据量不大，可以在项目启动的时候自动进行加载；</li>\n<li>定时刷新缓存；</li>\n</ol>\n<h3 id=\"五-缓存降级\"><a href=\"#五-缓存降级\" class=\"headerlink\" title=\"(五)缓存降级\"></a>(五)缓存降级</h3><p>当访问量剧增、服务出现问题（如响应时间慢或不响应）或非核心服务影响到核心流程的性能时，仍然需要保证服务还是可用的，即使是有损服务。系统可以根据一些关键数据进行自动降级，也可以配置开关实现人工降级。</p>\n<p><strong>缓存降级</strong>的最终目的是保证核心服务可用，即使是有损的。而且有些服务是无法降级的（如加入购物车、结算）。</p>\n<p>在进行降级之前要对系统进行梳理，看看系统是不是可以丢卒保帅；从而梳理出哪些必须誓死保护，哪些可降级；比如可以参考日志级别设置预案：</p>\n<ol>\n<li>一般：比如有些服务偶尔因为网络抖动或者服务正在上线而超时，可以自动降级；</li>\n<li>警告：有些服务在一段时间内成功率有波动（如在95~100%之间），可以自动降级或人工降级，并发送告警；</li>\n<li>错误：比如可用率低于90%，或者数据库连接池被打爆了，或者访问量突然猛增到系统能承受的最大阀值，此时可以根据情况自动降级或者人工降级；</li>\n<li>严重错误：比如因为特殊原因数据错误了，此时需要紧急人工降级。</li>\n</ol>\n<p>服务降级的目的，是为了防止Redis服务故障，导致数据库跟着一起发生雪崩问题。因此，对于不重要的缓存数据，可以采取服务降级策略，例如一个比较常见的做法就是，Redis出现问题，不去数据库查询，而是直接返回默认值给用户。</p>\n<h3 id=\"六-热点数据和冷数据\"><a href=\"#六-热点数据和冷数据\" class=\"headerlink\" title=\"(六)热点数据和冷数据\"></a>(六)热点数据和冷数据</h3><p>热点数据，缓存才有价值</p>\n<p>对于冷数据而言，大部分数据可能还没有再次访问到就已经被挤出内存，不仅占用内存，而且价值不大。频繁修改的数据，看情况考虑使用缓存</p>\n<p>对于热点数据，比如我们的某IM产品，生日祝福模块，当天的寿星列表，缓存以后可能读取数十万次。再举个例子，某导航产品，我们将导航信息，缓存以后可能读取数百万次。</p>\n<p>数据更新前至少读取两次，缓存才有意义。这个是最基本的策略，如果缓存还没有起作用就失效了，那就没有太大价值了。</p>\n<p>那存不存在，修改频率很高，但是又不得不考虑缓存的场景呢？有！比如，这个读取接口对数据库的压力很大，但是又是热点数据，这个时候就需要考虑通过缓存手段，减少数据库的压力，比如我们的某助手产品的，点赞数，收藏数，分享数等是非常典型的热点数据，但是又不断变化，此时就需要将数据同步保存到Redis缓存，减少数据库压力。</p>\n<h3 id=\"七-缓存热点key\"><a href=\"#七-缓存热点key\" class=\"headerlink\" title=\"(七)缓存热点key\"></a>(七)缓存热点key</h3><p>缓存中的一个Key(比如一个促销商品)，在某个时间点过期的时候，恰好在这个时间点对这个Key有大量的并发请求过来，这些请求发现缓存过期一般都会从后端DB加载数据并回设到缓存，这个时候大并发的请求可能会瞬间把后端DB压垮。</p>\n<p><img src=\"https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202302101636857.png\" alt=\"img\"></p>\n<p><strong>解决方案</strong></p>\n<p>1.对缓存查询加锁，如果KEY不存在，就加锁，然后查DB入缓存，然后解锁；其他进程如果发现有锁就等待，然后等解锁后返回数据或者进入DB查询</p>\n<p>2.提前把热key打散到不同的服务器，降低压力</p>\n<h2 id=\"八、实现Redis的高可用\"><a href=\"#八、实现Redis的高可用\" class=\"headerlink\" title=\"八、实现Redis的高可用\"></a>八、实现Redis的高可用</h2><p>要想实现高可用，一台机器肯定是不够的，而redis要保证高可用，有2个可选方案。</p>\n<h3 id=\"一-主从架构\"><a href=\"#一-主从架构\" class=\"headerlink\" title=\"(一)主从架构\"></a>(一)主从架构</h3><p>主从模式是最简单的实现高可用的方案，核心就是主从同步。主从同步的原理如下：</p>\n<ol>\n<li>slave发送sync命令到master</li>\n<li>master收到sync之后，执行bgsave，生成RDB全量文件</li>\n<li>master把slave的写命令记录到缓存</li>\n<li>bgsave执行完毕之后，发送RDB文件到slave，slave执行</li>\n<li>master发送缓存中的写命令到slave，slave执行</li>\n</ol>\n<p><img src=\"https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202302101638248.png\" alt=\"img\"></p>\n<p>这里我写的这个命令是sync，但是在redis2.8版本之后已经使用psync来替代sync了，原因是sync命令非常消耗系统资源，而psync的效率更高。</p>\n<h3 id=\"二-哨兵\"><a href=\"#二-哨兵\" class=\"headerlink\" title=\"(二)哨兵\"></a>(二)哨兵</h3><p>基于主从方案的缺点还是很明显的，假设master宕机，那么就不能写入数据，那么slave也就失去了作用，整个架构就不可用了，除非你手动切换，主要原因就是因为没有自动故障转移机制。而哨兵(sentinel)的功能比单纯的主从架构全面的多了，它具备自动故障转移、集群监控、消息通知等功能。</p>\n<p><img src=\"https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202302101638387.png\" alt=\"img\"></p>\n<p>哨兵可以同时监视多个主从服务器，并且在被监视的master下线时，自动将某个slave提升为master，然后由新的master继续接收命令。整个过程如下：</p>\n<ol>\n<li>初始化sentinel，将普通的redis代码替换成sentinel专用代码</li>\n<li>初始化masters字典和服务器信息，服务器信息主要保存ip:port，并记录实例的地址和ID</li>\n<li>创建和master的两个连接，命令连接和订阅连接，并且订阅sentinel:hello频道</li>\n<li>每隔10秒向master发送info命令，获取master和它下面所有slave的当前信息</li>\n<li>当发现master有新的slave之后，sentinel和新的slave同样建立两个连接，同时每个10秒发送info命令，更新master信息</li>\n<li>sentinel每隔1秒向所有服务器发送ping命令，如果某台服务器在配置的响应时间内连续返回无效回复，将会被标记为下线状态</li>\n<li>选举出领头sentinel，领头sentinel需要半数以上的sentinel同意</li>\n<li>领头sentinel从已下线的的master所有slave中挑选一个，将其转换为master</li>\n<li>让所有的slave改为从新的master复制数据</li>\n<li>将原来的master设置为新的master的从服务器，当原来master重新回复连接时，就变成了新master的从服务器</li>\n</ol>\n<p>sentinel会每隔1秒向所有实例（包括主从服务器和其他sentinel）发送ping命令，并且根据回复判断是否已经下线，这种方式叫做主观下线。当判断为主观下线时，就会向其他监视的sentinel询问，如果超过半数的投票认为已经是下线状态，则会标记为客观下线状态，同时触发故障转移。</p>\n<h2 id=\"九、Redis集群原理\"><a href=\"#九、Redis集群原理\" class=\"headerlink\" title=\"九、Redis集群原理\"></a>九、Redis集群原理</h2><p>如果说依靠哨兵可以实现redis的高可用，如果还想在支持高并发同时容纳海量的数据，那就需要redis集群。redis集群是redis提供的分布式数据存储方案，集群通过数据分片sharding来进行数据的共享，同时提供复制和故障转移的功能。</p>\n<h3 id=\"一-节点\"><a href=\"#一-节点\" class=\"headerlink\" title=\"(一)节点\"></a>(一)节点</h3><p>一个redis集群由多个节点node组成，而多个node之间通过cluster meet命令来进行连接，节点的握手过程：</p>\n<ol>\n<li>节点A收到客户端的cluster meet命令</li>\n<li>A根据收到的IP地址和端口号，向B发送一条meet消息</li>\n<li>节点B收到meet消息返回pong</li>\n<li>A知道B收到了meet消息，返回一条ping消息，握手成功</li>\n<li>最后，节点A将会通过gossip协议把节点B的信息传播给集群中的其他节点，其他节点也将和B进行握手</li>\n</ol>\n<p><img src=\"https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202302101638556.png\" alt=\"img\"></p>\n<h3 id=\"二-槽slot\"><a href=\"#二-槽slot\" class=\"headerlink\" title=\"(二)槽slot\"></a>(二)槽slot</h3><p>​        redis通过集群分片的形式来保存数据，整个集群数据库被分为16384个slot，集群中的每个节点可以处理0-16384个slot，当数据库16384个slot都有节点在处理时，集群处于上线状态，反之只要有一个slot没有得到处理都会处理下线状态。通过cluster addslots命令可以将slot指派给对应节点处理。</p>\n<p>slot是一个位数组，数组的长度是16384/8=2048，而数组的每一位用1表示被节点处理，0表示不处理，如图所示的话表示A节点处理0-7的slot。</p>\n<p><img src=\"https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202302101639676.png\" alt=\"img\"></p>\n<p>当客户端向节点发送命令，如果刚好找到slot属于当前节点，那么节点就执行命令，反之，则会返回一个MOVED命令到客户端指引客户端转向正确的节点。（MOVED过程是自动的）</p>\n<p><img src=\"https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202302101639222.png\" alt=\"img\"></p>\n<p>如果增加或者移出节点，对于slot的重新分配也是非常方便的，redis提供了工具帮助实现slot的迁移，整个过程是完全在线的，不需要停止服务。</p>\n<h3 id=\"三-故障转移\"><a href=\"#三-故障转移\" class=\"headerlink\" title=\"(三)故障转移\"></a>(三)故障转移</h3><p>如果节点A向节点B发送ping消息，节点B没有在规定的时间内响应pong，那么节点A会标记节点B为pfail疑似下线状态，同时把B的状态通过消息的形式发送给其他节点，如果超过半数以上的节点都标记B为pfail状态，B就会被标记为fail下线状态，此时将会发生故障转移，优先从复制数据较多的从节点选择一个成为主节点，并且接管下线节点的slot，整个过程和哨兵非常类似，都是基于Raft协议做选举。</p>\n"},{"title":"vuepress搭建个人博客教程","excerpt":"VuePress 由两部分组成：第一部分是一个极简静态网站生成器 (opens new window)，它包含由 Vue 驱动的主题系统和插件 API，另一个部分是为书写技术文档而优化的默认主题，它的诞生初衷是为了支持 Vue 及其子项目的文档需求。","index_img":"https://img1.baidu.com/it/u=2891324737,2702977437&fm=253&fmt=auto&app=138&f=JPEG?w=1000&h=500","abbrlink":"26960e5d","date":"2022-01-31T16:00:00.000Z","_content":"\n\n\n\n<!-- more -->\n\n## 安装\n```sh\nnpm install vuepress-theme-reco --save-dev\n\n# or\n\nyarn add vuepress-theme-reco\n```\n## 引用\n```sh\n// .vuepress/config.js\n\nmodule.exports = {\n  theme: 'reco'\n} \n```\n## 本地引用\n- 下载\n在https://github.com/vuepress-reco/vuepress-theme-reco仓库中下载全部文件\n- 使用\n在.vuepress文件夹下新建theme文件夹，再将packages文件夹下的vuepress-theme-reco文件夹放入theme;\n修改.vuepress文件夹下config.js\n```\n\"theme\": require.resolve(\"./theme/vuepress-theme-reco\"),\n```\n\n## Front Matter\n```sh\n---\ntitle: 烤鸭的做法\ndate: '2019-08-08 08:00:00'\nsidebar: 'auto'\ncategories:\n - 烹饪\n - 爱好\ntags:\n - 烤\n - 鸭子\nkeys:\n - '123456'\npublish: false\n---\n```\n:::tip\nFront Matter配置\n\ntitle: 文章标题 date: 时间，如('2019-08-08 08:00:00') sidebar: 'auto' categories:文章分类，可以有多个\n\ntags:文章标签,可以有多个\n\nkeys：文章加密密码\n\nsticky :是否置顶，sort type: 降序，可以按照 1, 2, 3, ... 来降低置顶文章的排列优先级\n\npublic:是否发布\n:::\n## 优化页面\n1.首页背景全屏显示 修改首页的README.md文件\n```css\nbgImageStyle: {\n  height: '95vh',\n  background-color: '#D9AFD9',\n  background-image: 'linear-gradient(0deg, #D9AFD9 0%, #97D9E1 100%)'\n}\n```\n2.添加鼠标点击特效 修改.vuepress/config.js中的head，如下所示:\n```javascript\n[\n    \"script\",\n    {\n      \"src\": \"https://cdn.jsdelivr.net/gh/forthespada/forthespada.github.io@master/plugin/click_heart.js\"\n    }\n  ]\n```\n3.首页添加向下滑动按钮 在主页的README.md文件最下面添加下列代码（此方法转载自https://blog.csdn.net/qq_41327483/article/details/119103300。）\n```html\n<style>\n.anchor-down {\n  display: block;\n  margin: 12rem auto 0;\n  bottom: 45px;\n  width: 20px;\n  height: 20px;\n  font-size: 34px;\n  text-align: center;\n  animation: bounce-in 5s 3s infinite;\n  position: absolute;\n  left: 50%;\n  bottom: 30%;\n  margin-left: -10px;\n  cursor: pointer;\n}\n@-webkit-keyframes bounce-in{\n  0%{transform:translateY(0)}\n  20%{transform:translateY(0)}\n  50%{transform:translateY(-20px)}\n  80%{transform:translateY(0)}\n  to{transform:translateY(0)}\n}\n.anchor-down::before {\n  content: \"\";\n  width: 20px;\n  height: 20px;\n  display: block;\n  border-right: 3px solid #fff;\n  border-top: 3px solid #fff;\n  transform: rotate(135deg);\n  position: absolute;\n  bottom: 10px;\n}\n.anchor-down::after {\n  content: \"\";\n  width: 20px;\n  height: 20px;\n  display: block;\n  border-right: 3px solid #fff;\n  border-top: 3px solid #fff;\n  transform: rotate(135deg);\n}\n</style>\n\n<script>\nexport default {\n  mounted () {\n    const ifJanchor = document.getElementById(\"JanchorDown\"); \n    ifJanchor && ifJanchor.parentNode.removeChild(ifJanchor);\n    let a = document.createElement('a');\n    a.id = 'JanchorDown';\n    a.className = 'anchor-down';\n    document.getElementsByClassName('hero')[0].append(a);\n    let targetA = document.getElementById(\"JanchorDown\");\n    targetA.addEventListener('click', e => { // 添加点击事件\n      this.scrollFn();\n    })\n  },\n\n  methods: {\n    scrollFn() {\n      const windowH = document.getElementsByClassName('hero')[0].clientHeight; // 获取窗口高度\n      document.documentElement.scrollTop = windowH; // 滚动条滚动到指定位置\n    }\n  }\n}\n</script>\n```\n4.首页气泡\n- 添加依赖\n```sh\nnpm install vue-canvas-effect -D\n```\n- 修改theme/vuepress-theme-reco/components/HomeBlog/index.vue\n```html\n<!-- 首页气泡 (在27行添加如下代码)-->\n  <component v-if=\"bubbles\"\n             :is=\"bubbles\"\n             :options=\"options\">\n  </component>\n```\n- 添加data\n```javascript\n//首页气泡\n    data() {\n        return {\n            recoShow: false,\n            currentPage: 1,\n            tags: [],\n            bubbles: null\n        }\n    },\n```\n- 添加mounted\n```javascript\n mounted() {\n        import('vue-canvas-effect/src/components/bubbles').then(module => {\n            this.bubbles = module.default\n        })\n        this.recoShow = true\n        this._setPage(this._getStoragePage())\n    },\n```\n5.修改置顶的样式\n- 修改./vuepress/theme/vuepress-theme-reco/NoteAbstractItem.vue\n```html\n<span v-if=\"item.frontmatter.sticky\"\n              class=\"settop\">置顶\n</span>\n<div class=\"title\">\n    <reco-icon v-if=\"item.frontmatter.keys\"\n                       icon=\"reco-lock\" />\n    <router-link :to=\"item.path\">{{item.title}}</router-link>\n</div>\n```\n- 添加css样式\n```css\n.settop {\n        position: absolute;\n        right: 0;\n        top: 0;\n        background: $accentColor;\n        font-size: 0.6rem;\n        color: #fff;\n        transform: rotateZ(45deg) translateY(-55px);\n        padding: 50px 25px 3px;\n    }\n```\n6.修改文章列表title的鼠标hover样式\n- 修改./vuepress/theme/vuepress-theme-reco/NoteAbstractItem.vue\n```html\n<!-- 添加class name 为 hover-underline-animation-->\n<div class=\"title hover-underline-animation\">\n            <reco-icon v-if=\"item.frontmatter.keys\"\n                       icon=\"reco-lock\" />\n            <router-link :to=\"item.path\">{{item.title}}</router-link>\n</div>\n```\n- 添加css样式\n```css\n.hover-underline-animation {\n    display: inline-block;\n    position: relative;\n    color: $accentColor;\n}\n\n.hover-underline-animation:after {\n    content: '';\n    position: absolute;\n    width: 100%;\n    transform: scaleX(0);\n    height: 2px;\n    bottom: 0;\n    left: 0;\n    background-color: $accentColor;\n    transform-origin: bottom right;\n    transition: transform 0.25s ease-out;\n}\n\n.hover-underline-animation:hover:after {\n    transform: scaleX(1);\n    transform-origin: bottom left;\n}\n```\n7.首页添加每日诗词\n:::tip\n今日诗词 API 是一个可以返回一句古诗词名句的接口。它可以通过图片和 JSON 格式调用。今日诗词 API 根据不同地点、时间、节日、季节、天气、景观、城市进行智能推荐。\n:::\n- 官方文档地址\nhttps://www.jinrishici.com/doc/\n- 修改.vuepress/theme/vuepress-theme-reco/components/HomeBlog/index.vue文件\n```html\n <ModuleTransition delay=\"0.08\">\n                    <p v-if=\"recoShowModule && $frontmatter.tagline !== null\"\n                       class=\"description\">\n                        {{ $frontmatter.tagline || $description || 'Welcome to your vuePress-theme-reco site' }}\n                    </p>\n</ModuleTransition>\n<!-- 加入如下代码即可 -->\n<ModuleTransition delay=\"0.12\">\n        <!-- marquee文字滚动标签\n        marquee 参数：\n                    BGColor：滚动文本框的背景颜色。\n                    direction：滚动方向设置.\n                        left - 从右向左。默认值。\n                        right - 从左向右。\n                        up - 向上。\n                        down - 向下\n                    scrolldelay： 设置每次滚动时的时间间隔（以毫秒为单位）。默认值为 85。 值越大，滚动速度越慢，通常不设置。\n                          注意：除非指定 truespeed 值，否则将忽略任何小于 60 的值，并改为使用 60。\n                    scrollamount：一次滚动总的时间量，数字越小滚动越慢。\n                    behaviour：滚动的方式设置，三种取值：Scroll（循环滚动） lide（单次滚动）、Alternate（来回滚动）。\n                    align：文字的对齐方式设置。可选择Middle(居中)、Bottom(居下)还是Top(居上)。\n                    width：滚动文本框的宽度，输入一个数值后从后面的单选框选择in Pixels(按像素)或是in Percent(按百分比)。\n                    height：滚动文本框的高度，输入一个数值后从后面的单选框选择in Pixels(按像素)或是in Percent(按百分比)。\n                    loop：滚动次数。默认值-1，无限次循环\n                    hspace、vspace：前后、上下的空行。\n                    onMouseOver='this.stop()' 鼠标放上去则暂停\n                    onMouseOut='this.start()' 鼠标移开继续滚动\n        -->\n        <marquee behavior=\"alternate\" loop=\"2\" direction=\"right\" scrollamount=\"10\">\n                <img alt=\"今日诗词\"\n                    src=\"https://v2.jinrishici.com/one.svg\"\n                    style=\"max-width:100%; display: block; margin: 0 auto;\" />\n        </marquee>\n</ModuleTransition>\n```\n方式二:\n- 安装\n```sh\nnpm -i jinrishici --save\n```\n- 使用\n修改.vuepress/theme/vuepress-theme-reco/components/HomeBlog/index.vue文件\n```html\n<!-- html部分 -->\n<ModuleTransition delay=\"0.08\">\n                    <p v-if=\"recoShowModule && $frontmatter.tagline !== null\"\n                       class=\"description\">\n                        {{ $frontmatter.tagline || $description || 'Welcome to your vuePress-theme-reco site' }}\n                    </p>\n                </ModuleTransition>\n                <ModuleTransition delay=\"0.12\">\n                    <!-- <span class=\"jinrishici-sentence\">正在加载今日诗词....</span> -->\n                    <marquee >\n                        <span>{{word}}</span>\n                    </marquee>\n</ModuleTransition>\n<!-- javascript部分 -->\n data() {\n        return {\n            word: '正在加载今日诗词....',\n        }\n    },\n    methods: {\n        paginationChange(page) {\n            setTimeout(() => {\n                window.scrollTo(0, this.heroHeight)\n            }, 100)\n        },\n        getPagesByTags(tagInfo) {\n            this.$router.push({ path: tagInfo.path })\n        },\n        loadSentence: function () {\n            jinrishici.load(result => {\n                this.word = result.data.content\n            }, err => {\n                console.log(\"test\");\n            })\n        }\n    },\n    mounted: function () { this.loadSentence() }\n```\n8.修改主页背景为随机图片\n修改.vuepress/theme/vuepress-theme-reco/components/HomeBlog/index.vue\n```javascript\nconst url = instance.$frontmatter.bgImage\n            ? instance.$withBase(instance.$frontmatter.bgImage)\n            : require('../../images/bg.jpg')\n// 将上面代码修改为以下形式\nconst url = instance.$frontmatter.bgImage\n            ? instance.$withBase(instance.$frontmatter.bgImage)\n            : 'https://picsum.photos/1600/900'\n```\n:::warning\n若使用随机背景图片，README.md文件中bgImageStyle配置如下即可\n```css\nbgImageStyle: {\n  height: '95vh',\n}\n```\n:::\n9.使用v-view插件对图片进行放大缩小\n- 安装\n```sh\nnpm install v-viewer --save\n```\n- 使用\n修改.vuepress/theme/vuepress-theme-reco/enhanceApp.js如下所示\n```javascript\n/* eslint-disable no-proto */\nimport postMixin from '@theme/mixins/posts'\nimport localMixin from '@theme/mixins/locales'\nimport Vue from 'vue';\nimport Viewer from 'v-viewer'\nimport 'viewerjs/dist/viewer.css'\nimport { interceptRouterError, fixRouterError404 } from '@theme/helpers/other'\nimport { install } from 'vue-demi'\n\nexport default ({\n  Vue,\n  siteData,\n  isServer,\n  router\n}) => {\n  install(Vue)\n  Vue.mixin(postMixin)\n  Vue.mixin(localMixin)\n  // if (!isServer) {\n  //   addScriptToHead('//kit.fontawesome.com/51b01de608.js')\n  //   registerCodeThemeCss(siteData.themeConfig.codeTheme)\n  // }\n  Vue.use(Viewer)\n  Viewer.setDefaults({\n    Options: { 'inline': true, 'button': true, 'navbar': true, 'title': true, 'toolbar': true, 'tooltip': true, 'movable': true, 'zoomable': true, 'rotatable': true, 'scalable': true, 'transition': true, 'fullscreen': true, 'keyboard': true, 'url': 'data-source' }\n  })\n\n  interceptRouterError(router)\n  fixRouterError404(router)\n}\n```\n修改.vuepress/theme/vuepress-theme-reco/components/Page.vue如下\n```html\n<!-- session添加v-viewer指令 -->\n<section v-show=\"recoShowModule\"\n                     v-viewer>\n                <div class=\"page-title\">\n                    <h1 class=\"title\">{{$page.title}}</h1>\n                    <PageInfo :pageInfo=\"$page\"\n                              :showAccessNumber=\"showAccessNumber\"></PageInfo>\n                </div>\n                <Content class=\"theme-reco-content\" />\n</section>\n```\n:::warning\n这里需要关闭vuepress内置的@vuepress/plugin-medium-zoom\n```javascript\n// 只需将 Options 设置成 false 便可禁用该插件\nmodule.exports = {\n  plugins: [\n    [\"@vuepress/plugin-medium-zoom\", false] // disabled.\n  ]\n};\n```\n更新:\n由于本人是将vuepress-theme-reco主题下载到本地进行修改，所以以上方式并不能关闭vuepress/plugin-medium-zoom插件\n解决方式:修改.vuepress/theme/vuepress-theme-reco/index.js如下\n```\n plugins: [\n    '@vuepress-reco/back-to-top',\n    '@vuepress-reco/loading-page',\n    '@vuepress-reco/pagation',\n    '@vuepress-reco/comments',\n    '@vuepress/active-header-links',\n    // ['@vuepress/medium-zoom', {\n    //   selector: '.theme-reco-content :not(a) > img'\n    // }],\n```\n只需要将vuepress/medium-zoom插件注释或者删除即可\n:::\n\n## 插件不生效\n在config.js中配置的插件未生效，于是本人根据vuepress加载流程,将插件配置放入了vuepress-theme-reco的index.js中，此时插件生效。\n\n## 部署\n- nginx配置文件\n```\nuser  nginx;\nworker_processes  1;\n\nerror_log  /var/log/nginx/error.log warn;\npid        /var/run/nginx.pid;\n\n\nevents {\n    worker_connections  1024;\n}\n\n\nhttp {\n\t#开启gzip压缩加速\n \tgzip on; \n \t#低于1kb的资源不压缩\n  \tgzip_min_length 1k; \n  \t #压缩级别【1-9】，越大压缩率越高，同时消耗cpu资源也越多，建议设置在4左右。\n  \tgzip_comp_level 4;\n  \t#需要压缩哪些响应类型的资源，多个空格隔开。不建议压缩图片\n  \tgzip_types text/plain application/javascript application/x-javascript text/javascript text/xml text/css application/json;  \n  \t #配置禁用gzip条件，支持正则。此处表示ie6及以下不启用gzip（因为ie低版本不支持）\n  \tgzip_disable \"MSIE [1-6]\\.\"; \n  \t#是否添加“Vary: Accept-Encoding”响应头\n  \tgzip_vary on;  \n\n    include       /etc/nginx/mime.types;\n    default_type  application/octet-stream;\n\n    log_format  main  '$remote_addr - $remote_user [$time_local] \"$request\" '\n                      '$status $body_bytes_sent \"$http_referer\" '\n                      '\"$http_user_agent\" \"$http_x_forwarded_for\"';\n\n    access_log  /var/log/nginx/access.log  main;\n\n    sendfile        on;\n    #tcp_nopush     on;\n\n    keepalive_timeout  65;\n\tserver {\n\t\tlisten  80;\n\t\tserver_name blog;\n \n\t\tlocation /blog_nation {\n\t\t\troot /usr/share/nginx/html/blog_nation/;\n\t\t\tindex  index.html index.htm;\n\t\t}\n\t\terror_page 500 502 503 504 /50x.html;\n\t\tlocation = /50x.html {\n\t\t\troot /usr/share/nginx/html;\n\t\t}\n\t}\n}\n```\n那如何寻找没有添加的 type 呢？我们打开 Chrome 的「开发者工具」，打开自己的网站，对于「Network」中请求自己网站的包，看是否启动 Gzip，如果「Response Headers」显示「Accept-Ranges: bytes」则表示该包没有开启加速，可以将「Content-Type」后面的值填入「gzip_types」并且使用空格隔开。\n\n\n","source":"_posts/vuepress搭建个人博客教程.md","raw":"---\ntitle: vuepress搭建个人博客教程\nexcerpt: VuePress 由两部分组成：第一部分是一个极简静态网站生成器 (opens new window)，它包含由 Vue 驱动的主题系统和插件 API，另一个部分是为书写技术文档而优化的默认主题，它的诞生初衷是为了支持 Vue 及其子项目的文档需求。\ntags:\n  - 博客\n  - vuepress\ncategories:\n  - 教程\nindex_img: https://img1.baidu.com/it/u=2891324737,2702977437&fm=253&fmt=auto&app=138&f=JPEG?w=1000&h=500\nabbrlink: 26960e5d\ndate: 2022-02-01\n---\n\n\n\n\n<!-- more -->\n\n## 安装\n```sh\nnpm install vuepress-theme-reco --save-dev\n\n# or\n\nyarn add vuepress-theme-reco\n```\n## 引用\n```sh\n// .vuepress/config.js\n\nmodule.exports = {\n  theme: 'reco'\n} \n```\n## 本地引用\n- 下载\n在https://github.com/vuepress-reco/vuepress-theme-reco仓库中下载全部文件\n- 使用\n在.vuepress文件夹下新建theme文件夹，再将packages文件夹下的vuepress-theme-reco文件夹放入theme;\n修改.vuepress文件夹下config.js\n```\n\"theme\": require.resolve(\"./theme/vuepress-theme-reco\"),\n```\n\n## Front Matter\n```sh\n---\ntitle: 烤鸭的做法\ndate: '2019-08-08 08:00:00'\nsidebar: 'auto'\ncategories:\n - 烹饪\n - 爱好\ntags:\n - 烤\n - 鸭子\nkeys:\n - '123456'\npublish: false\n---\n```\n:::tip\nFront Matter配置\n\ntitle: 文章标题 date: 时间，如('2019-08-08 08:00:00') sidebar: 'auto' categories:文章分类，可以有多个\n\ntags:文章标签,可以有多个\n\nkeys：文章加密密码\n\nsticky :是否置顶，sort type: 降序，可以按照 1, 2, 3, ... 来降低置顶文章的排列优先级\n\npublic:是否发布\n:::\n## 优化页面\n1.首页背景全屏显示 修改首页的README.md文件\n```css\nbgImageStyle: {\n  height: '95vh',\n  background-color: '#D9AFD9',\n  background-image: 'linear-gradient(0deg, #D9AFD9 0%, #97D9E1 100%)'\n}\n```\n2.添加鼠标点击特效 修改.vuepress/config.js中的head，如下所示:\n```javascript\n[\n    \"script\",\n    {\n      \"src\": \"https://cdn.jsdelivr.net/gh/forthespada/forthespada.github.io@master/plugin/click_heart.js\"\n    }\n  ]\n```\n3.首页添加向下滑动按钮 在主页的README.md文件最下面添加下列代码（此方法转载自https://blog.csdn.net/qq_41327483/article/details/119103300。）\n```html\n<style>\n.anchor-down {\n  display: block;\n  margin: 12rem auto 0;\n  bottom: 45px;\n  width: 20px;\n  height: 20px;\n  font-size: 34px;\n  text-align: center;\n  animation: bounce-in 5s 3s infinite;\n  position: absolute;\n  left: 50%;\n  bottom: 30%;\n  margin-left: -10px;\n  cursor: pointer;\n}\n@-webkit-keyframes bounce-in{\n  0%{transform:translateY(0)}\n  20%{transform:translateY(0)}\n  50%{transform:translateY(-20px)}\n  80%{transform:translateY(0)}\n  to{transform:translateY(0)}\n}\n.anchor-down::before {\n  content: \"\";\n  width: 20px;\n  height: 20px;\n  display: block;\n  border-right: 3px solid #fff;\n  border-top: 3px solid #fff;\n  transform: rotate(135deg);\n  position: absolute;\n  bottom: 10px;\n}\n.anchor-down::after {\n  content: \"\";\n  width: 20px;\n  height: 20px;\n  display: block;\n  border-right: 3px solid #fff;\n  border-top: 3px solid #fff;\n  transform: rotate(135deg);\n}\n</style>\n\n<script>\nexport default {\n  mounted () {\n    const ifJanchor = document.getElementById(\"JanchorDown\"); \n    ifJanchor && ifJanchor.parentNode.removeChild(ifJanchor);\n    let a = document.createElement('a');\n    a.id = 'JanchorDown';\n    a.className = 'anchor-down';\n    document.getElementsByClassName('hero')[0].append(a);\n    let targetA = document.getElementById(\"JanchorDown\");\n    targetA.addEventListener('click', e => { // 添加点击事件\n      this.scrollFn();\n    })\n  },\n\n  methods: {\n    scrollFn() {\n      const windowH = document.getElementsByClassName('hero')[0].clientHeight; // 获取窗口高度\n      document.documentElement.scrollTop = windowH; // 滚动条滚动到指定位置\n    }\n  }\n}\n</script>\n```\n4.首页气泡\n- 添加依赖\n```sh\nnpm install vue-canvas-effect -D\n```\n- 修改theme/vuepress-theme-reco/components/HomeBlog/index.vue\n```html\n<!-- 首页气泡 (在27行添加如下代码)-->\n  <component v-if=\"bubbles\"\n             :is=\"bubbles\"\n             :options=\"options\">\n  </component>\n```\n- 添加data\n```javascript\n//首页气泡\n    data() {\n        return {\n            recoShow: false,\n            currentPage: 1,\n            tags: [],\n            bubbles: null\n        }\n    },\n```\n- 添加mounted\n```javascript\n mounted() {\n        import('vue-canvas-effect/src/components/bubbles').then(module => {\n            this.bubbles = module.default\n        })\n        this.recoShow = true\n        this._setPage(this._getStoragePage())\n    },\n```\n5.修改置顶的样式\n- 修改./vuepress/theme/vuepress-theme-reco/NoteAbstractItem.vue\n```html\n<span v-if=\"item.frontmatter.sticky\"\n              class=\"settop\">置顶\n</span>\n<div class=\"title\">\n    <reco-icon v-if=\"item.frontmatter.keys\"\n                       icon=\"reco-lock\" />\n    <router-link :to=\"item.path\">{{item.title}}</router-link>\n</div>\n```\n- 添加css样式\n```css\n.settop {\n        position: absolute;\n        right: 0;\n        top: 0;\n        background: $accentColor;\n        font-size: 0.6rem;\n        color: #fff;\n        transform: rotateZ(45deg) translateY(-55px);\n        padding: 50px 25px 3px;\n    }\n```\n6.修改文章列表title的鼠标hover样式\n- 修改./vuepress/theme/vuepress-theme-reco/NoteAbstractItem.vue\n```html\n<!-- 添加class name 为 hover-underline-animation-->\n<div class=\"title hover-underline-animation\">\n            <reco-icon v-if=\"item.frontmatter.keys\"\n                       icon=\"reco-lock\" />\n            <router-link :to=\"item.path\">{{item.title}}</router-link>\n</div>\n```\n- 添加css样式\n```css\n.hover-underline-animation {\n    display: inline-block;\n    position: relative;\n    color: $accentColor;\n}\n\n.hover-underline-animation:after {\n    content: '';\n    position: absolute;\n    width: 100%;\n    transform: scaleX(0);\n    height: 2px;\n    bottom: 0;\n    left: 0;\n    background-color: $accentColor;\n    transform-origin: bottom right;\n    transition: transform 0.25s ease-out;\n}\n\n.hover-underline-animation:hover:after {\n    transform: scaleX(1);\n    transform-origin: bottom left;\n}\n```\n7.首页添加每日诗词\n:::tip\n今日诗词 API 是一个可以返回一句古诗词名句的接口。它可以通过图片和 JSON 格式调用。今日诗词 API 根据不同地点、时间、节日、季节、天气、景观、城市进行智能推荐。\n:::\n- 官方文档地址\nhttps://www.jinrishici.com/doc/\n- 修改.vuepress/theme/vuepress-theme-reco/components/HomeBlog/index.vue文件\n```html\n <ModuleTransition delay=\"0.08\">\n                    <p v-if=\"recoShowModule && $frontmatter.tagline !== null\"\n                       class=\"description\">\n                        {{ $frontmatter.tagline || $description || 'Welcome to your vuePress-theme-reco site' }}\n                    </p>\n</ModuleTransition>\n<!-- 加入如下代码即可 -->\n<ModuleTransition delay=\"0.12\">\n        <!-- marquee文字滚动标签\n        marquee 参数：\n                    BGColor：滚动文本框的背景颜色。\n                    direction：滚动方向设置.\n                        left - 从右向左。默认值。\n                        right - 从左向右。\n                        up - 向上。\n                        down - 向下\n                    scrolldelay： 设置每次滚动时的时间间隔（以毫秒为单位）。默认值为 85。 值越大，滚动速度越慢，通常不设置。\n                          注意：除非指定 truespeed 值，否则将忽略任何小于 60 的值，并改为使用 60。\n                    scrollamount：一次滚动总的时间量，数字越小滚动越慢。\n                    behaviour：滚动的方式设置，三种取值：Scroll（循环滚动） lide（单次滚动）、Alternate（来回滚动）。\n                    align：文字的对齐方式设置。可选择Middle(居中)、Bottom(居下)还是Top(居上)。\n                    width：滚动文本框的宽度，输入一个数值后从后面的单选框选择in Pixels(按像素)或是in Percent(按百分比)。\n                    height：滚动文本框的高度，输入一个数值后从后面的单选框选择in Pixels(按像素)或是in Percent(按百分比)。\n                    loop：滚动次数。默认值-1，无限次循环\n                    hspace、vspace：前后、上下的空行。\n                    onMouseOver='this.stop()' 鼠标放上去则暂停\n                    onMouseOut='this.start()' 鼠标移开继续滚动\n        -->\n        <marquee behavior=\"alternate\" loop=\"2\" direction=\"right\" scrollamount=\"10\">\n                <img alt=\"今日诗词\"\n                    src=\"https://v2.jinrishici.com/one.svg\"\n                    style=\"max-width:100%; display: block; margin: 0 auto;\" />\n        </marquee>\n</ModuleTransition>\n```\n方式二:\n- 安装\n```sh\nnpm -i jinrishici --save\n```\n- 使用\n修改.vuepress/theme/vuepress-theme-reco/components/HomeBlog/index.vue文件\n```html\n<!-- html部分 -->\n<ModuleTransition delay=\"0.08\">\n                    <p v-if=\"recoShowModule && $frontmatter.tagline !== null\"\n                       class=\"description\">\n                        {{ $frontmatter.tagline || $description || 'Welcome to your vuePress-theme-reco site' }}\n                    </p>\n                </ModuleTransition>\n                <ModuleTransition delay=\"0.12\">\n                    <!-- <span class=\"jinrishici-sentence\">正在加载今日诗词....</span> -->\n                    <marquee >\n                        <span>{{word}}</span>\n                    </marquee>\n</ModuleTransition>\n<!-- javascript部分 -->\n data() {\n        return {\n            word: '正在加载今日诗词....',\n        }\n    },\n    methods: {\n        paginationChange(page) {\n            setTimeout(() => {\n                window.scrollTo(0, this.heroHeight)\n            }, 100)\n        },\n        getPagesByTags(tagInfo) {\n            this.$router.push({ path: tagInfo.path })\n        },\n        loadSentence: function () {\n            jinrishici.load(result => {\n                this.word = result.data.content\n            }, err => {\n                console.log(\"test\");\n            })\n        }\n    },\n    mounted: function () { this.loadSentence() }\n```\n8.修改主页背景为随机图片\n修改.vuepress/theme/vuepress-theme-reco/components/HomeBlog/index.vue\n```javascript\nconst url = instance.$frontmatter.bgImage\n            ? instance.$withBase(instance.$frontmatter.bgImage)\n            : require('../../images/bg.jpg')\n// 将上面代码修改为以下形式\nconst url = instance.$frontmatter.bgImage\n            ? instance.$withBase(instance.$frontmatter.bgImage)\n            : 'https://picsum.photos/1600/900'\n```\n:::warning\n若使用随机背景图片，README.md文件中bgImageStyle配置如下即可\n```css\nbgImageStyle: {\n  height: '95vh',\n}\n```\n:::\n9.使用v-view插件对图片进行放大缩小\n- 安装\n```sh\nnpm install v-viewer --save\n```\n- 使用\n修改.vuepress/theme/vuepress-theme-reco/enhanceApp.js如下所示\n```javascript\n/* eslint-disable no-proto */\nimport postMixin from '@theme/mixins/posts'\nimport localMixin from '@theme/mixins/locales'\nimport Vue from 'vue';\nimport Viewer from 'v-viewer'\nimport 'viewerjs/dist/viewer.css'\nimport { interceptRouterError, fixRouterError404 } from '@theme/helpers/other'\nimport { install } from 'vue-demi'\n\nexport default ({\n  Vue,\n  siteData,\n  isServer,\n  router\n}) => {\n  install(Vue)\n  Vue.mixin(postMixin)\n  Vue.mixin(localMixin)\n  // if (!isServer) {\n  //   addScriptToHead('//kit.fontawesome.com/51b01de608.js')\n  //   registerCodeThemeCss(siteData.themeConfig.codeTheme)\n  // }\n  Vue.use(Viewer)\n  Viewer.setDefaults({\n    Options: { 'inline': true, 'button': true, 'navbar': true, 'title': true, 'toolbar': true, 'tooltip': true, 'movable': true, 'zoomable': true, 'rotatable': true, 'scalable': true, 'transition': true, 'fullscreen': true, 'keyboard': true, 'url': 'data-source' }\n  })\n\n  interceptRouterError(router)\n  fixRouterError404(router)\n}\n```\n修改.vuepress/theme/vuepress-theme-reco/components/Page.vue如下\n```html\n<!-- session添加v-viewer指令 -->\n<section v-show=\"recoShowModule\"\n                     v-viewer>\n                <div class=\"page-title\">\n                    <h1 class=\"title\">{{$page.title}}</h1>\n                    <PageInfo :pageInfo=\"$page\"\n                              :showAccessNumber=\"showAccessNumber\"></PageInfo>\n                </div>\n                <Content class=\"theme-reco-content\" />\n</section>\n```\n:::warning\n这里需要关闭vuepress内置的@vuepress/plugin-medium-zoom\n```javascript\n// 只需将 Options 设置成 false 便可禁用该插件\nmodule.exports = {\n  plugins: [\n    [\"@vuepress/plugin-medium-zoom\", false] // disabled.\n  ]\n};\n```\n更新:\n由于本人是将vuepress-theme-reco主题下载到本地进行修改，所以以上方式并不能关闭vuepress/plugin-medium-zoom插件\n解决方式:修改.vuepress/theme/vuepress-theme-reco/index.js如下\n```\n plugins: [\n    '@vuepress-reco/back-to-top',\n    '@vuepress-reco/loading-page',\n    '@vuepress-reco/pagation',\n    '@vuepress-reco/comments',\n    '@vuepress/active-header-links',\n    // ['@vuepress/medium-zoom', {\n    //   selector: '.theme-reco-content :not(a) > img'\n    // }],\n```\n只需要将vuepress/medium-zoom插件注释或者删除即可\n:::\n\n## 插件不生效\n在config.js中配置的插件未生效，于是本人根据vuepress加载流程,将插件配置放入了vuepress-theme-reco的index.js中，此时插件生效。\n\n## 部署\n- nginx配置文件\n```\nuser  nginx;\nworker_processes  1;\n\nerror_log  /var/log/nginx/error.log warn;\npid        /var/run/nginx.pid;\n\n\nevents {\n    worker_connections  1024;\n}\n\n\nhttp {\n\t#开启gzip压缩加速\n \tgzip on; \n \t#低于1kb的资源不压缩\n  \tgzip_min_length 1k; \n  \t #压缩级别【1-9】，越大压缩率越高，同时消耗cpu资源也越多，建议设置在4左右。\n  \tgzip_comp_level 4;\n  \t#需要压缩哪些响应类型的资源，多个空格隔开。不建议压缩图片\n  \tgzip_types text/plain application/javascript application/x-javascript text/javascript text/xml text/css application/json;  \n  \t #配置禁用gzip条件，支持正则。此处表示ie6及以下不启用gzip（因为ie低版本不支持）\n  \tgzip_disable \"MSIE [1-6]\\.\"; \n  \t#是否添加“Vary: Accept-Encoding”响应头\n  \tgzip_vary on;  \n\n    include       /etc/nginx/mime.types;\n    default_type  application/octet-stream;\n\n    log_format  main  '$remote_addr - $remote_user [$time_local] \"$request\" '\n                      '$status $body_bytes_sent \"$http_referer\" '\n                      '\"$http_user_agent\" \"$http_x_forwarded_for\"';\n\n    access_log  /var/log/nginx/access.log  main;\n\n    sendfile        on;\n    #tcp_nopush     on;\n\n    keepalive_timeout  65;\n\tserver {\n\t\tlisten  80;\n\t\tserver_name blog;\n \n\t\tlocation /blog_nation {\n\t\t\troot /usr/share/nginx/html/blog_nation/;\n\t\t\tindex  index.html index.htm;\n\t\t}\n\t\terror_page 500 502 503 504 /50x.html;\n\t\tlocation = /50x.html {\n\t\t\troot /usr/share/nginx/html;\n\t\t}\n\t}\n}\n```\n那如何寻找没有添加的 type 呢？我们打开 Chrome 的「开发者工具」，打开自己的网站，对于「Network」中请求自己网站的包，看是否启动 Gzip，如果「Response Headers」显示「Accept-Ranges: bytes」则表示该包没有开启加速，可以将「Content-Type」后面的值填入「gzip_types」并且使用空格隔开。\n\n\n","slug":"vuepress搭建个人博客教程","published":1,"updated":"2023-02-03T13:07:42.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clhrpaia7000beq6qahjm434s","content":"<!-- more -->\n\n<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><div class=\"code-wrapper\"><pre><code class=\"hljs sh\">npm install vuepress-theme-reco --save-dev\n\n<span class=\"hljs-comment\"># or</span>\n\nyarn add vuepress-theme-reco</code></pre></div>\n<h2 id=\"引用\"><a href=\"#引用\" class=\"headerlink\" title=\"引用\"></a>引用</h2><div class=\"code-wrapper\"><pre><code class=\"hljs sh\">// .vuepress/config.js\n\nmodule.exports = &#123;\n  theme: <span class=\"hljs-string\">&#x27;reco&#x27;</span>\n&#125;</code></pre></div>\n<h2 id=\"本地引用\"><a href=\"#本地引用\" class=\"headerlink\" title=\"本地引用\"></a>本地引用</h2><ul>\n<li>下载<br>在<a href=\"https://github.com/vuepress-reco/vuepress-theme-reco%E4%BB%93%E5%BA%93%E4%B8%AD%E4%B8%8B%E8%BD%BD%E5%85%A8%E9%83%A8%E6%96%87%E4%BB%B6\">https://github.com/vuepress-reco/vuepress-theme-reco仓库中下载全部文件</a></li>\n<li>使用<br>在.vuepress文件夹下新建theme文件夹，再将packages文件夹下的vuepress-theme-reco文件夹放入theme;<br>修改.vuepress文件夹下config.js<div class=\"code-wrapper\"><pre><code class=\"hljs livecodeserver\"><span class=\"hljs-string\">&quot;theme&quot;</span>: <span class=\"hljs-built_in\">require</span>.<span class=\"hljs-built_in\">resolve</span>(<span class=\"hljs-string\">&quot;./theme/vuepress-theme-reco&quot;</span>),</code></pre></div></li>\n</ul>\n<h2 id=\"Front-Matter\"><a href=\"#Front-Matter\" class=\"headerlink\" title=\"Front Matter\"></a>Front Matter</h2><div class=\"code-wrapper\"><pre><code class=\"hljs sh\">---\ntitle: 烤鸭的做法\n<span class=\"hljs-built_in\">date</span>: <span class=\"hljs-string\">&#x27;2019-08-08 08:00:00&#x27;</span>\nsidebar: <span class=\"hljs-string\">&#x27;auto&#x27;</span>\ncategories:\n - 烹饪\n - 爱好\ntags:\n - 烤\n - 鸭子\nkeys:\n - <span class=\"hljs-string\">&#x27;123456&#x27;</span>\npublish: <span class=\"hljs-literal\">false</span>\n---</code></pre></div>\n<p>:::tip<br>Front Matter配置</p>\n<p>title: 文章标题 date: 时间，如(‘2019-08-08 08:00:00’) sidebar: ‘auto’ categories:文章分类，可以有多个</p>\n<p>tags:文章标签,可以有多个</p>\n<p>keys：文章加密密码</p>\n<p>sticky :是否置顶，sort type: 降序，可以按照 1, 2, 3, … 来降低置顶文章的排列优先级</p>\n<p>public:是否发布<br>:::</p>\n<h2 id=\"优化页面\"><a href=\"#优化页面\" class=\"headerlink\" title=\"优化页面\"></a>优化页面</h2><p>1.首页背景全屏显示 修改首页的README.md文件</p>\n<div class=\"code-wrapper\"><pre><code class=\"hljs css\">bgImageStyle: &#123;\n  <span class=\"hljs-attribute\">height</span>: <span class=\"hljs-string\">&#x27;95vh&#x27;</span>,\n  background-color: <span class=\"hljs-string\">&#x27;#D9AFD9&#x27;</span>,\n  background-image: <span class=\"hljs-string\">&#x27;linear-gradient(0deg, #D9AFD9 0%, #97D9E1 100%)&#x27;</span>\n&#125;</code></pre></div>\n<p>2.添加鼠标点击特效 修改.vuepress/config.js中的head，如下所示:</p>\n<div class=\"code-wrapper\"><pre><code class=\"hljs javascript\">[\n    <span class=\"hljs-string\">&quot;script&quot;</span>,\n    &#123;\n      <span class=\"hljs-string\">&quot;src&quot;</span>: <span class=\"hljs-string\">&quot;https://cdn.jsdelivr.net/gh/forthespada/forthespada.github.io@master/plugin/click_heart.js&quot;</span>\n    &#125;\n  ]</code></pre></div>\n<p>3.首页添加向下滑动按钮 在主页的README.md文件最下面添加下列代码（此方法转载自<a href=\"https://blog.csdn.net/qq_41327483/article/details/119103300%E3%80%82%EF%BC%89\">https://blog.csdn.net/qq_41327483/article/details/119103300。）</a></p>\n<div class=\"code-wrapper\"><pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">style</span>&gt;</span><span class=\"language-css\"></span>\n<span class=\"language-css\"><span class=\"hljs-selector-class\">.anchor-down</span> &#123;</span>\n<span class=\"language-css\">  <span class=\"hljs-attribute\">display</span>: block;</span>\n<span class=\"language-css\">  <span class=\"hljs-attribute\">margin</span>: <span class=\"hljs-number\">12rem</span> auto <span class=\"hljs-number\">0</span>;</span>\n<span class=\"language-css\">  <span class=\"hljs-attribute\">bottom</span>: <span class=\"hljs-number\">45px</span>;</span>\n<span class=\"language-css\">  <span class=\"hljs-attribute\">width</span>: <span class=\"hljs-number\">20px</span>;</span>\n<span class=\"language-css\">  <span class=\"hljs-attribute\">height</span>: <span class=\"hljs-number\">20px</span>;</span>\n<span class=\"language-css\">  <span class=\"hljs-attribute\">font-size</span>: <span class=\"hljs-number\">34px</span>;</span>\n<span class=\"language-css\">  <span class=\"hljs-attribute\">text-align</span>: center;</span>\n<span class=\"language-css\">  <span class=\"hljs-attribute\">animation</span>: bounce-in <span class=\"hljs-number\">5s</span> <span class=\"hljs-number\">3s</span> infinite;</span>\n<span class=\"language-css\">  <span class=\"hljs-attribute\">position</span>: absolute;</span>\n<span class=\"language-css\">  <span class=\"hljs-attribute\">left</span>: <span class=\"hljs-number\">50%</span>;</span>\n<span class=\"language-css\">  <span class=\"hljs-attribute\">bottom</span>: <span class=\"hljs-number\">30%</span>;</span>\n<span class=\"language-css\">  <span class=\"hljs-attribute\">margin-left</span>: -<span class=\"hljs-number\">10px</span>;</span>\n<span class=\"language-css\">  <span class=\"hljs-attribute\">cursor</span>: pointer;</span>\n<span class=\"language-css\">&#125;</span>\n<span class=\"language-css\"><span class=\"hljs-keyword\">@-webkit-keyframes</span> bounce-in&#123;</span>\n<span class=\"language-css\">  <span class=\"hljs-number\">0%</span>&#123;<span class=\"hljs-attribute\">transform</span>:<span class=\"hljs-built_in\">translateY</span>(<span class=\"hljs-number\">0</span>)&#125;</span>\n<span class=\"language-css\">  <span class=\"hljs-number\">20%</span>&#123;<span class=\"hljs-attribute\">transform</span>:<span class=\"hljs-built_in\">translateY</span>(<span class=\"hljs-number\">0</span>)&#125;</span>\n<span class=\"language-css\">  <span class=\"hljs-number\">50%</span>&#123;<span class=\"hljs-attribute\">transform</span>:<span class=\"hljs-built_in\">translateY</span>(-<span class=\"hljs-number\">20px</span>)&#125;</span>\n<span class=\"language-css\">  <span class=\"hljs-number\">80%</span>&#123;<span class=\"hljs-attribute\">transform</span>:<span class=\"hljs-built_in\">translateY</span>(<span class=\"hljs-number\">0</span>)&#125;</span>\n<span class=\"language-css\">  <span class=\"hljs-selector-tag\">to</span>&#123;<span class=\"hljs-attribute\">transform</span>:<span class=\"hljs-built_in\">translateY</span>(<span class=\"hljs-number\">0</span>)&#125;</span>\n<span class=\"language-css\">&#125;</span>\n<span class=\"language-css\"><span class=\"hljs-selector-class\">.anchor-down</span><span class=\"hljs-selector-pseudo\">::before</span> &#123;</span>\n<span class=\"language-css\">  <span class=\"hljs-attribute\">content</span>: <span class=\"hljs-string\">&quot;&quot;</span>;</span>\n<span class=\"language-css\">  <span class=\"hljs-attribute\">width</span>: <span class=\"hljs-number\">20px</span>;</span>\n<span class=\"language-css\">  <span class=\"hljs-attribute\">height</span>: <span class=\"hljs-number\">20px</span>;</span>\n<span class=\"language-css\">  <span class=\"hljs-attribute\">display</span>: block;</span>\n<span class=\"language-css\">  <span class=\"hljs-attribute\">border-right</span>: <span class=\"hljs-number\">3px</span> solid <span class=\"hljs-number\">#fff</span>;</span>\n<span class=\"language-css\">  <span class=\"hljs-attribute\">border-top</span>: <span class=\"hljs-number\">3px</span> solid <span class=\"hljs-number\">#fff</span>;</span>\n<span class=\"language-css\">  <span class=\"hljs-attribute\">transform</span>: <span class=\"hljs-built_in\">rotate</span>(<span class=\"hljs-number\">135deg</span>);</span>\n<span class=\"language-css\">  <span class=\"hljs-attribute\">position</span>: absolute;</span>\n<span class=\"language-css\">  <span class=\"hljs-attribute\">bottom</span>: <span class=\"hljs-number\">10px</span>;</span>\n<span class=\"language-css\">&#125;</span>\n<span class=\"language-css\"><span class=\"hljs-selector-class\">.anchor-down</span><span class=\"hljs-selector-pseudo\">::after</span> &#123;</span>\n<span class=\"language-css\">  <span class=\"hljs-attribute\">content</span>: <span class=\"hljs-string\">&quot;&quot;</span>;</span>\n<span class=\"language-css\">  <span class=\"hljs-attribute\">width</span>: <span class=\"hljs-number\">20px</span>;</span>\n<span class=\"language-css\">  <span class=\"hljs-attribute\">height</span>: <span class=\"hljs-number\">20px</span>;</span>\n<span class=\"language-css\">  <span class=\"hljs-attribute\">display</span>: block;</span>\n<span class=\"language-css\">  <span class=\"hljs-attribute\">border-right</span>: <span class=\"hljs-number\">3px</span> solid <span class=\"hljs-number\">#fff</span>;</span>\n<span class=\"language-css\">  <span class=\"hljs-attribute\">border-top</span>: <span class=\"hljs-number\">3px</span> solid <span class=\"hljs-number\">#fff</span>;</span>\n<span class=\"language-css\">  <span class=\"hljs-attribute\">transform</span>: <span class=\"hljs-built_in\">rotate</span>(<span class=\"hljs-number\">135deg</span>);</span>\n<span class=\"language-css\">&#125;</span>\n<span class=\"language-css\"></span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">style</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span><span class=\"language-javascript\"></span>\n<span class=\"language-javascript\"><span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> &#123;</span>\n<span class=\"language-javascript\">  mounted () &#123;</span>\n<span class=\"language-javascript\">    <span class=\"hljs-keyword\">const</span> ifJanchor = <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">getElementById</span>(<span class=\"hljs-string\">&quot;JanchorDown&quot;</span>); </span>\n<span class=\"language-javascript\">    ifJanchor &amp;&amp; ifJanchor.<span class=\"hljs-property\">parentNode</span>.<span class=\"hljs-title function_\">removeChild</span>(ifJanchor);</span>\n<span class=\"language-javascript\">    <span class=\"hljs-keyword\">let</span> a = <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">createElement</span>(<span class=\"hljs-string\">&#x27;a&#x27;</span>);</span>\n<span class=\"language-javascript\">    a.<span class=\"hljs-property\">id</span> = <span class=\"hljs-string\">&#x27;JanchorDown&#x27;</span>;</span>\n<span class=\"language-javascript\">    a.<span class=\"hljs-property\">className</span> = <span class=\"hljs-string\">&#x27;anchor-down&#x27;</span>;</span>\n<span class=\"language-javascript\">    <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">getElementsByClassName</span>(<span class=\"hljs-string\">&#x27;hero&#x27;</span>)[<span class=\"hljs-number\">0</span>].<span class=\"hljs-title function_\">append</span>(a);</span>\n<span class=\"language-javascript\">    <span class=\"hljs-keyword\">let</span> targetA = <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">getElementById</span>(<span class=\"hljs-string\">&quot;JanchorDown&quot;</span>);</span>\n<span class=\"language-javascript\">    targetA.<span class=\"hljs-title function_\">addEventListener</span>(<span class=\"hljs-string\">&#x27;click&#x27;</span>, <span class=\"hljs-function\"><span class=\"hljs-params\">e</span> =&gt;</span> &#123; <span class=\"hljs-comment\">// 添加点击事件</span></span>\n<span class=\"language-javascript\">      <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">scrollFn</span>();</span>\n<span class=\"language-javascript\">    &#125;)</span>\n<span class=\"language-javascript\">  &#125;,</span>\n<span class=\"language-javascript\"></span>\n<span class=\"language-javascript\">  <span class=\"hljs-attr\">methods</span>: &#123;</span>\n<span class=\"language-javascript\">    <span class=\"hljs-title function_\">scrollFn</span>(<span class=\"hljs-params\"></span>) &#123;</span>\n<span class=\"language-javascript\">      <span class=\"hljs-keyword\">const</span> windowH = <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">getElementsByClassName</span>(<span class=\"hljs-string\">&#x27;hero&#x27;</span>)[<span class=\"hljs-number\">0</span>].<span class=\"hljs-property\">clientHeight</span>; <span class=\"hljs-comment\">// 获取窗口高度</span></span>\n<span class=\"language-javascript\">      <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-property\">documentElement</span>.<span class=\"hljs-property\">scrollTop</span> = windowH; <span class=\"hljs-comment\">// 滚动条滚动到指定位置</span></span>\n<span class=\"language-javascript\">    &#125;</span>\n<span class=\"language-javascript\">  &#125;</span>\n<span class=\"language-javascript\">&#125;</span>\n<span class=\"language-javascript\"></span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span></code></pre></div>\n<p>4.首页气泡</p>\n<ul>\n<li>添加依赖<div class=\"code-wrapper\"><pre><code class=\"hljs sh\">npm install vue-canvas-effect -D</code></pre></div></li>\n<li>修改theme/vuepress-theme-reco/components/HomeBlog/index.vue<div class=\"code-wrapper\"><pre><code class=\"hljs html\"><span class=\"hljs-comment\">&lt;!-- 首页气泡 (在27行添加如下代码)--&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">component</span> <span class=\"hljs-attr\">v-if</span>=<span class=\"hljs-string\">&quot;bubbles&quot;</span></span>\n<span class=\"hljs-tag\">             <span class=\"hljs-attr\">:is</span>=<span class=\"hljs-string\">&quot;bubbles&quot;</span></span>\n<span class=\"hljs-tag\">             <span class=\"hljs-attr\">:options</span>=<span class=\"hljs-string\">&quot;options&quot;</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">component</span>&gt;</span></code></pre></div></li>\n<li>添加data<div class=\"code-wrapper\"><pre><code class=\"hljs javascript\"><span class=\"hljs-comment\">//首页气泡</span>\n    <span class=\"hljs-title function_\">data</span>(<span class=\"hljs-params\"></span>) &#123;\n        <span class=\"hljs-keyword\">return</span> &#123;\n            <span class=\"hljs-attr\">recoShow</span>: <span class=\"hljs-literal\">false</span>,\n            <span class=\"hljs-attr\">currentPage</span>: <span class=\"hljs-number\">1</span>,\n            <span class=\"hljs-attr\">tags</span>: [],\n            <span class=\"hljs-attr\">bubbles</span>: <span class=\"hljs-literal\">null</span>\n        &#125;\n    &#125;,</code></pre></div></li>\n<li>添加mounted<div class=\"code-wrapper\"><pre><code class=\"hljs javascript\"><span class=\"hljs-title function_\">mounted</span>(<span class=\"hljs-params\"></span>) &#123;\n       <span class=\"hljs-keyword\">import</span>(<span class=\"hljs-string\">&#x27;vue-canvas-effect/src/components/bubbles&#x27;</span>).<span class=\"hljs-title function_\">then</span>(<span class=\"hljs-function\"><span class=\"hljs-params\">module</span> =&gt;</span> &#123;\n           <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">bubbles</span> = <span class=\"hljs-variable language_\">module</span>.<span class=\"hljs-property\">default</span>\n       &#125;)\n       <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">recoShow</span> = <span class=\"hljs-literal\">true</span>\n       <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">_setPage</span>(<span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">_getStoragePage</span>())\n   &#125;,</code></pre></div></li>\n</ul>\n<p>5.修改置顶的样式</p>\n<ul>\n<li>修改./vuepress/theme/vuepress-theme-reco/NoteAbstractItem.vue<div class=\"code-wrapper\"><pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">v-if</span>=<span class=\"hljs-string\">&quot;item.frontmatter.sticky&quot;</span></span>\n<span class=\"hljs-tag\">              <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;settop&quot;</span>&gt;</span>置顶\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;title&quot;</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">reco-icon</span> <span class=\"hljs-attr\">v-if</span>=<span class=\"hljs-string\">&quot;item.frontmatter.keys&quot;</span></span>\n<span class=\"hljs-tag\">                       <span class=\"hljs-attr\">icon</span>=<span class=\"hljs-string\">&quot;reco-lock&quot;</span> /&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">router-link</span> <span class=\"hljs-attr\">:to</span>=<span class=\"hljs-string\">&quot;item.path&quot;</span>&gt;</span>&#123;&#123;item.title&#125;&#125;<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">router-link</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></code></pre></div></li>\n<li>添加css样式<div class=\"code-wrapper\"><pre><code class=\"hljs css\"><span class=\"hljs-selector-class\">.settop</span> &#123;\n        <span class=\"hljs-attribute\">position</span>: absolute;\n        <span class=\"hljs-attribute\">right</span>: <span class=\"hljs-number\">0</span>;\n        <span class=\"hljs-attribute\">top</span>: <span class=\"hljs-number\">0</span>;\n        <span class=\"hljs-attribute\">background</span>: $accentColor;\n        <span class=\"hljs-attribute\">font-size</span>: <span class=\"hljs-number\">0.6rem</span>;\n        <span class=\"hljs-attribute\">color</span>: <span class=\"hljs-number\">#fff</span>;\n        <span class=\"hljs-attribute\">transform</span>: <span class=\"hljs-built_in\">rotateZ</span>(<span class=\"hljs-number\">45deg</span>) <span class=\"hljs-built_in\">translateY</span>(-<span class=\"hljs-number\">55px</span>);\n        <span class=\"hljs-attribute\">padding</span>: <span class=\"hljs-number\">50px</span> <span class=\"hljs-number\">25px</span> <span class=\"hljs-number\">3px</span>;\n    &#125;</code></pre></div></li>\n</ul>\n<p>6.修改文章列表title的鼠标hover样式</p>\n<ul>\n<li>修改./vuepress/theme/vuepress-theme-reco/NoteAbstractItem.vue<div class=\"code-wrapper\"><pre><code class=\"hljs html\"><span class=\"hljs-comment\">&lt;!-- 添加class name 为 hover-underline-animation--&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;title hover-underline-animation&quot;</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">reco-icon</span> <span class=\"hljs-attr\">v-if</span>=<span class=\"hljs-string\">&quot;item.frontmatter.keys&quot;</span></span>\n<span class=\"hljs-tag\">                       <span class=\"hljs-attr\">icon</span>=<span class=\"hljs-string\">&quot;reco-lock&quot;</span> /&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">router-link</span> <span class=\"hljs-attr\">:to</span>=<span class=\"hljs-string\">&quot;item.path&quot;</span>&gt;</span>&#123;&#123;item.title&#125;&#125;<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">router-link</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></code></pre></div></li>\n<li>添加css样式<div class=\"code-wrapper\"><pre><code class=\"hljs css\"><span class=\"hljs-selector-class\">.hover-underline-animation</span> &#123;\n    <span class=\"hljs-attribute\">display</span>: inline-block;\n    <span class=\"hljs-attribute\">position</span>: relative;\n    <span class=\"hljs-attribute\">color</span>: $accentColor;\n&#125;\n\n<span class=\"hljs-selector-class\">.hover-underline-animation</span><span class=\"hljs-selector-pseudo\">:after</span> &#123;\n    <span class=\"hljs-attribute\">content</span>: <span class=\"hljs-string\">&#x27;&#x27;</span>;\n    <span class=\"hljs-attribute\">position</span>: absolute;\n    <span class=\"hljs-attribute\">width</span>: <span class=\"hljs-number\">100%</span>;\n    <span class=\"hljs-attribute\">transform</span>: <span class=\"hljs-built_in\">scaleX</span>(<span class=\"hljs-number\">0</span>);\n    <span class=\"hljs-attribute\">height</span>: <span class=\"hljs-number\">2px</span>;\n    <span class=\"hljs-attribute\">bottom</span>: <span class=\"hljs-number\">0</span>;\n    <span class=\"hljs-attribute\">left</span>: <span class=\"hljs-number\">0</span>;\n    <span class=\"hljs-attribute\">background-color</span>: $accentColor;\n    <span class=\"hljs-attribute\">transform-origin</span>: bottom right;\n    <span class=\"hljs-attribute\">transition</span>: transform <span class=\"hljs-number\">0.25s</span> ease-out;\n&#125;\n\n<span class=\"hljs-selector-class\">.hover-underline-animation</span><span class=\"hljs-selector-pseudo\">:hover</span><span class=\"hljs-selector-pseudo\">:after</span> &#123;\n    <span class=\"hljs-attribute\">transform</span>: <span class=\"hljs-built_in\">scaleX</span>(<span class=\"hljs-number\">1</span>);\n    <span class=\"hljs-attribute\">transform-origin</span>: bottom left;\n&#125;</code></pre></div></li>\n</ul>\n<p>7.首页添加每日诗词<br>:::tip<br>今日诗词 API 是一个可以返回一句古诗词名句的接口。它可以通过图片和 JSON 格式调用。今日诗词 API 根据不同地点、时间、节日、季节、天气、景观、城市进行智能推荐。<br>:::</p>\n<ul>\n<li>官方文档地址<br><a href=\"https://www.jinrishici.com/doc/\">https://www.jinrishici.com/doc/</a></li>\n<li>修改.vuepress/theme/vuepress-theme-reco/components/HomeBlog/index.vue文件<div class=\"code-wrapper\"><pre><code class=\"hljs html\"> <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ModuleTransition</span> <span class=\"hljs-attr\">delay</span>=<span class=\"hljs-string\">&quot;0.08&quot;</span>&gt;</span>\n                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span> <span class=\"hljs-attr\">v-if</span>=<span class=\"hljs-string\">&quot;recoShowModule &amp;&amp; $frontmatter.tagline !== null&quot;</span></span>\n<span class=\"hljs-tag\">                       <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;description&quot;</span>&gt;</span>\n                        &#123;&#123; $frontmatter.tagline || $description || &#x27;Welcome to your vuePress-theme-reco site&#x27; &#125;&#125;\n                    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">ModuleTransition</span>&gt;</span>\n<span class=\"hljs-comment\">&lt;!-- 加入如下代码即可 --&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ModuleTransition</span> <span class=\"hljs-attr\">delay</span>=<span class=\"hljs-string\">&quot;0.12&quot;</span>&gt;</span>\n        <span class=\"hljs-comment\">&lt;!-- marquee文字滚动标签</span>\n<span class=\"hljs-comment\">        marquee 参数：</span>\n<span class=\"hljs-comment\">                    BGColor：滚动文本框的背景颜色。</span>\n<span class=\"hljs-comment\">                    direction：滚动方向设置.</span>\n<span class=\"hljs-comment\">                        left - 从右向左。默认值。</span>\n<span class=\"hljs-comment\">                        right - 从左向右。</span>\n<span class=\"hljs-comment\">                        up - 向上。</span>\n<span class=\"hljs-comment\">                        down - 向下</span>\n<span class=\"hljs-comment\">                    scrolldelay： 设置每次滚动时的时间间隔（以毫秒为单位）。默认值为 85。 值越大，滚动速度越慢，通常不设置。</span>\n<span class=\"hljs-comment\">                          注意：除非指定 truespeed 值，否则将忽略任何小于 60 的值，并改为使用 60。</span>\n<span class=\"hljs-comment\">                    scrollamount：一次滚动总的时间量，数字越小滚动越慢。</span>\n<span class=\"hljs-comment\">                    behaviour：滚动的方式设置，三种取值：Scroll（循环滚动） lide（单次滚动）、Alternate（来回滚动）。</span>\n<span class=\"hljs-comment\">                    align：文字的对齐方式设置。可选择Middle(居中)、Bottom(居下)还是Top(居上)。</span>\n<span class=\"hljs-comment\">                    width：滚动文本框的宽度，输入一个数值后从后面的单选框选择in Pixels(按像素)或是in Percent(按百分比)。</span>\n<span class=\"hljs-comment\">                    height：滚动文本框的高度，输入一个数值后从后面的单选框选择in Pixels(按像素)或是in Percent(按百分比)。</span>\n<span class=\"hljs-comment\">                    loop：滚动次数。默认值-1，无限次循环</span>\n<span class=\"hljs-comment\">                    hspace、vspace：前后、上下的空行。</span>\n<span class=\"hljs-comment\">                    onMouseOver=&#x27;this.stop()&#x27; 鼠标放上去则暂停</span>\n<span class=\"hljs-comment\">                    onMouseOut=&#x27;this.start()&#x27; 鼠标移开继续滚动</span>\n<span class=\"hljs-comment\">        --&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">marquee</span> <span class=\"hljs-attr\">behavior</span>=<span class=\"hljs-string\">&quot;alternate&quot;</span> <span class=\"hljs-attr\">loop</span>=<span class=\"hljs-string\">&quot;2&quot;</span> <span class=\"hljs-attr\">direction</span>=<span class=\"hljs-string\">&quot;right&quot;</span> <span class=\"hljs-attr\">scrollamount</span>=<span class=\"hljs-string\">&quot;10&quot;</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">img</span> <span class=\"hljs-attr\">alt</span>=<span class=\"hljs-string\">&quot;今日诗词&quot;</span></span>\n<span class=\"hljs-tag\">                    <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">&quot;https://v2.jinrishici.com/one.svg&quot;</span></span>\n<span class=\"hljs-tag\">                    <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">&quot;max-width:100%; display: block; margin: 0 auto;&quot;</span> /&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">marquee</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">ModuleTransition</span>&gt;</span></code></pre></div>\n方式二:</li>\n<li>安装<div class=\"code-wrapper\"><pre><code class=\"hljs sh\">npm -i jinrishici --save</code></pre></div></li>\n<li>使用<br>修改.vuepress/theme/vuepress-theme-reco/components/HomeBlog/index.vue文件<div class=\"code-wrapper\"><pre><code class=\"hljs html\"><span class=\"hljs-comment\">&lt;!-- html部分 --&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ModuleTransition</span> <span class=\"hljs-attr\">delay</span>=<span class=\"hljs-string\">&quot;0.08&quot;</span>&gt;</span>\n                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span> <span class=\"hljs-attr\">v-if</span>=<span class=\"hljs-string\">&quot;recoShowModule &amp;&amp; $frontmatter.tagline !== null&quot;</span></span>\n<span class=\"hljs-tag\">                       <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;description&quot;</span>&gt;</span>\n                        &#123;&#123; $frontmatter.tagline || $description || &#x27;Welcome to your vuePress-theme-reco site&#x27; &#125;&#125;\n                    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">ModuleTransition</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ModuleTransition</span> <span class=\"hljs-attr\">delay</span>=<span class=\"hljs-string\">&quot;0.12&quot;</span>&gt;</span>\n                    <span class=\"hljs-comment\">&lt;!-- &lt;span class=&quot;jinrishici-sentence&quot;&gt;正在加载今日诗词....&lt;/span&gt; --&gt;</span>\n                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">marquee</span> &gt;</span>\n                        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span>&gt;</span>&#123;&#123;word&#125;&#125;<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span>\n                    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">marquee</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">ModuleTransition</span>&gt;</span>\n<span class=\"hljs-comment\">&lt;!-- javascript部分 --&gt;</span>\n data() &#123;\n        return &#123;\n            word: &#x27;正在加载今日诗词....&#x27;,\n        &#125;\n    &#125;,\n    methods: &#123;\n        paginationChange(page) &#123;\n            setTimeout(() =&gt; &#123;\n                window.scrollTo(0, this.heroHeight)\n            &#125;, 100)\n        &#125;,\n        getPagesByTags(tagInfo) &#123;\n            this.$router.push(&#123; path: tagInfo.path &#125;)\n        &#125;,\n        loadSentence: function () &#123;\n            jinrishici.load(result =&gt; &#123;\n                this.word = result.data.content\n            &#125;, err =&gt; &#123;\n                console.log(&quot;test&quot;);\n            &#125;)\n        &#125;\n    &#125;,\n    mounted: function () &#123; this.loadSentence() &#125;</code></pre></div></li>\n</ul>\n<p>8.修改主页背景为随机图片<br>修改.vuepress/theme/vuepress-theme-reco/components/HomeBlog/index.vue</p>\n<div class=\"code-wrapper\"><pre><code class=\"hljs javascript\"><span class=\"hljs-keyword\">const</span> url = instance.<span class=\"hljs-property\">$frontmatter</span>.<span class=\"hljs-property\">bgImage</span>\n            ? instance.$withBase(instance.<span class=\"hljs-property\">$frontmatter</span>.<span class=\"hljs-property\">bgImage</span>)\n            : <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;../../images/bg.jpg&#x27;</span>)\n<span class=\"hljs-comment\">// 将上面代码修改为以下形式</span>\n<span class=\"hljs-keyword\">const</span> url = instance.<span class=\"hljs-property\">$frontmatter</span>.<span class=\"hljs-property\">bgImage</span>\n            ? instance.$withBase(instance.<span class=\"hljs-property\">$frontmatter</span>.<span class=\"hljs-property\">bgImage</span>)\n            : <span class=\"hljs-string\">&#x27;https://picsum.photos/1600/900&#x27;</span></code></pre></div>\n<p>:::warning<br>若使用随机背景图片，README.md文件中bgImageStyle配置如下即可</p>\n<div class=\"code-wrapper\"><pre><code class=\"hljs css\">bgImageStyle: &#123;\n  <span class=\"hljs-attribute\">height</span>: <span class=\"hljs-string\">&#x27;95vh&#x27;</span>,\n&#125;</code></pre></div>\n<p>:::<br>9.使用v-view插件对图片进行放大缩小</p>\n<ul>\n<li>安装<div class=\"code-wrapper\"><pre><code class=\"hljs sh\">npm install v-viewer --save</code></pre></div></li>\n<li>使用<br>修改.vuepress/theme/vuepress-theme-reco/enhanceApp.js如下所示<div class=\"code-wrapper\"><pre><code class=\"hljs javascript\"><span class=\"hljs-comment\">/* eslint-disable no-proto */</span>\n<span class=\"hljs-keyword\">import</span> postMixin <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;@theme/mixins/posts&#x27;</span>\n<span class=\"hljs-keyword\">import</span> localMixin <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;@theme/mixins/locales&#x27;</span>\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-title class_\">Vue</span> <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;vue&#x27;</span>;\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-title class_\">Viewer</span> <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;v-viewer&#x27;</span>\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">&#x27;viewerjs/dist/viewer.css&#x27;</span>\n<span class=\"hljs-keyword\">import</span> &#123; interceptRouterError, fixRouterError404 &#125; <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;@theme/helpers/other&#x27;</span>\n<span class=\"hljs-keyword\">import</span> &#123; install &#125; <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;vue-demi&#x27;</span>\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> (&#123;\n  <span class=\"hljs-title class_\">Vue</span>,\n  siteData,\n  isServer,\n  router\n&#125;) =&gt; &#123;\n  <span class=\"hljs-title function_\">install</span>(<span class=\"hljs-title class_\">Vue</span>)\n  <span class=\"hljs-title class_\">Vue</span>.<span class=\"hljs-title function_\">mixin</span>(postMixin)\n  <span class=\"hljs-title class_\">Vue</span>.<span class=\"hljs-title function_\">mixin</span>(localMixin)\n  <span class=\"hljs-comment\">// if (!isServer) &#123;</span>\n  <span class=\"hljs-comment\">//   addScriptToHead(&#x27;//kit.fontawesome.com/51b01de608.js&#x27;)</span>\n  <span class=\"hljs-comment\">//   registerCodeThemeCss(siteData.themeConfig.codeTheme)</span>\n  <span class=\"hljs-comment\">// &#125;</span>\n  <span class=\"hljs-title class_\">Vue</span>.<span class=\"hljs-title function_\">use</span>(<span class=\"hljs-title class_\">Viewer</span>)\n  <span class=\"hljs-title class_\">Viewer</span>.<span class=\"hljs-title function_\">setDefaults</span>(&#123;\n    <span class=\"hljs-title class_\">Options</span>: &#123; <span class=\"hljs-string\">&#x27;inline&#x27;</span>: <span class=\"hljs-literal\">true</span>, <span class=\"hljs-string\">&#x27;button&#x27;</span>: <span class=\"hljs-literal\">true</span>, <span class=\"hljs-string\">&#x27;navbar&#x27;</span>: <span class=\"hljs-literal\">true</span>, <span class=\"hljs-string\">&#x27;title&#x27;</span>: <span class=\"hljs-literal\">true</span>, <span class=\"hljs-string\">&#x27;toolbar&#x27;</span>: <span class=\"hljs-literal\">true</span>, <span class=\"hljs-string\">&#x27;tooltip&#x27;</span>: <span class=\"hljs-literal\">true</span>, <span class=\"hljs-string\">&#x27;movable&#x27;</span>: <span class=\"hljs-literal\">true</span>, <span class=\"hljs-string\">&#x27;zoomable&#x27;</span>: <span class=\"hljs-literal\">true</span>, <span class=\"hljs-string\">&#x27;rotatable&#x27;</span>: <span class=\"hljs-literal\">true</span>, <span class=\"hljs-string\">&#x27;scalable&#x27;</span>: <span class=\"hljs-literal\">true</span>, <span class=\"hljs-string\">&#x27;transition&#x27;</span>: <span class=\"hljs-literal\">true</span>, <span class=\"hljs-string\">&#x27;fullscreen&#x27;</span>: <span class=\"hljs-literal\">true</span>, <span class=\"hljs-string\">&#x27;keyboard&#x27;</span>: <span class=\"hljs-literal\">true</span>, <span class=\"hljs-string\">&#x27;url&#x27;</span>: <span class=\"hljs-string\">&#x27;data-source&#x27;</span> &#125;\n  &#125;)\n\n  <span class=\"hljs-title function_\">interceptRouterError</span>(router)\n  <span class=\"hljs-title function_\">fixRouterError404</span>(router)\n&#125;</code></pre></div>\n修改.vuepress/theme/vuepress-theme-reco/components/Page.vue如下<div class=\"code-wrapper\"><pre><code class=\"hljs html\"><span class=\"hljs-comment\">&lt;!-- session添加v-viewer指令 --&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">section</span> <span class=\"hljs-attr\">v-show</span>=<span class=\"hljs-string\">&quot;recoShowModule&quot;</span></span>\n<span class=\"hljs-tag\">                     <span class=\"hljs-attr\">v-viewer</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;page-title&quot;</span>&gt;</span>\n                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h1</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;title&quot;</span>&gt;</span>&#123;&#123;$page.title&#125;&#125;<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h1</span>&gt;</span>\n                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">PageInfo</span> <span class=\"hljs-attr\">:pageInfo</span>=<span class=\"hljs-string\">&quot;$page&quot;</span></span>\n<span class=\"hljs-tag\">                              <span class=\"hljs-attr\">:showAccessNumber</span>=<span class=\"hljs-string\">&quot;showAccessNumber&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">PageInfo</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Content</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;theme-reco-content&quot;</span> /&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">section</span>&gt;</span></code></pre></div>\n:::warning<br>这里需要关闭vuepress内置的@vuepress/plugin-medium-zoom<div class=\"code-wrapper\"><pre><code class=\"hljs javascript\"><span class=\"hljs-comment\">// 只需将 Options 设置成 false 便可禁用该插件</span>\n<span class=\"hljs-variable language_\">module</span>.<span class=\"hljs-property\">exports</span> = &#123;\n  <span class=\"hljs-attr\">plugins</span>: [\n    [<span class=\"hljs-string\">&quot;@vuepress/plugin-medium-zoom&quot;</span>, <span class=\"hljs-literal\">false</span>] <span class=\"hljs-comment\">// disabled.</span>\n  ]\n&#125;;</code></pre></div>\n更新:<br>由于本人是将vuepress-theme-reco主题下载到本地进行修改，所以以上方式并不能关闭vuepress/plugin-medium-zoom插件<br>解决方式:修改.vuepress/theme/vuepress-theme-reco/index.js如下<div class=\"code-wrapper\"><pre><code class=\"hljs awk\">plugins: [\n   <span class=\"hljs-string\">&#x27;@vuepress-reco/back-to-top&#x27;</span>,\n   <span class=\"hljs-string\">&#x27;@vuepress-reco/loading-page&#x27;</span>,\n   <span class=\"hljs-string\">&#x27;@vuepress-reco/pagation&#x27;</span>,\n   <span class=\"hljs-string\">&#x27;@vuepress-reco/comments&#x27;</span>,\n   <span class=\"hljs-string\">&#x27;@vuepress/active-header-links&#x27;</span>,\n   <span class=\"hljs-regexp\">//</span> [<span class=\"hljs-string\">&#x27;@vuepress/medium-zoom&#x27;</span>, &#123;\n   <span class=\"hljs-regexp\">//</span>   selector: <span class=\"hljs-string\">&#x27;.theme-reco-content :not(a) &gt; img&#x27;</span>\n   <span class=\"hljs-regexp\">//</span> &#125;],</code></pre></div>\n只需要将vuepress/medium-zoom插件注释或者删除即可<br>:::</li>\n</ul>\n<h2 id=\"插件不生效\"><a href=\"#插件不生效\" class=\"headerlink\" title=\"插件不生效\"></a>插件不生效</h2><p>在config.js中配置的插件未生效，于是本人根据vuepress加载流程,将插件配置放入了vuepress-theme-reco的index.js中，此时插件生效。</p>\n<h2 id=\"部署\"><a href=\"#部署\" class=\"headerlink\" title=\"部署\"></a>部署</h2><ul>\n<li>nginx配置文件<div class=\"code-wrapper\"><pre><code class=\"hljs nginx\"><span class=\"hljs-attribute\">user</span>  nginx;\n<span class=\"hljs-attribute\">worker_processes</span>  <span class=\"hljs-number\">1</span>;\n\n<span class=\"hljs-attribute\">error_log</span>  /var/log/nginx/<span class=\"hljs-literal\">error</span>.log <span class=\"hljs-literal\">warn</span>;\n<span class=\"hljs-attribute\">pid</span>        /var/run/nginx.pid;\n\n\n<span class=\"hljs-section\">events</span> &#123;\n    <span class=\"hljs-attribute\">worker_connections</span>  <span class=\"hljs-number\">1024</span>;\n&#125;\n\n\n<span class=\"hljs-section\">http</span> &#123;\n\t<span class=\"hljs-comment\">#开启gzip压缩加速</span>\n \t<span class=\"hljs-attribute\">gzip</span> <span class=\"hljs-literal\">on</span>; \n \t<span class=\"hljs-comment\">#低于1kb的资源不压缩</span>\n  \t<span class=\"hljs-attribute\">gzip_min_length</span> <span class=\"hljs-number\">1k</span>; \n  \t <span class=\"hljs-comment\">#压缩级别【1-9】，越大压缩率越高，同时消耗cpu资源也越多，建议设置在4左右。</span>\n  \t<span class=\"hljs-attribute\">gzip_comp_level</span> <span class=\"hljs-number\">4</span>;\n  \t<span class=\"hljs-comment\">#需要压缩哪些响应类型的资源，多个空格隔开。不建议压缩图片</span>\n  \t<span class=\"hljs-attribute\">gzip_types</span> text/plain application/javascript application/x-javascript text/javascript text/xml text/css application/json;  \n  \t <span class=\"hljs-comment\">#配置禁用gzip条件，支持正则。此处表示ie6及以下不启用gzip（因为ie低版本不支持）</span>\n  \t<span class=\"hljs-attribute\">gzip_disable</span> <span class=\"hljs-string\">&quot;MSIE [1-6]\\.&quot;</span>; \n  \t<span class=\"hljs-comment\">#是否添加“Vary: Accept-Encoding”响应头</span>\n  \t<span class=\"hljs-attribute\">gzip_vary</span> <span class=\"hljs-literal\">on</span>;  \n\n    <span class=\"hljs-attribute\">include</span>       /etc/nginx/mime.types;\n    <span class=\"hljs-attribute\">default_type</span>  application/octet-stream;\n\n    <span class=\"hljs-attribute\">log_format</span>  main  <span class=\"hljs-string\">&#x27;<span class=\"hljs-variable\">$remote_addr</span> - <span class=\"hljs-variable\">$remote_user</span> [<span class=\"hljs-variable\">$time_local</span>] &quot;<span class=\"hljs-variable\">$request</span>&quot; &#x27;</span>\n                      <span class=\"hljs-string\">&#x27;<span class=\"hljs-variable\">$status</span> <span class=\"hljs-variable\">$body_bytes_sent</span> &quot;<span class=\"hljs-variable\">$http_referer</span>&quot; &#x27;</span>\n                      <span class=\"hljs-string\">&#x27;&quot;<span class=\"hljs-variable\">$http_user_agent</span>&quot; &quot;<span class=\"hljs-variable\">$http_x_forwarded_for</span>&quot;&#x27;</span>;\n\n    <span class=\"hljs-attribute\">access_log</span>  /var/log/nginx/access.log  main;\n\n    <span class=\"hljs-attribute\">sendfile</span>        <span class=\"hljs-literal\">on</span>;\n    <span class=\"hljs-comment\">#tcp_nopush     on;</span>\n\n    <span class=\"hljs-attribute\">keepalive_timeout</span>  <span class=\"hljs-number\">65</span>;\n\t<span class=\"hljs-section\">server</span> &#123;\n\t\t<span class=\"hljs-attribute\">listen</span>  <span class=\"hljs-number\">80</span>;\n\t\t<span class=\"hljs-attribute\">server_name</span> blog;\n \n\t\t<span class=\"hljs-section\">location</span> /blog_nation &#123;\n\t\t\t<span class=\"hljs-attribute\">root</span> /usr/share/nginx/html/blog_nation/;\n\t\t\t<span class=\"hljs-attribute\">index</span>  index.html index.htm;\n\t\t&#125;\n\t\t<span class=\"hljs-attribute\">error_page</span> <span class=\"hljs-number\">500</span> <span class=\"hljs-number\">502</span> <span class=\"hljs-number\">503</span> <span class=\"hljs-number\">504</span> /50x.html;\n\t\t<span class=\"hljs-section\">location</span> = /50x.html &#123;\n\t\t\t<span class=\"hljs-attribute\">root</span> /usr/share/nginx/html;\n\t\t&#125;\n\t&#125;\n&#125;</code></pre></div>\n那如何寻找没有添加的 type 呢？我们打开 Chrome 的「开发者工具」，打开自己的网站，对于「Network」中请求自己网站的包，看是否启动 Gzip，如果「Response Headers」显示「Accept-Ranges: bytes」则表示该包没有开启加速，可以将「Content-Type」后面的值填入「gzip_types」并且使用空格隔开。</li>\n</ul>\n","site":{"data":{}},"more":"<!-- more -->\n\n<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><pre><code class=\"hljs sh\">npm install vuepress-theme-reco --save-dev\n\n<span class=\"hljs-comment\"># or</span>\n\nyarn add vuepress-theme-reco</code></pre>\n<h2 id=\"引用\"><a href=\"#引用\" class=\"headerlink\" title=\"引用\"></a>引用</h2><pre><code class=\"hljs sh\">// .vuepress/config.js\n\nmodule.exports = &#123;\n  theme: <span class=\"hljs-string\">&#x27;reco&#x27;</span>\n&#125;</code></pre>\n<h2 id=\"本地引用\"><a href=\"#本地引用\" class=\"headerlink\" title=\"本地引用\"></a>本地引用</h2><ul>\n<li>下载<br>在<a href=\"https://github.com/vuepress-reco/vuepress-theme-reco%E4%BB%93%E5%BA%93%E4%B8%AD%E4%B8%8B%E8%BD%BD%E5%85%A8%E9%83%A8%E6%96%87%E4%BB%B6\">https://github.com/vuepress-reco/vuepress-theme-reco仓库中下载全部文件</a></li>\n<li>使用<br>在.vuepress文件夹下新建theme文件夹，再将packages文件夹下的vuepress-theme-reco文件夹放入theme;<br>修改.vuepress文件夹下config.js<pre><code class=\"hljs livecodeserver\"><span class=\"hljs-string\">&quot;theme&quot;</span>: <span class=\"hljs-built_in\">require</span>.<span class=\"hljs-built_in\">resolve</span>(<span class=\"hljs-string\">&quot;./theme/vuepress-theme-reco&quot;</span>),</code></pre></li>\n</ul>\n<h2 id=\"Front-Matter\"><a href=\"#Front-Matter\" class=\"headerlink\" title=\"Front Matter\"></a>Front Matter</h2><pre><code class=\"hljs sh\">---\ntitle: 烤鸭的做法\n<span class=\"hljs-built_in\">date</span>: <span class=\"hljs-string\">&#x27;2019-08-08 08:00:00&#x27;</span>\nsidebar: <span class=\"hljs-string\">&#x27;auto&#x27;</span>\ncategories:\n - 烹饪\n - 爱好\ntags:\n - 烤\n - 鸭子\nkeys:\n - <span class=\"hljs-string\">&#x27;123456&#x27;</span>\npublish: <span class=\"hljs-literal\">false</span>\n---</code></pre>\n<p>:::tip<br>Front Matter配置</p>\n<p>title: 文章标题 date: 时间，如(‘2019-08-08 08:00:00’) sidebar: ‘auto’ categories:文章分类，可以有多个</p>\n<p>tags:文章标签,可以有多个</p>\n<p>keys：文章加密密码</p>\n<p>sticky :是否置顶，sort type: 降序，可以按照 1, 2, 3, … 来降低置顶文章的排列优先级</p>\n<p>public:是否发布<br>:::</p>\n<h2 id=\"优化页面\"><a href=\"#优化页面\" class=\"headerlink\" title=\"优化页面\"></a>优化页面</h2><p>1.首页背景全屏显示 修改首页的README.md文件</p>\n<pre><code class=\"hljs css\">bgImageStyle: &#123;\n  <span class=\"hljs-attribute\">height</span>: <span class=\"hljs-string\">&#x27;95vh&#x27;</span>,\n  background-color: <span class=\"hljs-string\">&#x27;#D9AFD9&#x27;</span>,\n  background-image: <span class=\"hljs-string\">&#x27;linear-gradient(0deg, #D9AFD9 0%, #97D9E1 100%)&#x27;</span>\n&#125;</code></pre>\n<p>2.添加鼠标点击特效 修改.vuepress/config.js中的head，如下所示:</p>\n<pre><code class=\"hljs javascript\">[\n    <span class=\"hljs-string\">&quot;script&quot;</span>,\n    &#123;\n      <span class=\"hljs-string\">&quot;src&quot;</span>: <span class=\"hljs-string\">&quot;https://cdn.jsdelivr.net/gh/forthespada/forthespada.github.io@master/plugin/click_heart.js&quot;</span>\n    &#125;\n  ]</code></pre>\n<p>3.首页添加向下滑动按钮 在主页的README.md文件最下面添加下列代码（此方法转载自<a href=\"https://blog.csdn.net/qq_41327483/article/details/119103300%E3%80%82%EF%BC%89\">https://blog.csdn.net/qq_41327483/article/details/119103300。）</a></p>\n<pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">style</span>&gt;</span><span class=\"language-css\"></span>\n<span class=\"language-css\"><span class=\"hljs-selector-class\">.anchor-down</span> &#123;</span>\n<span class=\"language-css\">  <span class=\"hljs-attribute\">display</span>: block;</span>\n<span class=\"language-css\">  <span class=\"hljs-attribute\">margin</span>: <span class=\"hljs-number\">12rem</span> auto <span class=\"hljs-number\">0</span>;</span>\n<span class=\"language-css\">  <span class=\"hljs-attribute\">bottom</span>: <span class=\"hljs-number\">45px</span>;</span>\n<span class=\"language-css\">  <span class=\"hljs-attribute\">width</span>: <span class=\"hljs-number\">20px</span>;</span>\n<span class=\"language-css\">  <span class=\"hljs-attribute\">height</span>: <span class=\"hljs-number\">20px</span>;</span>\n<span class=\"language-css\">  <span class=\"hljs-attribute\">font-size</span>: <span class=\"hljs-number\">34px</span>;</span>\n<span class=\"language-css\">  <span class=\"hljs-attribute\">text-align</span>: center;</span>\n<span class=\"language-css\">  <span class=\"hljs-attribute\">animation</span>: bounce-in <span class=\"hljs-number\">5s</span> <span class=\"hljs-number\">3s</span> infinite;</span>\n<span class=\"language-css\">  <span class=\"hljs-attribute\">position</span>: absolute;</span>\n<span class=\"language-css\">  <span class=\"hljs-attribute\">left</span>: <span class=\"hljs-number\">50%</span>;</span>\n<span class=\"language-css\">  <span class=\"hljs-attribute\">bottom</span>: <span class=\"hljs-number\">30%</span>;</span>\n<span class=\"language-css\">  <span class=\"hljs-attribute\">margin-left</span>: -<span class=\"hljs-number\">10px</span>;</span>\n<span class=\"language-css\">  <span class=\"hljs-attribute\">cursor</span>: pointer;</span>\n<span class=\"language-css\">&#125;</span>\n<span class=\"language-css\"><span class=\"hljs-keyword\">@-webkit-keyframes</span> bounce-in&#123;</span>\n<span class=\"language-css\">  <span class=\"hljs-number\">0%</span>&#123;<span class=\"hljs-attribute\">transform</span>:<span class=\"hljs-built_in\">translateY</span>(<span class=\"hljs-number\">0</span>)&#125;</span>\n<span class=\"language-css\">  <span class=\"hljs-number\">20%</span>&#123;<span class=\"hljs-attribute\">transform</span>:<span class=\"hljs-built_in\">translateY</span>(<span class=\"hljs-number\">0</span>)&#125;</span>\n<span class=\"language-css\">  <span class=\"hljs-number\">50%</span>&#123;<span class=\"hljs-attribute\">transform</span>:<span class=\"hljs-built_in\">translateY</span>(-<span class=\"hljs-number\">20px</span>)&#125;</span>\n<span class=\"language-css\">  <span class=\"hljs-number\">80%</span>&#123;<span class=\"hljs-attribute\">transform</span>:<span class=\"hljs-built_in\">translateY</span>(<span class=\"hljs-number\">0</span>)&#125;</span>\n<span class=\"language-css\">  <span class=\"hljs-selector-tag\">to</span>&#123;<span class=\"hljs-attribute\">transform</span>:<span class=\"hljs-built_in\">translateY</span>(<span class=\"hljs-number\">0</span>)&#125;</span>\n<span class=\"language-css\">&#125;</span>\n<span class=\"language-css\"><span class=\"hljs-selector-class\">.anchor-down</span><span class=\"hljs-selector-pseudo\">::before</span> &#123;</span>\n<span class=\"language-css\">  <span class=\"hljs-attribute\">content</span>: <span class=\"hljs-string\">&quot;&quot;</span>;</span>\n<span class=\"language-css\">  <span class=\"hljs-attribute\">width</span>: <span class=\"hljs-number\">20px</span>;</span>\n<span class=\"language-css\">  <span class=\"hljs-attribute\">height</span>: <span class=\"hljs-number\">20px</span>;</span>\n<span class=\"language-css\">  <span class=\"hljs-attribute\">display</span>: block;</span>\n<span class=\"language-css\">  <span class=\"hljs-attribute\">border-right</span>: <span class=\"hljs-number\">3px</span> solid <span class=\"hljs-number\">#fff</span>;</span>\n<span class=\"language-css\">  <span class=\"hljs-attribute\">border-top</span>: <span class=\"hljs-number\">3px</span> solid <span class=\"hljs-number\">#fff</span>;</span>\n<span class=\"language-css\">  <span class=\"hljs-attribute\">transform</span>: <span class=\"hljs-built_in\">rotate</span>(<span class=\"hljs-number\">135deg</span>);</span>\n<span class=\"language-css\">  <span class=\"hljs-attribute\">position</span>: absolute;</span>\n<span class=\"language-css\">  <span class=\"hljs-attribute\">bottom</span>: <span class=\"hljs-number\">10px</span>;</span>\n<span class=\"language-css\">&#125;</span>\n<span class=\"language-css\"><span class=\"hljs-selector-class\">.anchor-down</span><span class=\"hljs-selector-pseudo\">::after</span> &#123;</span>\n<span class=\"language-css\">  <span class=\"hljs-attribute\">content</span>: <span class=\"hljs-string\">&quot;&quot;</span>;</span>\n<span class=\"language-css\">  <span class=\"hljs-attribute\">width</span>: <span class=\"hljs-number\">20px</span>;</span>\n<span class=\"language-css\">  <span class=\"hljs-attribute\">height</span>: <span class=\"hljs-number\">20px</span>;</span>\n<span class=\"language-css\">  <span class=\"hljs-attribute\">display</span>: block;</span>\n<span class=\"language-css\">  <span class=\"hljs-attribute\">border-right</span>: <span class=\"hljs-number\">3px</span> solid <span class=\"hljs-number\">#fff</span>;</span>\n<span class=\"language-css\">  <span class=\"hljs-attribute\">border-top</span>: <span class=\"hljs-number\">3px</span> solid <span class=\"hljs-number\">#fff</span>;</span>\n<span class=\"language-css\">  <span class=\"hljs-attribute\">transform</span>: <span class=\"hljs-built_in\">rotate</span>(<span class=\"hljs-number\">135deg</span>);</span>\n<span class=\"language-css\">&#125;</span>\n<span class=\"language-css\"></span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">style</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span><span class=\"language-javascript\"></span>\n<span class=\"language-javascript\"><span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> &#123;</span>\n<span class=\"language-javascript\">  mounted () &#123;</span>\n<span class=\"language-javascript\">    <span class=\"hljs-keyword\">const</span> ifJanchor = <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">getElementById</span>(<span class=\"hljs-string\">&quot;JanchorDown&quot;</span>); </span>\n<span class=\"language-javascript\">    ifJanchor &amp;&amp; ifJanchor.<span class=\"hljs-property\">parentNode</span>.<span class=\"hljs-title function_\">removeChild</span>(ifJanchor);</span>\n<span class=\"language-javascript\">    <span class=\"hljs-keyword\">let</span> a = <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">createElement</span>(<span class=\"hljs-string\">&#x27;a&#x27;</span>);</span>\n<span class=\"language-javascript\">    a.<span class=\"hljs-property\">id</span> = <span class=\"hljs-string\">&#x27;JanchorDown&#x27;</span>;</span>\n<span class=\"language-javascript\">    a.<span class=\"hljs-property\">className</span> = <span class=\"hljs-string\">&#x27;anchor-down&#x27;</span>;</span>\n<span class=\"language-javascript\">    <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">getElementsByClassName</span>(<span class=\"hljs-string\">&#x27;hero&#x27;</span>)[<span class=\"hljs-number\">0</span>].<span class=\"hljs-title function_\">append</span>(a);</span>\n<span class=\"language-javascript\">    <span class=\"hljs-keyword\">let</span> targetA = <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">getElementById</span>(<span class=\"hljs-string\">&quot;JanchorDown&quot;</span>);</span>\n<span class=\"language-javascript\">    targetA.<span class=\"hljs-title function_\">addEventListener</span>(<span class=\"hljs-string\">&#x27;click&#x27;</span>, <span class=\"hljs-function\"><span class=\"hljs-params\">e</span> =&gt;</span> &#123; <span class=\"hljs-comment\">// 添加点击事件</span></span>\n<span class=\"language-javascript\">      <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">scrollFn</span>();</span>\n<span class=\"language-javascript\">    &#125;)</span>\n<span class=\"language-javascript\">  &#125;,</span>\n<span class=\"language-javascript\"></span>\n<span class=\"language-javascript\">  <span class=\"hljs-attr\">methods</span>: &#123;</span>\n<span class=\"language-javascript\">    <span class=\"hljs-title function_\">scrollFn</span>(<span class=\"hljs-params\"></span>) &#123;</span>\n<span class=\"language-javascript\">      <span class=\"hljs-keyword\">const</span> windowH = <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">getElementsByClassName</span>(<span class=\"hljs-string\">&#x27;hero&#x27;</span>)[<span class=\"hljs-number\">0</span>].<span class=\"hljs-property\">clientHeight</span>; <span class=\"hljs-comment\">// 获取窗口高度</span></span>\n<span class=\"language-javascript\">      <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-property\">documentElement</span>.<span class=\"hljs-property\">scrollTop</span> = windowH; <span class=\"hljs-comment\">// 滚动条滚动到指定位置</span></span>\n<span class=\"language-javascript\">    &#125;</span>\n<span class=\"language-javascript\">  &#125;</span>\n<span class=\"language-javascript\">&#125;</span>\n<span class=\"language-javascript\"></span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span></code></pre>\n<p>4.首页气泡</p>\n<ul>\n<li>添加依赖<pre><code class=\"hljs sh\">npm install vue-canvas-effect -D</code></pre></li>\n<li>修改theme/vuepress-theme-reco/components/HomeBlog/index.vue<pre><code class=\"hljs html\"><span class=\"hljs-comment\">&lt;!-- 首页气泡 (在27行添加如下代码)--&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">component</span> <span class=\"hljs-attr\">v-if</span>=<span class=\"hljs-string\">&quot;bubbles&quot;</span></span>\n<span class=\"hljs-tag\">             <span class=\"hljs-attr\">:is</span>=<span class=\"hljs-string\">&quot;bubbles&quot;</span></span>\n<span class=\"hljs-tag\">             <span class=\"hljs-attr\">:options</span>=<span class=\"hljs-string\">&quot;options&quot;</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">component</span>&gt;</span></code></pre></li>\n<li>添加data<pre><code class=\"hljs javascript\"><span class=\"hljs-comment\">//首页气泡</span>\n    <span class=\"hljs-title function_\">data</span>(<span class=\"hljs-params\"></span>) &#123;\n        <span class=\"hljs-keyword\">return</span> &#123;\n            <span class=\"hljs-attr\">recoShow</span>: <span class=\"hljs-literal\">false</span>,\n            <span class=\"hljs-attr\">currentPage</span>: <span class=\"hljs-number\">1</span>,\n            <span class=\"hljs-attr\">tags</span>: [],\n            <span class=\"hljs-attr\">bubbles</span>: <span class=\"hljs-literal\">null</span>\n        &#125;\n    &#125;,</code></pre></li>\n<li>添加mounted<pre><code class=\"hljs javascript\"><span class=\"hljs-title function_\">mounted</span>(<span class=\"hljs-params\"></span>) &#123;\n       <span class=\"hljs-keyword\">import</span>(<span class=\"hljs-string\">&#x27;vue-canvas-effect/src/components/bubbles&#x27;</span>).<span class=\"hljs-title function_\">then</span>(<span class=\"hljs-function\"><span class=\"hljs-params\">module</span> =&gt;</span> &#123;\n           <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">bubbles</span> = <span class=\"hljs-variable language_\">module</span>.<span class=\"hljs-property\">default</span>\n       &#125;)\n       <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">recoShow</span> = <span class=\"hljs-literal\">true</span>\n       <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">_setPage</span>(<span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">_getStoragePage</span>())\n   &#125;,</code></pre></li>\n</ul>\n<p>5.修改置顶的样式</p>\n<ul>\n<li>修改./vuepress/theme/vuepress-theme-reco/NoteAbstractItem.vue<pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">v-if</span>=<span class=\"hljs-string\">&quot;item.frontmatter.sticky&quot;</span></span>\n<span class=\"hljs-tag\">              <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;settop&quot;</span>&gt;</span>置顶\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;title&quot;</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">reco-icon</span> <span class=\"hljs-attr\">v-if</span>=<span class=\"hljs-string\">&quot;item.frontmatter.keys&quot;</span></span>\n<span class=\"hljs-tag\">                       <span class=\"hljs-attr\">icon</span>=<span class=\"hljs-string\">&quot;reco-lock&quot;</span> /&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">router-link</span> <span class=\"hljs-attr\">:to</span>=<span class=\"hljs-string\">&quot;item.path&quot;</span>&gt;</span>&#123;&#123;item.title&#125;&#125;<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">router-link</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></code></pre></li>\n<li>添加css样式<pre><code class=\"hljs css\"><span class=\"hljs-selector-class\">.settop</span> &#123;\n        <span class=\"hljs-attribute\">position</span>: absolute;\n        <span class=\"hljs-attribute\">right</span>: <span class=\"hljs-number\">0</span>;\n        <span class=\"hljs-attribute\">top</span>: <span class=\"hljs-number\">0</span>;\n        <span class=\"hljs-attribute\">background</span>: $accentColor;\n        <span class=\"hljs-attribute\">font-size</span>: <span class=\"hljs-number\">0.6rem</span>;\n        <span class=\"hljs-attribute\">color</span>: <span class=\"hljs-number\">#fff</span>;\n        <span class=\"hljs-attribute\">transform</span>: <span class=\"hljs-built_in\">rotateZ</span>(<span class=\"hljs-number\">45deg</span>) <span class=\"hljs-built_in\">translateY</span>(-<span class=\"hljs-number\">55px</span>);\n        <span class=\"hljs-attribute\">padding</span>: <span class=\"hljs-number\">50px</span> <span class=\"hljs-number\">25px</span> <span class=\"hljs-number\">3px</span>;\n    &#125;</code></pre></li>\n</ul>\n<p>6.修改文章列表title的鼠标hover样式</p>\n<ul>\n<li>修改./vuepress/theme/vuepress-theme-reco/NoteAbstractItem.vue<pre><code class=\"hljs html\"><span class=\"hljs-comment\">&lt;!-- 添加class name 为 hover-underline-animation--&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;title hover-underline-animation&quot;</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">reco-icon</span> <span class=\"hljs-attr\">v-if</span>=<span class=\"hljs-string\">&quot;item.frontmatter.keys&quot;</span></span>\n<span class=\"hljs-tag\">                       <span class=\"hljs-attr\">icon</span>=<span class=\"hljs-string\">&quot;reco-lock&quot;</span> /&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">router-link</span> <span class=\"hljs-attr\">:to</span>=<span class=\"hljs-string\">&quot;item.path&quot;</span>&gt;</span>&#123;&#123;item.title&#125;&#125;<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">router-link</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></code></pre></li>\n<li>添加css样式<pre><code class=\"hljs css\"><span class=\"hljs-selector-class\">.hover-underline-animation</span> &#123;\n    <span class=\"hljs-attribute\">display</span>: inline-block;\n    <span class=\"hljs-attribute\">position</span>: relative;\n    <span class=\"hljs-attribute\">color</span>: $accentColor;\n&#125;\n\n<span class=\"hljs-selector-class\">.hover-underline-animation</span><span class=\"hljs-selector-pseudo\">:after</span> &#123;\n    <span class=\"hljs-attribute\">content</span>: <span class=\"hljs-string\">&#x27;&#x27;</span>;\n    <span class=\"hljs-attribute\">position</span>: absolute;\n    <span class=\"hljs-attribute\">width</span>: <span class=\"hljs-number\">100%</span>;\n    <span class=\"hljs-attribute\">transform</span>: <span class=\"hljs-built_in\">scaleX</span>(<span class=\"hljs-number\">0</span>);\n    <span class=\"hljs-attribute\">height</span>: <span class=\"hljs-number\">2px</span>;\n    <span class=\"hljs-attribute\">bottom</span>: <span class=\"hljs-number\">0</span>;\n    <span class=\"hljs-attribute\">left</span>: <span class=\"hljs-number\">0</span>;\n    <span class=\"hljs-attribute\">background-color</span>: $accentColor;\n    <span class=\"hljs-attribute\">transform-origin</span>: bottom right;\n    <span class=\"hljs-attribute\">transition</span>: transform <span class=\"hljs-number\">0.25s</span> ease-out;\n&#125;\n\n<span class=\"hljs-selector-class\">.hover-underline-animation</span><span class=\"hljs-selector-pseudo\">:hover</span><span class=\"hljs-selector-pseudo\">:after</span> &#123;\n    <span class=\"hljs-attribute\">transform</span>: <span class=\"hljs-built_in\">scaleX</span>(<span class=\"hljs-number\">1</span>);\n    <span class=\"hljs-attribute\">transform-origin</span>: bottom left;\n&#125;</code></pre></li>\n</ul>\n<p>7.首页添加每日诗词<br>:::tip<br>今日诗词 API 是一个可以返回一句古诗词名句的接口。它可以通过图片和 JSON 格式调用。今日诗词 API 根据不同地点、时间、节日、季节、天气、景观、城市进行智能推荐。<br>:::</p>\n<ul>\n<li>官方文档地址<br><a href=\"https://www.jinrishici.com/doc/\">https://www.jinrishici.com/doc/</a></li>\n<li>修改.vuepress/theme/vuepress-theme-reco/components/HomeBlog/index.vue文件<pre><code class=\"hljs html\"> <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ModuleTransition</span> <span class=\"hljs-attr\">delay</span>=<span class=\"hljs-string\">&quot;0.08&quot;</span>&gt;</span>\n                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span> <span class=\"hljs-attr\">v-if</span>=<span class=\"hljs-string\">&quot;recoShowModule &amp;&amp; $frontmatter.tagline !== null&quot;</span></span>\n<span class=\"hljs-tag\">                       <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;description&quot;</span>&gt;</span>\n                        &#123;&#123; $frontmatter.tagline || $description || &#x27;Welcome to your vuePress-theme-reco site&#x27; &#125;&#125;\n                    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">ModuleTransition</span>&gt;</span>\n<span class=\"hljs-comment\">&lt;!-- 加入如下代码即可 --&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ModuleTransition</span> <span class=\"hljs-attr\">delay</span>=<span class=\"hljs-string\">&quot;0.12&quot;</span>&gt;</span>\n        <span class=\"hljs-comment\">&lt;!-- marquee文字滚动标签</span>\n<span class=\"hljs-comment\">        marquee 参数：</span>\n<span class=\"hljs-comment\">                    BGColor：滚动文本框的背景颜色。</span>\n<span class=\"hljs-comment\">                    direction：滚动方向设置.</span>\n<span class=\"hljs-comment\">                        left - 从右向左。默认值。</span>\n<span class=\"hljs-comment\">                        right - 从左向右。</span>\n<span class=\"hljs-comment\">                        up - 向上。</span>\n<span class=\"hljs-comment\">                        down - 向下</span>\n<span class=\"hljs-comment\">                    scrolldelay： 设置每次滚动时的时间间隔（以毫秒为单位）。默认值为 85。 值越大，滚动速度越慢，通常不设置。</span>\n<span class=\"hljs-comment\">                          注意：除非指定 truespeed 值，否则将忽略任何小于 60 的值，并改为使用 60。</span>\n<span class=\"hljs-comment\">                    scrollamount：一次滚动总的时间量，数字越小滚动越慢。</span>\n<span class=\"hljs-comment\">                    behaviour：滚动的方式设置，三种取值：Scroll（循环滚动） lide（单次滚动）、Alternate（来回滚动）。</span>\n<span class=\"hljs-comment\">                    align：文字的对齐方式设置。可选择Middle(居中)、Bottom(居下)还是Top(居上)。</span>\n<span class=\"hljs-comment\">                    width：滚动文本框的宽度，输入一个数值后从后面的单选框选择in Pixels(按像素)或是in Percent(按百分比)。</span>\n<span class=\"hljs-comment\">                    height：滚动文本框的高度，输入一个数值后从后面的单选框选择in Pixels(按像素)或是in Percent(按百分比)。</span>\n<span class=\"hljs-comment\">                    loop：滚动次数。默认值-1，无限次循环</span>\n<span class=\"hljs-comment\">                    hspace、vspace：前后、上下的空行。</span>\n<span class=\"hljs-comment\">                    onMouseOver=&#x27;this.stop()&#x27; 鼠标放上去则暂停</span>\n<span class=\"hljs-comment\">                    onMouseOut=&#x27;this.start()&#x27; 鼠标移开继续滚动</span>\n<span class=\"hljs-comment\">        --&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">marquee</span> <span class=\"hljs-attr\">behavior</span>=<span class=\"hljs-string\">&quot;alternate&quot;</span> <span class=\"hljs-attr\">loop</span>=<span class=\"hljs-string\">&quot;2&quot;</span> <span class=\"hljs-attr\">direction</span>=<span class=\"hljs-string\">&quot;right&quot;</span> <span class=\"hljs-attr\">scrollamount</span>=<span class=\"hljs-string\">&quot;10&quot;</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">img</span> <span class=\"hljs-attr\">alt</span>=<span class=\"hljs-string\">&quot;今日诗词&quot;</span></span>\n<span class=\"hljs-tag\">                    <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">&quot;https://v2.jinrishici.com/one.svg&quot;</span></span>\n<span class=\"hljs-tag\">                    <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">&quot;max-width:100%; display: block; margin: 0 auto;&quot;</span> /&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">marquee</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">ModuleTransition</span>&gt;</span></code></pre>\n方式二:</li>\n<li>安装<pre><code class=\"hljs sh\">npm -i jinrishici --save</code></pre></li>\n<li>使用<br>修改.vuepress/theme/vuepress-theme-reco/components/HomeBlog/index.vue文件<pre><code class=\"hljs html\"><span class=\"hljs-comment\">&lt;!-- html部分 --&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ModuleTransition</span> <span class=\"hljs-attr\">delay</span>=<span class=\"hljs-string\">&quot;0.08&quot;</span>&gt;</span>\n                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span> <span class=\"hljs-attr\">v-if</span>=<span class=\"hljs-string\">&quot;recoShowModule &amp;&amp; $frontmatter.tagline !== null&quot;</span></span>\n<span class=\"hljs-tag\">                       <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;description&quot;</span>&gt;</span>\n                        &#123;&#123; $frontmatter.tagline || $description || &#x27;Welcome to your vuePress-theme-reco site&#x27; &#125;&#125;\n                    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">ModuleTransition</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ModuleTransition</span> <span class=\"hljs-attr\">delay</span>=<span class=\"hljs-string\">&quot;0.12&quot;</span>&gt;</span>\n                    <span class=\"hljs-comment\">&lt;!-- &lt;span class=&quot;jinrishici-sentence&quot;&gt;正在加载今日诗词....&lt;/span&gt; --&gt;</span>\n                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">marquee</span> &gt;</span>\n                        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span>&gt;</span>&#123;&#123;word&#125;&#125;<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span>\n                    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">marquee</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">ModuleTransition</span>&gt;</span>\n<span class=\"hljs-comment\">&lt;!-- javascript部分 --&gt;</span>\n data() &#123;\n        return &#123;\n            word: &#x27;正在加载今日诗词....&#x27;,\n        &#125;\n    &#125;,\n    methods: &#123;\n        paginationChange(page) &#123;\n            setTimeout(() =&gt; &#123;\n                window.scrollTo(0, this.heroHeight)\n            &#125;, 100)\n        &#125;,\n        getPagesByTags(tagInfo) &#123;\n            this.$router.push(&#123; path: tagInfo.path &#125;)\n        &#125;,\n        loadSentence: function () &#123;\n            jinrishici.load(result =&gt; &#123;\n                this.word = result.data.content\n            &#125;, err =&gt; &#123;\n                console.log(&quot;test&quot;);\n            &#125;)\n        &#125;\n    &#125;,\n    mounted: function () &#123; this.loadSentence() &#125;</code></pre></li>\n</ul>\n<p>8.修改主页背景为随机图片<br>修改.vuepress/theme/vuepress-theme-reco/components/HomeBlog/index.vue</p>\n<pre><code class=\"hljs javascript\"><span class=\"hljs-keyword\">const</span> url = instance.<span class=\"hljs-property\">$frontmatter</span>.<span class=\"hljs-property\">bgImage</span>\n            ? instance.$withBase(instance.<span class=\"hljs-property\">$frontmatter</span>.<span class=\"hljs-property\">bgImage</span>)\n            : <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;../../images/bg.jpg&#x27;</span>)\n<span class=\"hljs-comment\">// 将上面代码修改为以下形式</span>\n<span class=\"hljs-keyword\">const</span> url = instance.<span class=\"hljs-property\">$frontmatter</span>.<span class=\"hljs-property\">bgImage</span>\n            ? instance.$withBase(instance.<span class=\"hljs-property\">$frontmatter</span>.<span class=\"hljs-property\">bgImage</span>)\n            : <span class=\"hljs-string\">&#x27;https://picsum.photos/1600/900&#x27;</span></code></pre>\n<p>:::warning<br>若使用随机背景图片，README.md文件中bgImageStyle配置如下即可</p>\n<pre><code class=\"hljs css\">bgImageStyle: &#123;\n  <span class=\"hljs-attribute\">height</span>: <span class=\"hljs-string\">&#x27;95vh&#x27;</span>,\n&#125;</code></pre>\n<p>:::<br>9.使用v-view插件对图片进行放大缩小</p>\n<ul>\n<li>安装<pre><code class=\"hljs sh\">npm install v-viewer --save</code></pre></li>\n<li>使用<br>修改.vuepress/theme/vuepress-theme-reco/enhanceApp.js如下所示<pre><code class=\"hljs javascript\"><span class=\"hljs-comment\">/* eslint-disable no-proto */</span>\n<span class=\"hljs-keyword\">import</span> postMixin <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;@theme/mixins/posts&#x27;</span>\n<span class=\"hljs-keyword\">import</span> localMixin <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;@theme/mixins/locales&#x27;</span>\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-title class_\">Vue</span> <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;vue&#x27;</span>;\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-title class_\">Viewer</span> <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;v-viewer&#x27;</span>\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">&#x27;viewerjs/dist/viewer.css&#x27;</span>\n<span class=\"hljs-keyword\">import</span> &#123; interceptRouterError, fixRouterError404 &#125; <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;@theme/helpers/other&#x27;</span>\n<span class=\"hljs-keyword\">import</span> &#123; install &#125; <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;vue-demi&#x27;</span>\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> (&#123;\n  <span class=\"hljs-title class_\">Vue</span>,\n  siteData,\n  isServer,\n  router\n&#125;) =&gt; &#123;\n  <span class=\"hljs-title function_\">install</span>(<span class=\"hljs-title class_\">Vue</span>)\n  <span class=\"hljs-title class_\">Vue</span>.<span class=\"hljs-title function_\">mixin</span>(postMixin)\n  <span class=\"hljs-title class_\">Vue</span>.<span class=\"hljs-title function_\">mixin</span>(localMixin)\n  <span class=\"hljs-comment\">// if (!isServer) &#123;</span>\n  <span class=\"hljs-comment\">//   addScriptToHead(&#x27;//kit.fontawesome.com/51b01de608.js&#x27;)</span>\n  <span class=\"hljs-comment\">//   registerCodeThemeCss(siteData.themeConfig.codeTheme)</span>\n  <span class=\"hljs-comment\">// &#125;</span>\n  <span class=\"hljs-title class_\">Vue</span>.<span class=\"hljs-title function_\">use</span>(<span class=\"hljs-title class_\">Viewer</span>)\n  <span class=\"hljs-title class_\">Viewer</span>.<span class=\"hljs-title function_\">setDefaults</span>(&#123;\n    <span class=\"hljs-title class_\">Options</span>: &#123; <span class=\"hljs-string\">&#x27;inline&#x27;</span>: <span class=\"hljs-literal\">true</span>, <span class=\"hljs-string\">&#x27;button&#x27;</span>: <span class=\"hljs-literal\">true</span>, <span class=\"hljs-string\">&#x27;navbar&#x27;</span>: <span class=\"hljs-literal\">true</span>, <span class=\"hljs-string\">&#x27;title&#x27;</span>: <span class=\"hljs-literal\">true</span>, <span class=\"hljs-string\">&#x27;toolbar&#x27;</span>: <span class=\"hljs-literal\">true</span>, <span class=\"hljs-string\">&#x27;tooltip&#x27;</span>: <span class=\"hljs-literal\">true</span>, <span class=\"hljs-string\">&#x27;movable&#x27;</span>: <span class=\"hljs-literal\">true</span>, <span class=\"hljs-string\">&#x27;zoomable&#x27;</span>: <span class=\"hljs-literal\">true</span>, <span class=\"hljs-string\">&#x27;rotatable&#x27;</span>: <span class=\"hljs-literal\">true</span>, <span class=\"hljs-string\">&#x27;scalable&#x27;</span>: <span class=\"hljs-literal\">true</span>, <span class=\"hljs-string\">&#x27;transition&#x27;</span>: <span class=\"hljs-literal\">true</span>, <span class=\"hljs-string\">&#x27;fullscreen&#x27;</span>: <span class=\"hljs-literal\">true</span>, <span class=\"hljs-string\">&#x27;keyboard&#x27;</span>: <span class=\"hljs-literal\">true</span>, <span class=\"hljs-string\">&#x27;url&#x27;</span>: <span class=\"hljs-string\">&#x27;data-source&#x27;</span> &#125;\n  &#125;)\n\n  <span class=\"hljs-title function_\">interceptRouterError</span>(router)\n  <span class=\"hljs-title function_\">fixRouterError404</span>(router)\n&#125;</code></pre>\n修改.vuepress/theme/vuepress-theme-reco/components/Page.vue如下<pre><code class=\"hljs html\"><span class=\"hljs-comment\">&lt;!-- session添加v-viewer指令 --&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">section</span> <span class=\"hljs-attr\">v-show</span>=<span class=\"hljs-string\">&quot;recoShowModule&quot;</span></span>\n<span class=\"hljs-tag\">                     <span class=\"hljs-attr\">v-viewer</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;page-title&quot;</span>&gt;</span>\n                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h1</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;title&quot;</span>&gt;</span>&#123;&#123;$page.title&#125;&#125;<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h1</span>&gt;</span>\n                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">PageInfo</span> <span class=\"hljs-attr\">:pageInfo</span>=<span class=\"hljs-string\">&quot;$page&quot;</span></span>\n<span class=\"hljs-tag\">                              <span class=\"hljs-attr\">:showAccessNumber</span>=<span class=\"hljs-string\">&quot;showAccessNumber&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">PageInfo</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Content</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;theme-reco-content&quot;</span> /&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">section</span>&gt;</span></code></pre>\n:::warning<br>这里需要关闭vuepress内置的@vuepress/plugin-medium-zoom<pre><code class=\"hljs javascript\"><span class=\"hljs-comment\">// 只需将 Options 设置成 false 便可禁用该插件</span>\n<span class=\"hljs-variable language_\">module</span>.<span class=\"hljs-property\">exports</span> = &#123;\n  <span class=\"hljs-attr\">plugins</span>: [\n    [<span class=\"hljs-string\">&quot;@vuepress/plugin-medium-zoom&quot;</span>, <span class=\"hljs-literal\">false</span>] <span class=\"hljs-comment\">// disabled.</span>\n  ]\n&#125;;</code></pre>\n更新:<br>由于本人是将vuepress-theme-reco主题下载到本地进行修改，所以以上方式并不能关闭vuepress/plugin-medium-zoom插件<br>解决方式:修改.vuepress/theme/vuepress-theme-reco/index.js如下<pre><code class=\"hljs awk\">plugins: [\n   <span class=\"hljs-string\">&#x27;@vuepress-reco/back-to-top&#x27;</span>,\n   <span class=\"hljs-string\">&#x27;@vuepress-reco/loading-page&#x27;</span>,\n   <span class=\"hljs-string\">&#x27;@vuepress-reco/pagation&#x27;</span>,\n   <span class=\"hljs-string\">&#x27;@vuepress-reco/comments&#x27;</span>,\n   <span class=\"hljs-string\">&#x27;@vuepress/active-header-links&#x27;</span>,\n   <span class=\"hljs-regexp\">//</span> [<span class=\"hljs-string\">&#x27;@vuepress/medium-zoom&#x27;</span>, &#123;\n   <span class=\"hljs-regexp\">//</span>   selector: <span class=\"hljs-string\">&#x27;.theme-reco-content :not(a) &gt; img&#x27;</span>\n   <span class=\"hljs-regexp\">//</span> &#125;],</code></pre>\n只需要将vuepress/medium-zoom插件注释或者删除即可<br>:::</li>\n</ul>\n<h2 id=\"插件不生效\"><a href=\"#插件不生效\" class=\"headerlink\" title=\"插件不生效\"></a>插件不生效</h2><p>在config.js中配置的插件未生效，于是本人根据vuepress加载流程,将插件配置放入了vuepress-theme-reco的index.js中，此时插件生效。</p>\n<h2 id=\"部署\"><a href=\"#部署\" class=\"headerlink\" title=\"部署\"></a>部署</h2><ul>\n<li>nginx配置文件<pre><code class=\"hljs nginx\"><span class=\"hljs-attribute\">user</span>  nginx;\n<span class=\"hljs-attribute\">worker_processes</span>  <span class=\"hljs-number\">1</span>;\n\n<span class=\"hljs-attribute\">error_log</span>  /var/log/nginx/<span class=\"hljs-literal\">error</span>.log <span class=\"hljs-literal\">warn</span>;\n<span class=\"hljs-attribute\">pid</span>        /var/run/nginx.pid;\n\n\n<span class=\"hljs-section\">events</span> &#123;\n    <span class=\"hljs-attribute\">worker_connections</span>  <span class=\"hljs-number\">1024</span>;\n&#125;\n\n\n<span class=\"hljs-section\">http</span> &#123;\n\t<span class=\"hljs-comment\">#开启gzip压缩加速</span>\n \t<span class=\"hljs-attribute\">gzip</span> <span class=\"hljs-literal\">on</span>; \n \t<span class=\"hljs-comment\">#低于1kb的资源不压缩</span>\n  \t<span class=\"hljs-attribute\">gzip_min_length</span> <span class=\"hljs-number\">1k</span>; \n  \t <span class=\"hljs-comment\">#压缩级别【1-9】，越大压缩率越高，同时消耗cpu资源也越多，建议设置在4左右。</span>\n  \t<span class=\"hljs-attribute\">gzip_comp_level</span> <span class=\"hljs-number\">4</span>;\n  \t<span class=\"hljs-comment\">#需要压缩哪些响应类型的资源，多个空格隔开。不建议压缩图片</span>\n  \t<span class=\"hljs-attribute\">gzip_types</span> text/plain application/javascript application/x-javascript text/javascript text/xml text/css application/json;  \n  \t <span class=\"hljs-comment\">#配置禁用gzip条件，支持正则。此处表示ie6及以下不启用gzip（因为ie低版本不支持）</span>\n  \t<span class=\"hljs-attribute\">gzip_disable</span> <span class=\"hljs-string\">&quot;MSIE [1-6]\\.&quot;</span>; \n  \t<span class=\"hljs-comment\">#是否添加“Vary: Accept-Encoding”响应头</span>\n  \t<span class=\"hljs-attribute\">gzip_vary</span> <span class=\"hljs-literal\">on</span>;  \n\n    <span class=\"hljs-attribute\">include</span>       /etc/nginx/mime.types;\n    <span class=\"hljs-attribute\">default_type</span>  application/octet-stream;\n\n    <span class=\"hljs-attribute\">log_format</span>  main  <span class=\"hljs-string\">&#x27;<span class=\"hljs-variable\">$remote_addr</span> - <span class=\"hljs-variable\">$remote_user</span> [<span class=\"hljs-variable\">$time_local</span>] &quot;<span class=\"hljs-variable\">$request</span>&quot; &#x27;</span>\n                      <span class=\"hljs-string\">&#x27;<span class=\"hljs-variable\">$status</span> <span class=\"hljs-variable\">$body_bytes_sent</span> &quot;<span class=\"hljs-variable\">$http_referer</span>&quot; &#x27;</span>\n                      <span class=\"hljs-string\">&#x27;&quot;<span class=\"hljs-variable\">$http_user_agent</span>&quot; &quot;<span class=\"hljs-variable\">$http_x_forwarded_for</span>&quot;&#x27;</span>;\n\n    <span class=\"hljs-attribute\">access_log</span>  /var/log/nginx/access.log  main;\n\n    <span class=\"hljs-attribute\">sendfile</span>        <span class=\"hljs-literal\">on</span>;\n    <span class=\"hljs-comment\">#tcp_nopush     on;</span>\n\n    <span class=\"hljs-attribute\">keepalive_timeout</span>  <span class=\"hljs-number\">65</span>;\n\t<span class=\"hljs-section\">server</span> &#123;\n\t\t<span class=\"hljs-attribute\">listen</span>  <span class=\"hljs-number\">80</span>;\n\t\t<span class=\"hljs-attribute\">server_name</span> blog;\n \n\t\t<span class=\"hljs-section\">location</span> /blog_nation &#123;\n\t\t\t<span class=\"hljs-attribute\">root</span> /usr/share/nginx/html/blog_nation/;\n\t\t\t<span class=\"hljs-attribute\">index</span>  index.html index.htm;\n\t\t&#125;\n\t\t<span class=\"hljs-attribute\">error_page</span> <span class=\"hljs-number\">500</span> <span class=\"hljs-number\">502</span> <span class=\"hljs-number\">503</span> <span class=\"hljs-number\">504</span> /50x.html;\n\t\t<span class=\"hljs-section\">location</span> = /50x.html &#123;\n\t\t\t<span class=\"hljs-attribute\">root</span> /usr/share/nginx/html;\n\t\t&#125;\n\t&#125;\n&#125;</code></pre>\n那如何寻找没有添加的 type 呢？我们打开 Chrome 的「开发者工具」，打开自己的网站，对于「Network」中请求自己网站的包，看是否启动 Gzip，如果「Response Headers」显示「Accept-Ranges: bytes」则表示该包没有开启加速，可以将「Content-Type」后面的值填入「gzip_types」并且使用空格隔开。</li>\n</ul>\n"},{"title":"【MySQL学习笔记】-存储引擎","excerpt":"MySQL","index_img":"https://img0.baidu.com/it/u=2907908661,1514344954&fm=253&fmt=auto&app=138&f=JPEG?w=400&h=288","abbrlink":"7b25d017","date":"2023-02-16T14:42:29.000Z","_content":"# 一、mysql存储引擎概述\n## 1.1 存储引擎\nMySQL中的数据用各种不同的技术存储在文件（或者内存）中。\n这些技术中的每一种技术都使用不同的存储机制、索引技巧、锁定水平并且最终提供广泛的不同的功能和能力。\n通过选择不同的技术，你能够获得额外的速度或者功能，从而改善你的应用的整体功能。\n\n例如，如果研究大量的临时数据，你也许需要使用内存存储引擎。内存存储引擎能够在内存中存储所有的表格数据。\n\n这些不同的技术以及配套的相关功能在MySQL中被称作存储引擎(也称作表类型)。\n\nMySQL默认配置了许多不同的存储引擎，可以预先设置或者在MySQL服务器中启用。你可以选择适用于服务器、数据库和表格的存储引擎，以便在选择如何存储你的信息、如何检索这些信息以及你需要你的数据结合什么性能和功能的时候为你提供最大的灵活性。\n\n选择如何存储和检索你的数据的这种灵活性是MySQL为什么如此受欢迎的主要原因。其它数据库系统 (包括大多数商业选择)仅支持一种类型的数据存储 。\n","source":"_posts/【MySQL学习笔记】-存储引擎.md","raw":"---\ntitle: 【MySQL学习笔记】-存储引擎\nexcerpt: MySQL\ntags:\n  - MySQL\n  - 存储引擎\ncategories:\n  - 笔记\nindex_img: https://img0.baidu.com/it/u=2907908661,1514344954&fm=253&fmt=auto&app=138&f=JPEG?w=400&h=288\nabbrlink: 7b25d017\ndate: 2023-02-16 22:42:29\n---\n# 一、mysql存储引擎概述\n## 1.1 存储引擎\nMySQL中的数据用各种不同的技术存储在文件（或者内存）中。\n这些技术中的每一种技术都使用不同的存储机制、索引技巧、锁定水平并且最终提供广泛的不同的功能和能力。\n通过选择不同的技术，你能够获得额外的速度或者功能，从而改善你的应用的整体功能。\n\n例如，如果研究大量的临时数据，你也许需要使用内存存储引擎。内存存储引擎能够在内存中存储所有的表格数据。\n\n这些不同的技术以及配套的相关功能在MySQL中被称作存储引擎(也称作表类型)。\n\nMySQL默认配置了许多不同的存储引擎，可以预先设置或者在MySQL服务器中启用。你可以选择适用于服务器、数据库和表格的存储引擎，以便在选择如何存储你的信息、如何检索这些信息以及你需要你的数据结合什么性能和功能的时候为你提供最大的灵活性。\n\n选择如何存储和检索你的数据的这种灵活性是MySQL为什么如此受欢迎的主要原因。其它数据库系统 (包括大多数商业选择)仅支持一种类型的数据存储 。\n","slug":"【MySQL学习笔记】-存储引擎","published":1,"updated":"2023-03-07T07:34:06.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clhrpaia8000ceq6qg1ubg28l","content":"<h1 id=\"一、mysql存储引擎概述\"><a href=\"#一、mysql存储引擎概述\" class=\"headerlink\" title=\"一、mysql存储引擎概述\"></a>一、mysql存储引擎概述</h1><h2 id=\"1-1-存储引擎\"><a href=\"#1-1-存储引擎\" class=\"headerlink\" title=\"1.1 存储引擎\"></a>1.1 存储引擎</h2><p>MySQL中的数据用各种不同的技术存储在文件（或者内存）中。<br>这些技术中的每一种技术都使用不同的存储机制、索引技巧、锁定水平并且最终提供广泛的不同的功能和能力。<br>通过选择不同的技术，你能够获得额外的速度或者功能，从而改善你的应用的整体功能。</p>\n<p>例如，如果研究大量的临时数据，你也许需要使用内存存储引擎。内存存储引擎能够在内存中存储所有的表格数据。</p>\n<p>这些不同的技术以及配套的相关功能在MySQL中被称作存储引擎(也称作表类型)。</p>\n<p>MySQL默认配置了许多不同的存储引擎，可以预先设置或者在MySQL服务器中启用。你可以选择适用于服务器、数据库和表格的存储引擎，以便在选择如何存储你的信息、如何检索这些信息以及你需要你的数据结合什么性能和功能的时候为你提供最大的灵活性。</p>\n<p>选择如何存储和检索你的数据的这种灵活性是MySQL为什么如此受欢迎的主要原因。其它数据库系统 (包括大多数商业选择)仅支持一种类型的数据存储 。</p>\n","site":{"data":{}},"more":"<h1 id=\"一、mysql存储引擎概述\"><a href=\"#一、mysql存储引擎概述\" class=\"headerlink\" title=\"一、mysql存储引擎概述\"></a>一、mysql存储引擎概述</h1><h2 id=\"1-1-存储引擎\"><a href=\"#1-1-存储引擎\" class=\"headerlink\" title=\"1.1 存储引擎\"></a>1.1 存储引擎</h2><p>MySQL中的数据用各种不同的技术存储在文件（或者内存）中。<br>这些技术中的每一种技术都使用不同的存储机制、索引技巧、锁定水平并且最终提供广泛的不同的功能和能力。<br>通过选择不同的技术，你能够获得额外的速度或者功能，从而改善你的应用的整体功能。</p>\n<p>例如，如果研究大量的临时数据，你也许需要使用内存存储引擎。内存存储引擎能够在内存中存储所有的表格数据。</p>\n<p>这些不同的技术以及配套的相关功能在MySQL中被称作存储引擎(也称作表类型)。</p>\n<p>MySQL默认配置了许多不同的存储引擎，可以预先设置或者在MySQL服务器中启用。你可以选择适用于服务器、数据库和表格的存储引擎，以便在选择如何存储你的信息、如何检索这些信息以及你需要你的数据结合什么性能和功能的时候为你提供最大的灵活性。</p>\n<p>选择如何存储和检索你的数据的这种灵活性是MySQL为什么如此受欢迎的主要原因。其它数据库系统 (包括大多数商业选择)仅支持一种类型的数据存储 。</p>\n"},{"title":"个人博客搭建","excerpt":"本文章详细介绍了博客的搭建教程","index_img":"/img/index.jpg","abbrlink":"9639fcc6","date":"2023-05-11T13:04:27.000Z","_content":"# 环境搭建\n## Docker\n```shell\n1、启动Docker 守护进程\n\nsystemctl daemon-reload\n\n2、Docker启动命令：\n\nsystemctl start docker\n\n3、查看docker服务是否启动\n\nps -ef |grep docker\n\n4、查看docker启动的服务：\n\ndocker ps\n\n其他：\n\n重启docker服务\n\nsystemctl restart docker\n\n停止docker服务\n\nsystemctl stop docker\n```\n## MySQL\n### cnf配置文件\n```\n[client]\n\n#socket = /usr/mysql/mysqld.sock\n\ndefault-character-set = utf8mb4\n\n[mysqld]\n\n#pid-file        = /var/run/mysqld/mysqld.pid\n\n#socket          = /var/run/mysqld/mysqld.sock\n\n#datadir         = /var/lib/mysql\n\n#socket = /usr/mysql/mysqld.sock\n\n#pid-file = /usr/mysql/mysqld.pid\n\ndatadir = /docker/mysql/data\n\ncharacter_set_server = utf8mb4\n\ncollation_server = utf8mb4_bin\n\nsecure-file-priv= /var/lib/mysql\n\n# Disabling symbolic-links is recommended to prevent assorted security risks\n\nsymbolic-links=0\n\n# Custom config should go here\n\n!includedir /etc/mysql/conf.d/\n\n```\n### docker-compose.yml\n```\nversion: '3.1'\nservices:\n  db:\n    image: mysql:8.0.16\n    restart: always\n    container_name: MySQL8\n    environment:\n      MYSQL_ROOT_PASSWORD: NpgurqiVy86zihLD\n    command:\n      --default-authentication-plugin=mysql_native_password\n      --character-set-server=utf8mb4\n      --collation-server=utf8mb4_general_ci\n      --explicit_defaults_for_timestamp=true\n      --lower_case_table_names=1\n    ports:\n      - 3306:3306\n    volumes:\n      - ./data:/var/lib/mysql\n      - ./conf:/etc/mysql/conf.d\n      - ./logs:/logs\n```\n## Redis\n### docker-compose.yml\n```\nversion: '3.1'\nservices:\n    redis:\n      image: redis\n      container_name: sx_redis\n      command: redis-server --requirepass DuHJxnb6mnGmG2N2\n      ports:\n        - \"6379:6379\"\n      volumes:\n        - \"/local/docker/redis/data:/data\"\n        - \"/local/docker/redis/conf:/etc/redis/redis.conf\"\n        - \"/local/docker/redis/log:/logs\"\n```\n\n","source":"_posts/个人博客搭建.md","raw":"---\ntitle: 个人博客搭建\nexcerpt: 本文章详细介绍了博客的搭建教程\ntags:\n  - 博客\ncategories:\n  - 教程\nindex_img: /img/index.jpg\nabbrlink: 9639fcc6\ndate: 2023-05-11 21:04:27\n---\n# 环境搭建\n## Docker\n```shell\n1、启动Docker 守护进程\n\nsystemctl daemon-reload\n\n2、Docker启动命令：\n\nsystemctl start docker\n\n3、查看docker服务是否启动\n\nps -ef |grep docker\n\n4、查看docker启动的服务：\n\ndocker ps\n\n其他：\n\n重启docker服务\n\nsystemctl restart docker\n\n停止docker服务\n\nsystemctl stop docker\n```\n## MySQL\n### cnf配置文件\n```\n[client]\n\n#socket = /usr/mysql/mysqld.sock\n\ndefault-character-set = utf8mb4\n\n[mysqld]\n\n#pid-file        = /var/run/mysqld/mysqld.pid\n\n#socket          = /var/run/mysqld/mysqld.sock\n\n#datadir         = /var/lib/mysql\n\n#socket = /usr/mysql/mysqld.sock\n\n#pid-file = /usr/mysql/mysqld.pid\n\ndatadir = /docker/mysql/data\n\ncharacter_set_server = utf8mb4\n\ncollation_server = utf8mb4_bin\n\nsecure-file-priv= /var/lib/mysql\n\n# Disabling symbolic-links is recommended to prevent assorted security risks\n\nsymbolic-links=0\n\n# Custom config should go here\n\n!includedir /etc/mysql/conf.d/\n\n```\n### docker-compose.yml\n```\nversion: '3.1'\nservices:\n  db:\n    image: mysql:8.0.16\n    restart: always\n    container_name: MySQL8\n    environment:\n      MYSQL_ROOT_PASSWORD: NpgurqiVy86zihLD\n    command:\n      --default-authentication-plugin=mysql_native_password\n      --character-set-server=utf8mb4\n      --collation-server=utf8mb4_general_ci\n      --explicit_defaults_for_timestamp=true\n      --lower_case_table_names=1\n    ports:\n      - 3306:3306\n    volumes:\n      - ./data:/var/lib/mysql\n      - ./conf:/etc/mysql/conf.d\n      - ./logs:/logs\n```\n## Redis\n### docker-compose.yml\n```\nversion: '3.1'\nservices:\n    redis:\n      image: redis\n      container_name: sx_redis\n      command: redis-server --requirepass DuHJxnb6mnGmG2N2\n      ports:\n        - \"6379:6379\"\n      volumes:\n        - \"/local/docker/redis/data:/data\"\n        - \"/local/docker/redis/conf:/etc/redis/redis.conf\"\n        - \"/local/docker/redis/log:/logs\"\n```\n\n","slug":"个人博客搭建","published":1,"updated":"2023-05-15T05:01:23.666Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clhrpaia9000feq6qhqfkfloc","content":"<h1 id=\"环境搭建\"><a href=\"#环境搭建\" class=\"headerlink\" title=\"环境搭建\"></a>环境搭建</h1><h2 id=\"Docker\"><a href=\"#Docker\" class=\"headerlink\" title=\"Docker\"></a>Docker</h2><div class=\"code-wrapper\"><pre><code class=\"hljs shell\">1、启动Docker 守护进程\n\nsystemctl daemon-reload\n\n2、Docker启动命令：\n\nsystemctl start docker\n\n3、查看docker服务是否启动\n\nps -ef |grep docker\n\n4、查看docker启动的服务：\n\ndocker ps\n\n其他：\n\n重启docker服务\n\nsystemctl restart docker\n\n停止docker服务\n\nsystemctl stop docker</code></pre></div>\n<h2 id=\"MySQL\"><a href=\"#MySQL\" class=\"headerlink\" title=\"MySQL\"></a>MySQL</h2><h3 id=\"cnf配置文件\"><a href=\"#cnf配置文件\" class=\"headerlink\" title=\"cnf配置文件\"></a>cnf配置文件</h3><div class=\"code-wrapper\"><pre><code class=\"hljs gradle\">[client]\n\n#socket = <span class=\"hljs-regexp\">/usr/my</span>sql/mysqld.sock\n\n<span class=\"hljs-keyword\">default</span>-character-set = utf8mb4\n\n[mysqld]\n\n#pid-<span class=\"hljs-keyword\">file</span>        = <span class=\"hljs-regexp\">/var/</span>run<span class=\"hljs-regexp\">/mysqld/my</span>sqld.pid\n\n#socket          = <span class=\"hljs-regexp\">/var/</span>run<span class=\"hljs-regexp\">/mysqld/my</span>sqld.sock\n\n#datadir         = <span class=\"hljs-regexp\">/var/</span>lib/mysql\n\n#socket = <span class=\"hljs-regexp\">/usr/my</span>sql/mysqld.sock\n\n#pid-<span class=\"hljs-keyword\">file</span> = <span class=\"hljs-regexp\">/usr/my</span>sql/mysqld.pid\n\ndatadir = <span class=\"hljs-regexp\">/docker/my</span>sql/data\n\ncharacter_set_server = utf8mb4\n\ncollation_server = utf8mb4_bin\n\nsecure-<span class=\"hljs-keyword\">file</span>-priv= <span class=\"hljs-regexp\">/var/</span>lib/mysql\n\n# Disabling symbolic-links is recommended to prevent assorted security risks\n\nsymbolic-links=<span class=\"hljs-number\">0</span>\n\n# Custom config should go here\n\n!includedir <span class=\"hljs-regexp\">/etc/my</span>sql<span class=\"hljs-regexp\">/conf.d/</span>\n</code></pre></div>\n<h3 id=\"docker-compose-yml\"><a href=\"#docker-compose-yml\" class=\"headerlink\" title=\"docker-compose.yml\"></a>docker-compose.yml</h3><div class=\"code-wrapper\"><pre><code class=\"hljs nestedtext\"><span class=\"hljs-attribute\">version</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&#x27;3.1&#x27;</span>\n<span class=\"hljs-attribute\">services</span><span class=\"hljs-punctuation\">:</span>\n  <span class=\"hljs-attribute\">db</span><span class=\"hljs-punctuation\">:</span>\n    <span class=\"hljs-attribute\">image</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">mysql:8.0.16</span>\n    <span class=\"hljs-attribute\">restart</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">always</span>\n    <span class=\"hljs-attribute\">container_name</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">MySQL8</span>\n    <span class=\"hljs-attribute\">environment</span><span class=\"hljs-punctuation\">:</span>\n      <span class=\"hljs-attribute\">MYSQL_ROOT_PASSWORD</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">NpgurqiVy86zihLD</span>\n    <span class=\"hljs-attribute\">command</span><span class=\"hljs-punctuation\">:</span>\n      <span class=\"hljs-attribute\">--default-authentication-plugin=mysql_native_password</span>\n<span class=\"hljs-attribute\">      --character-set-server=utf8mb4</span>\n<span class=\"hljs-attribute\">      --collation-server=utf8mb4_general_ci</span>\n<span class=\"hljs-attribute\">      --explicit_defaults_for_timestamp=true</span>\n<span class=\"hljs-attribute\">      --lower_case_table_names=1</span>\n<span class=\"hljs-attribute\">    ports</span><span class=\"hljs-punctuation\">:</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">3306:3306</span>\n    <span class=\"hljs-attribute\">volumes</span><span class=\"hljs-punctuation\">:</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">./data:/var/lib/mysql</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">./conf:/etc/mysql/conf.d</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">./logs:/logs</span></code></pre></div>\n<h2 id=\"Redis\"><a href=\"#Redis\" class=\"headerlink\" title=\"Redis\"></a>Redis</h2><h3 id=\"docker-compose-yml-1\"><a href=\"#docker-compose-yml-1\" class=\"headerlink\" title=\"docker-compose.yml\"></a>docker-compose.yml</h3><div class=\"code-wrapper\"><pre><code class=\"hljs nestedtext\"><span class=\"hljs-attribute\">version</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&#x27;3.1&#x27;</span>\n<span class=\"hljs-attribute\">services</span><span class=\"hljs-punctuation\">:</span>\n    <span class=\"hljs-attribute\">redis</span><span class=\"hljs-punctuation\">:</span>\n      <span class=\"hljs-attribute\">image</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">redis</span>\n      <span class=\"hljs-attribute\">container_name</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">sx_redis</span>\n      <span class=\"hljs-attribute\">command</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">redis-server --requirepass DuHJxnb6mnGmG2N2</span>\n      <span class=\"hljs-attribute\">ports</span><span class=\"hljs-punctuation\">:</span>\n        <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">&quot;6379:6379&quot;</span>\n      <span class=\"hljs-attribute\">volumes</span><span class=\"hljs-punctuation\">:</span>\n        <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">&quot;/local/docker/redis/data:/data&quot;</span>\n        <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">&quot;/local/docker/redis/conf:/etc/redis/redis.conf&quot;</span>\n        <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">&quot;/local/docker/redis/log:/logs&quot;</span></code></pre></div>\n\n","site":{"data":{}},"more":"<h1 id=\"环境搭建\"><a href=\"#环境搭建\" class=\"headerlink\" title=\"环境搭建\"></a>环境搭建</h1><h2 id=\"Docker\"><a href=\"#Docker\" class=\"headerlink\" title=\"Docker\"></a>Docker</h2><pre><code class=\"hljs shell\">1、启动Docker 守护进程\n\nsystemctl daemon-reload\n\n2、Docker启动命令：\n\nsystemctl start docker\n\n3、查看docker服务是否启动\n\nps -ef |grep docker\n\n4、查看docker启动的服务：\n\ndocker ps\n\n其他：\n\n重启docker服务\n\nsystemctl restart docker\n\n停止docker服务\n\nsystemctl stop docker</code></pre>\n<h2 id=\"MySQL\"><a href=\"#MySQL\" class=\"headerlink\" title=\"MySQL\"></a>MySQL</h2><h3 id=\"cnf配置文件\"><a href=\"#cnf配置文件\" class=\"headerlink\" title=\"cnf配置文件\"></a>cnf配置文件</h3><pre><code class=\"hljs gradle\">[client]\n\n#socket = <span class=\"hljs-regexp\">/usr/my</span>sql/mysqld.sock\n\n<span class=\"hljs-keyword\">default</span>-character-set = utf8mb4\n\n[mysqld]\n\n#pid-<span class=\"hljs-keyword\">file</span>        = <span class=\"hljs-regexp\">/var/</span>run<span class=\"hljs-regexp\">/mysqld/my</span>sqld.pid\n\n#socket          = <span class=\"hljs-regexp\">/var/</span>run<span class=\"hljs-regexp\">/mysqld/my</span>sqld.sock\n\n#datadir         = <span class=\"hljs-regexp\">/var/</span>lib/mysql\n\n#socket = <span class=\"hljs-regexp\">/usr/my</span>sql/mysqld.sock\n\n#pid-<span class=\"hljs-keyword\">file</span> = <span class=\"hljs-regexp\">/usr/my</span>sql/mysqld.pid\n\ndatadir = <span class=\"hljs-regexp\">/docker/my</span>sql/data\n\ncharacter_set_server = utf8mb4\n\ncollation_server = utf8mb4_bin\n\nsecure-<span class=\"hljs-keyword\">file</span>-priv= <span class=\"hljs-regexp\">/var/</span>lib/mysql\n\n# Disabling symbolic-links is recommended to prevent assorted security risks\n\nsymbolic-links=<span class=\"hljs-number\">0</span>\n\n# Custom config should go here\n\n!includedir <span class=\"hljs-regexp\">/etc/my</span>sql<span class=\"hljs-regexp\">/conf.d/</span>\n</code></pre>\n<h3 id=\"docker-compose-yml\"><a href=\"#docker-compose-yml\" class=\"headerlink\" title=\"docker-compose.yml\"></a>docker-compose.yml</h3><pre><code class=\"hljs nestedtext\"><span class=\"hljs-attribute\">version</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&#x27;3.1&#x27;</span>\n<span class=\"hljs-attribute\">services</span><span class=\"hljs-punctuation\">:</span>\n  <span class=\"hljs-attribute\">db</span><span class=\"hljs-punctuation\">:</span>\n    <span class=\"hljs-attribute\">image</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">mysql:8.0.16</span>\n    <span class=\"hljs-attribute\">restart</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">always</span>\n    <span class=\"hljs-attribute\">container_name</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">MySQL8</span>\n    <span class=\"hljs-attribute\">environment</span><span class=\"hljs-punctuation\">:</span>\n      <span class=\"hljs-attribute\">MYSQL_ROOT_PASSWORD</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">NpgurqiVy86zihLD</span>\n    <span class=\"hljs-attribute\">command</span><span class=\"hljs-punctuation\">:</span>\n      <span class=\"hljs-attribute\">--default-authentication-plugin=mysql_native_password</span>\n<span class=\"hljs-attribute\">      --character-set-server=utf8mb4</span>\n<span class=\"hljs-attribute\">      --collation-server=utf8mb4_general_ci</span>\n<span class=\"hljs-attribute\">      --explicit_defaults_for_timestamp=true</span>\n<span class=\"hljs-attribute\">      --lower_case_table_names=1</span>\n<span class=\"hljs-attribute\">    ports</span><span class=\"hljs-punctuation\">:</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">3306:3306</span>\n    <span class=\"hljs-attribute\">volumes</span><span class=\"hljs-punctuation\">:</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">./data:/var/lib/mysql</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">./conf:/etc/mysql/conf.d</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">./logs:/logs</span></code></pre>\n<h2 id=\"Redis\"><a href=\"#Redis\" class=\"headerlink\" title=\"Redis\"></a>Redis</h2><h3 id=\"docker-compose-yml-1\"><a href=\"#docker-compose-yml-1\" class=\"headerlink\" title=\"docker-compose.yml\"></a>docker-compose.yml</h3><pre><code class=\"hljs nestedtext\"><span class=\"hljs-attribute\">version</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&#x27;3.1&#x27;</span>\n<span class=\"hljs-attribute\">services</span><span class=\"hljs-punctuation\">:</span>\n    <span class=\"hljs-attribute\">redis</span><span class=\"hljs-punctuation\">:</span>\n      <span class=\"hljs-attribute\">image</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">redis</span>\n      <span class=\"hljs-attribute\">container_name</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">sx_redis</span>\n      <span class=\"hljs-attribute\">command</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">redis-server --requirepass DuHJxnb6mnGmG2N2</span>\n      <span class=\"hljs-attribute\">ports</span><span class=\"hljs-punctuation\">:</span>\n        <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">&quot;6379:6379&quot;</span>\n      <span class=\"hljs-attribute\">volumes</span><span class=\"hljs-punctuation\">:</span>\n        <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">&quot;/local/docker/redis/data:/data&quot;</span>\n        <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">&quot;/local/docker/redis/conf:/etc/redis/redis.conf&quot;</span>\n        <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">&quot;/local/docker/redis/log:/logs&quot;</span></code></pre>\n\n"},{"title":"为什么写博客","excerpt":"博客，仅音译，英文名为Blogger，为Web Log的混成词。其正式名称为网络日记；又音译为部落格或部落阁等，是社会媒体网络的一部分。是使用特定的软件，在网络上出版、发表和张贴个人文章的人，或者是一种通常由个人管理、不定期张贴新的文章的网站。博客上的文章通常以网页形式出现，并根据张贴时间，以倒序排列。通常具备RSS订阅功能。","index_img":"https://img0.baidu.com/it/u=407618549,1264086848&fm=253&fmt=auto&app=138&f=JPEG?w=640&h=336","abbrlink":"274c9a8f","date":"2023-05-15T12:17:04.000Z","_content":"\n# 前言\n\n# 写博客会有什么收获\n\n1、增加写作能力\n\n这一点是显而易见的，写作能力就是靠坚持不懈地写作来提升的。\n\n定期的写作是一种刻意练习，有时候你想的很多，但是要写出来，\n\n让人看懂却不是那吗容易，所以需要去总结学习，在这样的过程中，写作能力会逐渐上升。\n\n \n\n2、迫使你深入思考\n\n 如果你总是写些不痛不痒的文字，写的质量很差，\n\n基本上不会有人关注，连评论都不会有，\n\n所以这会迫使你去深入思考总结，拓展你思维的深度，可以有效地训练你的思维能力。\n\n \n\n3、会迫使你更多的输入\n\n如果你肚子里存货不够，写上一段时间就没有什么东西可写了。\n\n所以，你就不得不去阅读，去思考，去实践，保持大量的输入才能有持续的输出，但成长也会更快。\n\n \n\n4、有助于认识志同道合的人\n\n如果你的文章写得好，就会有人来关注你，你会发现你的观点会有人认可，\n\n有些人会输出自己的观点，不同观点之间的碰撞，会给你带来新的思考，所谓以文会友，就是这个意思吧。\n\n \n\n5、有助于建立个人品牌\n\n当你持续地写作后，慢慢地看到的人就会多，你的影响力就会慢慢扩大，\n\n别人也可以通过你的文章来了解你的能力。\n\n而且，你的博客会是一个很好的建立，HR可以通过博客了解你是不是一个有自己独立思考的人，\n\n你的表达能力如何，你的写作能力如何。\n\n \n\n其他好处还有很多，当你真正地开始写之后，你才能体会到。\n\n\n# 参考\n【1】https://www.woshipm.com/pd/46149.html\n【2】https://blog.csdn.net/weixin_48322563/article/details/116504508","source":"_posts/为什么写博客.md","raw":"---\ntitle: 为什么写博客\nexcerpt: 博客，仅音译，英文名为Blogger，为Web Log的混成词。其正式名称为网络日记；又音译为部落格或部落阁等，是社会媒体网络的一部分。是使用特定的软件，在网络上出版、发表和张贴个人文章的人，或者是一种通常由个人管理、不定期张贴新的文章的网站。博客上的文章通常以网页形式出现，并根据张贴时间，以倒序排列。通常具备RSS订阅功能。\ntags:\n  - 杂谈\ncategories:\n  - 杂谈\nindex_img: https://img0.baidu.com/it/u=407618549,1264086848&fm=253&fmt=auto&app=138&f=JPEG?w=640&h=336\nabbrlink: 274c9a8f\ndate: 2023-05-15 20:17:04\n---\n\n# 前言\n\n# 写博客会有什么收获\n\n1、增加写作能力\n\n这一点是显而易见的，写作能力就是靠坚持不懈地写作来提升的。\n\n定期的写作是一种刻意练习，有时候你想的很多，但是要写出来，\n\n让人看懂却不是那吗容易，所以需要去总结学习，在这样的过程中，写作能力会逐渐上升。\n\n \n\n2、迫使你深入思考\n\n 如果你总是写些不痛不痒的文字，写的质量很差，\n\n基本上不会有人关注，连评论都不会有，\n\n所以这会迫使你去深入思考总结，拓展你思维的深度，可以有效地训练你的思维能力。\n\n \n\n3、会迫使你更多的输入\n\n如果你肚子里存货不够，写上一段时间就没有什么东西可写了。\n\n所以，你就不得不去阅读，去思考，去实践，保持大量的输入才能有持续的输出，但成长也会更快。\n\n \n\n4、有助于认识志同道合的人\n\n如果你的文章写得好，就会有人来关注你，你会发现你的观点会有人认可，\n\n有些人会输出自己的观点，不同观点之间的碰撞，会给你带来新的思考，所谓以文会友，就是这个意思吧。\n\n \n\n5、有助于建立个人品牌\n\n当你持续地写作后，慢慢地看到的人就会多，你的影响力就会慢慢扩大，\n\n别人也可以通过你的文章来了解你的能力。\n\n而且，你的博客会是一个很好的建立，HR可以通过博客了解你是不是一个有自己独立思考的人，\n\n你的表达能力如何，你的写作能力如何。\n\n \n\n其他好处还有很多，当你真正地开始写之后，你才能体会到。\n\n\n# 参考\n【1】https://www.woshipm.com/pd/46149.html\n【2】https://blog.csdn.net/weixin_48322563/article/details/116504508","slug":"为什么写博客","published":1,"updated":"2023-05-17T02:54:00.072Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clhrpaiaa000geq6q3k8rcasg","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><h1 id=\"写博客会有什么收获\"><a href=\"#写博客会有什么收获\" class=\"headerlink\" title=\"写博客会有什么收获\"></a>写博客会有什么收获</h1><p>1、增加写作能力</p>\n<p>这一点是显而易见的，写作能力就是靠坚持不懈地写作来提升的。</p>\n<p>定期的写作是一种刻意练习，有时候你想的很多，但是要写出来，</p>\n<p>让人看懂却不是那吗容易，所以需要去总结学习，在这样的过程中，写作能力会逐渐上升。</p>\n<p>2、迫使你深入思考</p>\n<p> 如果你总是写些不痛不痒的文字，写的质量很差，</p>\n<p>基本上不会有人关注，连评论都不会有，</p>\n<p>所以这会迫使你去深入思考总结，拓展你思维的深度，可以有效地训练你的思维能力。</p>\n<p>3、会迫使你更多的输入</p>\n<p>如果你肚子里存货不够，写上一段时间就没有什么东西可写了。</p>\n<p>所以，你就不得不去阅读，去思考，去实践，保持大量的输入才能有持续的输出，但成长也会更快。</p>\n<p>4、有助于认识志同道合的人</p>\n<p>如果你的文章写得好，就会有人来关注你，你会发现你的观点会有人认可，</p>\n<p>有些人会输出自己的观点，不同观点之间的碰撞，会给你带来新的思考，所谓以文会友，就是这个意思吧。</p>\n<p>5、有助于建立个人品牌</p>\n<p>当你持续地写作后，慢慢地看到的人就会多，你的影响力就会慢慢扩大，</p>\n<p>别人也可以通过你的文章来了解你的能力。</p>\n<p>而且，你的博客会是一个很好的建立，HR可以通过博客了解你是不是一个有自己独立思考的人，</p>\n<p>你的表达能力如何，你的写作能力如何。</p>\n<p>其他好处还有很多，当你真正地开始写之后，你才能体会到。</p>\n<h1 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h1><p>【1】<a href=\"https://www.woshipm.com/pd/46149.html\">https://www.woshipm.com/pd/46149.html</a><br>【2】<a href=\"https://blog.csdn.net/weixin_48322563/article/details/116504508\">https://blog.csdn.net/weixin_48322563/article/details/116504508</a></p>\n","site":{"data":{}},"more":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><h1 id=\"写博客会有什么收获\"><a href=\"#写博客会有什么收获\" class=\"headerlink\" title=\"写博客会有什么收获\"></a>写博客会有什么收获</h1><p>1、增加写作能力</p>\n<p>这一点是显而易见的，写作能力就是靠坚持不懈地写作来提升的。</p>\n<p>定期的写作是一种刻意练习，有时候你想的很多，但是要写出来，</p>\n<p>让人看懂却不是那吗容易，所以需要去总结学习，在这样的过程中，写作能力会逐渐上升。</p>\n<p>2、迫使你深入思考</p>\n<p> 如果你总是写些不痛不痒的文字，写的质量很差，</p>\n<p>基本上不会有人关注，连评论都不会有，</p>\n<p>所以这会迫使你去深入思考总结，拓展你思维的深度，可以有效地训练你的思维能力。</p>\n<p>3、会迫使你更多的输入</p>\n<p>如果你肚子里存货不够，写上一段时间就没有什么东西可写了。</p>\n<p>所以，你就不得不去阅读，去思考，去实践，保持大量的输入才能有持续的输出，但成长也会更快。</p>\n<p>4、有助于认识志同道合的人</p>\n<p>如果你的文章写得好，就会有人来关注你，你会发现你的观点会有人认可，</p>\n<p>有些人会输出自己的观点，不同观点之间的碰撞，会给你带来新的思考，所谓以文会友，就是这个意思吧。</p>\n<p>5、有助于建立个人品牌</p>\n<p>当你持续地写作后，慢慢地看到的人就会多，你的影响力就会慢慢扩大，</p>\n<p>别人也可以通过你的文章来了解你的能力。</p>\n<p>而且，你的博客会是一个很好的建立，HR可以通过博客了解你是不是一个有自己独立思考的人，</p>\n<p>你的表达能力如何，你的写作能力如何。</p>\n<p>其他好处还有很多，当你真正地开始写之后，你才能体会到。</p>\n<h1 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h1><p>【1】<a href=\"https://www.woshipm.com/pd/46149.html\">https://www.woshipm.com/pd/46149.html</a><br>【2】<a href=\"https://blog.csdn.net/weixin_48322563/article/details/116504508\">https://blog.csdn.net/weixin_48322563/article/details/116504508</a></p>\n"},{"title":"人生不妨大胆一点","author":"king","excerpt":"对待生命,你不妨大胆一点,因为我们始终要失去它","index_img":"https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202301312334875.jpg","abbrlink":"fc9ca707","date":"2023-01-31T14:45:30.000Z","_content":"\n今年过年回家索性放弃了长做的飞机，直接选购了火车。长达17个小时的火车，特别希望可以遇见一些有趣的事情。\n\n\n因为疫情原因回家过年的意愿似乎在今年变得坚定又迫切，索性跟公司辞了长假今年必须回家过个年。由于第一次选择坐火车，没什么经验免不了做一些功课来了解坐火车的注意事项。\n\n\n记得第一次想坐车是因为在高中时期答应好友去她的地方一起去吃饭，但当时因为种种原因一直没有敢买票坐车。可能是因为从小到大身边一直有家人陪伴，出门远行难免会有一些担忧。\n\n\n毕业后转战北京工作慢慢自己的胆识变得有些大，坐火车似乎不再是一件特别恐惧的事情了。买票刷身份证进站，按着导航牌找到所在站台似乎也不是很难。跟着大家一起排队，然后找座位，感觉就像闭眼就可以完成。后来想想其实所谓的不敢去做的事，只要稍微行动起来就会变的轻松容易。在火车上一路和对面大哥侃大山，作为社恐的我但凡有人起头也可以变得幽默。好在所乘列车可以吸烟，倒是给枯燥的旅程平添些许乐趣。\n\n\n火车到站，父母已经早早在出站口等候，几年不见忽然发现老爸似乎有了白头发（当时感觉超级震撼，原以为父母还比较年轻，其实都是50多的人了）。\n\n\n车站有两个地方最感人：一个是入口，一个是出口，一个是舍不得你离去，一个是盼着你归来。\n\n\n回北京的时候，索性再次选择了火车，由于所乘坐的列车途径站点超级多，这次的北京之旅足足29个小时，最气愤的是这趟列车不能吸烟，作为一个老烟民是无法忍受的。硬座的中铺真的像一个夹心饼干（无法起身只能乖乖的躺着）。\n\n---\n\n太困了，放着再写吧，放一些好友拍的精美图片\n\n{%gi 5 3-2 %}\n![](https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202301312327778.jpg)\n![](https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202301312329283.jpeg)\n![](https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202301312329721.jpeg)\n![](https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202301312330710.jpeg)\n![](https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202301312328683.jpeg)\n{% endgi %}\n\n\n\n>以上图片均来自于好友 Pluto ,商业用途禁止转载。\n\n<p markdown=\"1\" style=\"\n    font-weight: bold; \"\n>PS: （2023-02-01更新）更新的内容如下......</p>\n","source":"_posts/人生不妨大胆一点.md","raw":"---\ntitle: 人生不妨大胆一点\nauthor: king\nexcerpt: '对待生命,你不妨大胆一点,因为我们始终要失去它'\nindex_img: 'https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202301312334875.jpg'\nabbrlink: fc9ca707\ndate: 2023-01-31 22:45:30\ntags:\n---\n\n今年过年回家索性放弃了长做的飞机，直接选购了火车。长达17个小时的火车，特别希望可以遇见一些有趣的事情。\n\n\n因为疫情原因回家过年的意愿似乎在今年变得坚定又迫切，索性跟公司辞了长假今年必须回家过个年。由于第一次选择坐火车，没什么经验免不了做一些功课来了解坐火车的注意事项。\n\n\n记得第一次想坐车是因为在高中时期答应好友去她的地方一起去吃饭，但当时因为种种原因一直没有敢买票坐车。可能是因为从小到大身边一直有家人陪伴，出门远行难免会有一些担忧。\n\n\n毕业后转战北京工作慢慢自己的胆识变得有些大，坐火车似乎不再是一件特别恐惧的事情了。买票刷身份证进站，按着导航牌找到所在站台似乎也不是很难。跟着大家一起排队，然后找座位，感觉就像闭眼就可以完成。后来想想其实所谓的不敢去做的事，只要稍微行动起来就会变的轻松容易。在火车上一路和对面大哥侃大山，作为社恐的我但凡有人起头也可以变得幽默。好在所乘列车可以吸烟，倒是给枯燥的旅程平添些许乐趣。\n\n\n火车到站，父母已经早早在出站口等候，几年不见忽然发现老爸似乎有了白头发（当时感觉超级震撼，原以为父母还比较年轻，其实都是50多的人了）。\n\n\n车站有两个地方最感人：一个是入口，一个是出口，一个是舍不得你离去，一个是盼着你归来。\n\n\n回北京的时候，索性再次选择了火车，由于所乘坐的列车途径站点超级多，这次的北京之旅足足29个小时，最气愤的是这趟列车不能吸烟，作为一个老烟民是无法忍受的。硬座的中铺真的像一个夹心饼干（无法起身只能乖乖的躺着）。\n\n---\n\n太困了，放着再写吧，放一些好友拍的精美图片\n\n{%gi 5 3-2 %}\n![](https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202301312327778.jpg)\n![](https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202301312329283.jpeg)\n![](https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202301312329721.jpeg)\n![](https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202301312330710.jpeg)\n![](https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202301312328683.jpeg)\n{% endgi %}\n\n\n\n>以上图片均来自于好友 Pluto ,商业用途禁止转载。\n\n<p markdown=\"1\" style=\"\n    font-weight: bold; \"\n>PS: （2023-02-01更新）更新的内容如下......</p>\n","slug":"人生不妨大胆一点","published":1,"updated":"2023-02-05T13:37:12.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clhrpaiac000keq6q3jbk4oeh","content":"<p>今年过年回家索性放弃了长做的飞机，直接选购了火车。长达17个小时的火车，特别希望可以遇见一些有趣的事情。</p>\n<p>因为疫情原因回家过年的意愿似乎在今年变得坚定又迫切，索性跟公司辞了长假今年必须回家过个年。由于第一次选择坐火车，没什么经验免不了做一些功课来了解坐火车的注意事项。</p>\n<p>记得第一次想坐车是因为在高中时期答应好友去她的地方一起去吃饭，但当时因为种种原因一直没有敢买票坐车。可能是因为从小到大身边一直有家人陪伴，出门远行难免会有一些担忧。</p>\n<p>毕业后转战北京工作慢慢自己的胆识变得有些大，坐火车似乎不再是一件特别恐惧的事情了。买票刷身份证进站，按着导航牌找到所在站台似乎也不是很难。跟着大家一起排队，然后找座位，感觉就像闭眼就可以完成。后来想想其实所谓的不敢去做的事，只要稍微行动起来就会变的轻松容易。在火车上一路和对面大哥侃大山，作为社恐的我但凡有人起头也可以变得幽默。好在所乘列车可以吸烟，倒是给枯燥的旅程平添些许乐趣。</p>\n<p>火车到站，父母已经早早在出站口等候，几年不见忽然发现老爸似乎有了白头发（当时感觉超级震撼，原以为父母还比较年轻，其实都是50多的人了）。</p>\n<p>车站有两个地方最感人：一个是入口，一个是出口，一个是舍不得你离去，一个是盼着你归来。</p>\n<p>回北京的时候，索性再次选择了火车，由于所乘坐的列车途径站点超级多，这次的北京之旅足足29个小时，最气愤的是这趟列车不能吸烟，作为一个老烟民是无法忍受的。硬座的中铺真的像一个夹心饼干（无法起身只能乖乖的躺着）。</p>\n<hr>\n<p>太困了，放着再写吧，放一些好友拍的精美图片</p>\n<div class=\"group-image-container\"><div class=\"group-image-row\"><div class=\"group-image-wrap\"><img src=\"https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202301312327778.jpg\"></div><div class=\"group-image-wrap\"><img src=\"https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202301312329283.jpeg\"></div><div class=\"group-image-wrap\"><img src=\"https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202301312329721.jpeg\"></div></div><div class=\"group-image-row\"><div class=\"group-image-wrap\"><img src=\"https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202301312330710.jpeg\"></div><div class=\"group-image-wrap\"><img src=\"https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202301312328683.jpeg\"></div></div></div>\n\n\n\n<blockquote>\n<p>以上图片均来自于好友 Pluto ,商业用途禁止转载。</p>\n</blockquote>\n<p markdown=\"1\" style=\"\n    font-weight: bold; \"\n>PS: （2023-02-01更新）更新的内容如下......</p>\n","site":{"data":{}},"more":"<p>今年过年回家索性放弃了长做的飞机，直接选购了火车。长达17个小时的火车，特别希望可以遇见一些有趣的事情。</p>\n<p>因为疫情原因回家过年的意愿似乎在今年变得坚定又迫切，索性跟公司辞了长假今年必须回家过个年。由于第一次选择坐火车，没什么经验免不了做一些功课来了解坐火车的注意事项。</p>\n<p>记得第一次想坐车是因为在高中时期答应好友去她的地方一起去吃饭，但当时因为种种原因一直没有敢买票坐车。可能是因为从小到大身边一直有家人陪伴，出门远行难免会有一些担忧。</p>\n<p>毕业后转战北京工作慢慢自己的胆识变得有些大，坐火车似乎不再是一件特别恐惧的事情了。买票刷身份证进站，按着导航牌找到所在站台似乎也不是很难。跟着大家一起排队，然后找座位，感觉就像闭眼就可以完成。后来想想其实所谓的不敢去做的事，只要稍微行动起来就会变的轻松容易。在火车上一路和对面大哥侃大山，作为社恐的我但凡有人起头也可以变得幽默。好在所乘列车可以吸烟，倒是给枯燥的旅程平添些许乐趣。</p>\n<p>火车到站，父母已经早早在出站口等候，几年不见忽然发现老爸似乎有了白头发（当时感觉超级震撼，原以为父母还比较年轻，其实都是50多的人了）。</p>\n<p>车站有两个地方最感人：一个是入口，一个是出口，一个是舍不得你离去，一个是盼着你归来。</p>\n<p>回北京的时候，索性再次选择了火车，由于所乘坐的列车途径站点超级多，这次的北京之旅足足29个小时，最气愤的是这趟列车不能吸烟，作为一个老烟民是无法忍受的。硬座的中铺真的像一个夹心饼干（无法起身只能乖乖的躺着）。</p>\n<hr>\n<p>太困了，放着再写吧，放一些好友拍的精美图片</p>\n<div class=\"group-image-container\"><div class=\"group-image-row\"><div class=\"group-image-wrap\"><img src=\"https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202301312327778.jpg\"></div><div class=\"group-image-wrap\"><img src=\"https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202301312329283.jpeg\"></div><div class=\"group-image-wrap\"><img src=\"https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202301312329721.jpeg\"></div></div><div class=\"group-image-row\"><div class=\"group-image-wrap\"><img src=\"https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202301312330710.jpeg\"></div><div class=\"group-image-wrap\"><img src=\"https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202301312328683.jpeg\"></div></div></div>\n\n\n\n<blockquote>\n<p>以上图片均来自于好友 Pluto ,商业用途禁止转载。</p>\n</blockquote>\n<p markdown=\"1\" style=\"\n    font-weight: bold; \"\n>PS: （2023-02-01更新）更新的内容如下......</p>\n"},{"title":"你当善良，且有力量","excerpt":"一个人越是善良，待人的底线应该越高一些。这样才能避免纵容他人，也能保护自己。","index_img":"https://img0.baidu.com/it/u=1571583989,1088029083&fm=253&fmt=auto&app=138&f=JPEG?w=889&h=500","abbrlink":"8a3eb0f1","date":"2023-02-06T01:36:05.000Z","_content":"### 前言\n我们所做的任何事情，在人类宏大的历史和空间的范围里，都是微不足道的。但正是这些不计其数的微小的善的信念，使得人性的种子即使在最险恶的环境中，仍能够得以保存，经过时空的洗礼，在未来的某个时间、某个世界，放射出最耀眼的光辉。\n\n\n在朋友的推荐下看了《你的善良必须有点锋芒》这本书，本来对鸡汤类的书籍无感，但是还是选择了硬着头皮读下去原因很简单，我总是在委曲求全中变得懦弱，而获得周围亲人、朋友、同事所谓的“性格好、善良”标签，自己却憋成内伤。看过之后，颇受启发。\n\n\n我们的文化提倡谦卑、忍让，己所不欲勿施于人。于是，中庸的文化道德里不赞成冲突，不赞成在理性沟通的过程中坚持自己的原则，为自己的利益斗争，所有冲突的火星被消灭在善良光鲜的道德外衣之下。因此，学校教化出的是没有个性的、谦卑的、忍辱负重的知识分子。而道德教化之外的“卑劣”思想反而在谦卑的良善的土壤中生根、发芽、壮大，甚至叫嚣。于是，自古就有了“秀才遇上兵，有理说不清”，网络语言“我是流氓，我怕谁”风靡一时，甚至引起了某些谦卑知识分子的倒戈背叛。当然，并不是我们的文化传统出现了问题，而是有些人利用了文化传统的弱点来攻击，甚至从中获取利益。对此，我们应该不能一味退让，一味善良。对恶的不作为就是对善的最大亵渎。\n\n\n很多时候，我们不能建立对自己的一种正确的认知，或者说是没有养成一种正确认知策略。我们往往太在意别人的看法，希望从他人的正面评价中建立对自己的一种认知。我们希望以谦卑的，甚至牺牲部分利益的方式去获得一个“善良”的标签，让自己获得主流文化的一种认可，从而找到一种安全感和归属。而一旦陷入这种认知循环，即使你真的善良，你也可能憋出内伤。\n善良，不是错，我们仍然应该坚守，这是中华文化传承的根，但是我们应该建立自己正确的认知方式，不需要凭借他人的评价来认识自己。\n### 后记\n我坚持我的善良，但也会自带锋芒。面对别人的得寸进尺，越谦让越心烦，不如以退为进，以守为攻，去妥善化解你所困顿的你所不愿的事。每个人的生活，就只能是你自己的生活，如果强行按照别人的架构去过别人眼中的生活，那么就散失了纯真的自己，好好先生并不是所做的一切如人愿，他也是在有自己的原则中，去用自己的善心帮助那些真真需要帮助的人。别人瞧不起你，并不是你有多么不堪入目，而是他不想花时间去了解你，你应该像石灰，别人越泼冷水，自己越沸腾。请记住你的善良必须要有锋芒，该反击的时候需要反击。\n","source":"_posts/你当善良，且有力量.md","raw":"---\ntitle: 你当善良，且有力量\nexcerpt: 一个人越是善良，待人的底线应该越高一些。这样才能避免纵容他人，也能保护自己。\ncategories:\n  - 杂谈\nindex_img: https://img0.baidu.com/it/u=1571583989,1088029083&fm=253&fmt=auto&app=138&f=JPEG?w=889&h=500\nabbrlink: 8a3eb0f1\ndate: 2023-02-06 09:36:05\n---\n### 前言\n我们所做的任何事情，在人类宏大的历史和空间的范围里，都是微不足道的。但正是这些不计其数的微小的善的信念，使得人性的种子即使在最险恶的环境中，仍能够得以保存，经过时空的洗礼，在未来的某个时间、某个世界，放射出最耀眼的光辉。\n\n\n在朋友的推荐下看了《你的善良必须有点锋芒》这本书，本来对鸡汤类的书籍无感，但是还是选择了硬着头皮读下去原因很简单，我总是在委曲求全中变得懦弱，而获得周围亲人、朋友、同事所谓的“性格好、善良”标签，自己却憋成内伤。看过之后，颇受启发。\n\n\n我们的文化提倡谦卑、忍让，己所不欲勿施于人。于是，中庸的文化道德里不赞成冲突，不赞成在理性沟通的过程中坚持自己的原则，为自己的利益斗争，所有冲突的火星被消灭在善良光鲜的道德外衣之下。因此，学校教化出的是没有个性的、谦卑的、忍辱负重的知识分子。而道德教化之外的“卑劣”思想反而在谦卑的良善的土壤中生根、发芽、壮大，甚至叫嚣。于是，自古就有了“秀才遇上兵，有理说不清”，网络语言“我是流氓，我怕谁”风靡一时，甚至引起了某些谦卑知识分子的倒戈背叛。当然，并不是我们的文化传统出现了问题，而是有些人利用了文化传统的弱点来攻击，甚至从中获取利益。对此，我们应该不能一味退让，一味善良。对恶的不作为就是对善的最大亵渎。\n\n\n很多时候，我们不能建立对自己的一种正确的认知，或者说是没有养成一种正确认知策略。我们往往太在意别人的看法，希望从他人的正面评价中建立对自己的一种认知。我们希望以谦卑的，甚至牺牲部分利益的方式去获得一个“善良”的标签，让自己获得主流文化的一种认可，从而找到一种安全感和归属。而一旦陷入这种认知循环，即使你真的善良，你也可能憋出内伤。\n善良，不是错，我们仍然应该坚守，这是中华文化传承的根，但是我们应该建立自己正确的认知方式，不需要凭借他人的评价来认识自己。\n### 后记\n我坚持我的善良，但也会自带锋芒。面对别人的得寸进尺，越谦让越心烦，不如以退为进，以守为攻，去妥善化解你所困顿的你所不愿的事。每个人的生活，就只能是你自己的生活，如果强行按照别人的架构去过别人眼中的生活，那么就散失了纯真的自己，好好先生并不是所做的一切如人愿，他也是在有自己的原则中，去用自己的善心帮助那些真真需要帮助的人。别人瞧不起你，并不是你有多么不堪入目，而是他不想花时间去了解你，你应该像石灰，别人越泼冷水，自己越沸腾。请记住你的善良必须要有锋芒，该反击的时候需要反击。\n","slug":"你当善良，且有力量","published":1,"updated":"2023-02-10T08:43:58.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clhrpaiad000leq6qc4323vtl","content":"<h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><p>我们所做的任何事情，在人类宏大的历史和空间的范围里，都是微不足道的。但正是这些不计其数的微小的善的信念，使得人性的种子即使在最险恶的环境中，仍能够得以保存，经过时空的洗礼，在未来的某个时间、某个世界，放射出最耀眼的光辉。</p>\n<p>在朋友的推荐下看了《你的善良必须有点锋芒》这本书，本来对鸡汤类的书籍无感，但是还是选择了硬着头皮读下去原因很简单，我总是在委曲求全中变得懦弱，而获得周围亲人、朋友、同事所谓的“性格好、善良”标签，自己却憋成内伤。看过之后，颇受启发。</p>\n<p>我们的文化提倡谦卑、忍让，己所不欲勿施于人。于是，中庸的文化道德里不赞成冲突，不赞成在理性沟通的过程中坚持自己的原则，为自己的利益斗争，所有冲突的火星被消灭在善良光鲜的道德外衣之下。因此，学校教化出的是没有个性的、谦卑的、忍辱负重的知识分子。而道德教化之外的“卑劣”思想反而在谦卑的良善的土壤中生根、发芽、壮大，甚至叫嚣。于是，自古就有了“秀才遇上兵，有理说不清”，网络语言“我是流氓，我怕谁”风靡一时，甚至引起了某些谦卑知识分子的倒戈背叛。当然，并不是我们的文化传统出现了问题，而是有些人利用了文化传统的弱点来攻击，甚至从中获取利益。对此，我们应该不能一味退让，一味善良。对恶的不作为就是对善的最大亵渎。</p>\n<p>很多时候，我们不能建立对自己的一种正确的认知，或者说是没有养成一种正确认知策略。我们往往太在意别人的看法，希望从他人的正面评价中建立对自己的一种认知。我们希望以谦卑的，甚至牺牲部分利益的方式去获得一个“善良”的标签，让自己获得主流文化的一种认可，从而找到一种安全感和归属。而一旦陷入这种认知循环，即使你真的善良，你也可能憋出内伤。<br>善良，不是错，我们仍然应该坚守，这是中华文化传承的根，但是我们应该建立自己正确的认知方式，不需要凭借他人的评价来认识自己。</p>\n<h3 id=\"后记\"><a href=\"#后记\" class=\"headerlink\" title=\"后记\"></a>后记</h3><p>我坚持我的善良，但也会自带锋芒。面对别人的得寸进尺，越谦让越心烦，不如以退为进，以守为攻，去妥善化解你所困顿的你所不愿的事。每个人的生活，就只能是你自己的生活，如果强行按照别人的架构去过别人眼中的生活，那么就散失了纯真的自己，好好先生并不是所做的一切如人愿，他也是在有自己的原则中，去用自己的善心帮助那些真真需要帮助的人。别人瞧不起你，并不是你有多么不堪入目，而是他不想花时间去了解你，你应该像石灰，别人越泼冷水，自己越沸腾。请记住你的善良必须要有锋芒，该反击的时候需要反击。</p>\n","site":{"data":{}},"more":"<h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><p>我们所做的任何事情，在人类宏大的历史和空间的范围里，都是微不足道的。但正是这些不计其数的微小的善的信念，使得人性的种子即使在最险恶的环境中，仍能够得以保存，经过时空的洗礼，在未来的某个时间、某个世界，放射出最耀眼的光辉。</p>\n<p>在朋友的推荐下看了《你的善良必须有点锋芒》这本书，本来对鸡汤类的书籍无感，但是还是选择了硬着头皮读下去原因很简单，我总是在委曲求全中变得懦弱，而获得周围亲人、朋友、同事所谓的“性格好、善良”标签，自己却憋成内伤。看过之后，颇受启发。</p>\n<p>我们的文化提倡谦卑、忍让，己所不欲勿施于人。于是，中庸的文化道德里不赞成冲突，不赞成在理性沟通的过程中坚持自己的原则，为自己的利益斗争，所有冲突的火星被消灭在善良光鲜的道德外衣之下。因此，学校教化出的是没有个性的、谦卑的、忍辱负重的知识分子。而道德教化之外的“卑劣”思想反而在谦卑的良善的土壤中生根、发芽、壮大，甚至叫嚣。于是，自古就有了“秀才遇上兵，有理说不清”，网络语言“我是流氓，我怕谁”风靡一时，甚至引起了某些谦卑知识分子的倒戈背叛。当然，并不是我们的文化传统出现了问题，而是有些人利用了文化传统的弱点来攻击，甚至从中获取利益。对此，我们应该不能一味退让，一味善良。对恶的不作为就是对善的最大亵渎。</p>\n<p>很多时候，我们不能建立对自己的一种正确的认知，或者说是没有养成一种正确认知策略。我们往往太在意别人的看法，希望从他人的正面评价中建立对自己的一种认知。我们希望以谦卑的，甚至牺牲部分利益的方式去获得一个“善良”的标签，让自己获得主流文化的一种认可，从而找到一种安全感和归属。而一旦陷入这种认知循环，即使你真的善良，你也可能憋出内伤。<br>善良，不是错，我们仍然应该坚守，这是中华文化传承的根，但是我们应该建立自己正确的认知方式，不需要凭借他人的评价来认识自己。</p>\n<h3 id=\"后记\"><a href=\"#后记\" class=\"headerlink\" title=\"后记\"></a>后记</h3><p>我坚持我的善良，但也会自带锋芒。面对别人的得寸进尺，越谦让越心烦，不如以退为进，以守为攻，去妥善化解你所困顿的你所不愿的事。每个人的生活，就只能是你自己的生活，如果强行按照别人的架构去过别人眼中的生活，那么就散失了纯真的自己，好好先生并不是所做的一切如人愿，他也是在有自己的原则中，去用自己的善心帮助那些真真需要帮助的人。别人瞧不起你，并不是你有多么不堪入目，而是他不想花时间去了解你，你应该像石灰，别人越泼冷水，自己越沸腾。请记住你的善良必须要有锋芒，该反击的时候需要反击。</p>\n"},{"title":"关于婚姻","author":"king","abbrlink":"cbceb420","date":"2023-01-13T07:42:28.000Z","index_img":"https://img1.baidu.com/it/u=766554260,3947622620&fm=253&fmt=auto&app=120&f=JPEG?w=1548&h=800","_content":"钱钟书先生说：“婚姻是一座围城，城外的人想进去，城里的人想出来。”\n<!-- more -->\n\n婚姻是美好的，也是琐碎的，每个人都有着不同的理解和选择。\n\n有人勇敢尝试，收获幸福；\n\n有人遇人不淑，中途分离；\n\n还有人甘居城外，独自浪漫。\n\n","source":"_posts/关于婚姻.md","raw":"---\ntitle: 关于婚姻\nauthor: king\nabbrlink: cbceb420\ndate: 2023-01-13 15:42:28\nindex_img: https://img1.baidu.com/it/u=766554260,3947622620&fm=253&fmt=auto&app=120&f=JPEG?w=1548&h=800\n---\n钱钟书先生说：“婚姻是一座围城，城外的人想进去，城里的人想出来。”\n<!-- more -->\n\n婚姻是美好的，也是琐碎的，每个人都有着不同的理解和选择。\n\n有人勇敢尝试，收获幸福；\n\n有人遇人不淑，中途分离；\n\n还有人甘居城外，独自浪漫。\n\n","slug":"关于婚姻","published":1,"updated":"2023-02-01T06:03:28.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clhrpaiae000peq6qgdke28ca","content":"<p>钱钟书先生说：“婚姻是一座围城，城外的人想进去，城里的人想出来。”</p>\n<span id=\"more\"></span>\n\n<p>婚姻是美好的，也是琐碎的，每个人都有着不同的理解和选择。</p>\n<p>有人勇敢尝试，收获幸福；</p>\n<p>有人遇人不淑，中途分离；</p>\n<p>还有人甘居城外，独自浪漫。</p>\n","site":{"data":{}},"excerpt":"<p>钱钟书先生说：“婚姻是一座围城，城外的人想进去，城里的人想出来。”</p>","more":"<p>婚姻是美好的，也是琐碎的，每个人都有着不同的理解和选择。</p>\n<p>有人勇敢尝试，收获幸福；</p>\n<p>有人遇人不淑，中途分离；</p>\n<p>还有人甘居城外，独自浪漫。</p>"},{"title":"关于对新工作的畅想","excerpt":"入职了新公司，我改如何抱有幻想","index_img":"https://img1.baidu.com/it/u=1072366132,3197375825&fm=253&fmt=auto&app=138&f=JPEG?w=750&h=500","banner_img":"/img/post_banner.jpg","abbrlink":"64615890","date":"2023-04-24T15:49:20.000Z","_content":"\n李尚龙老师说：“保持随时离开一个人的能力、保持随时离开一个集体的能力、保持随时离开一个赛道的能力、保持随时离开一个城市的能力。”\n\n经过长达一个月的求职之旅，终于有心仪的公司准备入职了。入职一周发现公司并不是传统意义的大小周，加之对陌生业务的不了解突然打起了退堂鼓。苦苦支撑了半月发现周围的同事都挺好，而且周围的氛围都挺好。于是下定决心开始留在这家公司，开始了解业务，然后克服在国美养成的懒散习惯，准备在这家公司好好的做技术沉淀。最近真的很累，加上和小伙伴们一起搞事业真的有点身心俱疲。有时候就会想要放弃就业，但是最近有很大的压力需要弥补曾经造成的错误，所以需要努力将工作稳定下来。突然想起一句话，处女座热衷于搞事业，事实上确实如此。连面对喜欢的人，也很少聊天了。\n","source":"_posts/关于对新工作的畅想.md","raw":"---\ntitle: 关于对新工作的畅想\nexcerpt: 入职了新公司，我改如何抱有幻想\ntags:\n  - Hexo\n  - Fluid\ncategories:\n  - 随笔\nindex_img: https://img1.baidu.com/it/u=1072366132,3197375825&fm=253&fmt=auto&app=138&f=JPEG?w=750&h=500\nbanner_img: /img/post_banner.jpg\nabbrlink: '64615890'\ndate: 2023-04-24 23:49:20\n---\n\n李尚龙老师说：“保持随时离开一个人的能力、保持随时离开一个集体的能力、保持随时离开一个赛道的能力、保持随时离开一个城市的能力。”\n\n经过长达一个月的求职之旅，终于有心仪的公司准备入职了。入职一周发现公司并不是传统意义的大小周，加之对陌生业务的不了解突然打起了退堂鼓。苦苦支撑了半月发现周围的同事都挺好，而且周围的氛围都挺好。于是下定决心开始留在这家公司，开始了解业务，然后克服在国美养成的懒散习惯，准备在这家公司好好的做技术沉淀。最近真的很累，加上和小伙伴们一起搞事业真的有点身心俱疲。有时候就会想要放弃就业，但是最近有很大的压力需要弥补曾经造成的错误，所以需要努力将工作稳定下来。突然想起一句话，处女座热衷于搞事业，事实上确实如此。连面对喜欢的人，也很少聊天了。\n","slug":"关于对新工作的畅想","published":1,"updated":"2023-04-25T14:44:59.277Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clhrpaiaf000req6qh4lyawk1","content":"<p>李尚龙老师说：“保持随时离开一个人的能力、保持随时离开一个集体的能力、保持随时离开一个赛道的能力、保持随时离开一个城市的能力。”</p>\n<p>经过长达一个月的求职之旅，终于有心仪的公司准备入职了。入职一周发现公司并不是传统意义的大小周，加之对陌生业务的不了解突然打起了退堂鼓。苦苦支撑了半月发现周围的同事都挺好，而且周围的氛围都挺好。于是下定决心开始留在这家公司，开始了解业务，然后克服在国美养成的懒散习惯，准备在这家公司好好的做技术沉淀。最近真的很累，加上和小伙伴们一起搞事业真的有点身心俱疲。有时候就会想要放弃就业，但是最近有很大的压力需要弥补曾经造成的错误，所以需要努力将工作稳定下来。突然想起一句话，处女座热衷于搞事业，事实上确实如此。连面对喜欢的人，也很少聊天了。</p>\n","site":{"data":{}},"more":"<p>李尚龙老师说：“保持随时离开一个人的能力、保持随时离开一个集体的能力、保持随时离开一个赛道的能力、保持随时离开一个城市的能力。”</p>\n<p>经过长达一个月的求职之旅，终于有心仪的公司准备入职了。入职一周发现公司并不是传统意义的大小周，加之对陌生业务的不了解突然打起了退堂鼓。苦苦支撑了半月发现周围的同事都挺好，而且周围的氛围都挺好。于是下定决心开始留在这家公司，开始了解业务，然后克服在国美养成的懒散习惯，准备在这家公司好好的做技术沉淀。最近真的很累，加上和小伙伴们一起搞事业真的有点身心俱疲。有时候就会想要放弃就业，但是最近有很大的压力需要弥补曾经造成的错误，所以需要努力将工作稳定下来。突然想起一句话，处女座热衷于搞事业，事实上确实如此。连面对喜欢的人，也很少聊天了。</p>\n"},{"title":"Java项目部署","excerpt":"比较简单的单体项目部署方式","index_img":"https://img0.baidu.com/it/u=3705150710,3501402283&fm=253&fmt=auto&app=138&f=PNG?w=500&h=288","abbrlink":"ea92c0b9","date":"2021-05-03T13:04:56.000Z","_content":"# 一、安装Nginx\n## (一)Docker安装nginx\n### 1.查看镜像版本\n\n```sh\ndocker  search nginx\n```\n\n### 2.拉取镜像\n\n```\ndocker pull nginx\n```\n\n### 3.查看镜像\n\n```\ndocker images | grep nginx\n```\n\n### 4.创建挂载目录\n\n```\nmkdir nginx\ncd nginx\nmkdir conf\nmkdir wwwroot\nmkdir logs\n```\n```sh\n#创建挂载目录\nmkdir -p ./nginx/{conf,html,logs}\n```\n\n### 5.构建容器并启动\n\n```\ndocker run -d --name=nginx -p 80:80 \\\n-v /local/docker/nginx/wwwroot:/usr/share/nginx/html \\\n-v /local/docker/nginx/conf/nginx.conf:/etc/nginx/nginx.conf \\\n-v /local/docker/nginx/logs:/var/log/nginx \\\nnginx\n```\n\n## （二）\n\n### 1.安装依赖包\n\n```\nsudo yum -y install gcc zlib zlib-devel pcre-devel openssl openssl-devel\n```\n\n### 2.下载并解压安装包\n\n```\ncd /usr/local//下载tar包\nsudo wget  http://nginx.org/download/nginx-1.21.4.tar.gz\nsudo tar -xvf nginx-1.21.4.tar.gz\n```\n\nhttps://www.cnblogs.com/gezp/p/14967445.html\n\n### 启动\n\n```\n# 检查配置文件\nsudo /usr/local/nginx/sbin/nginx  -t\n#启动\nsudo /usr/local/nginx/sbin/nginx\n# 重启加载配置\nsudo /usr/local/nginx/sbin/nginx -s reload\n```\n\n\n\n# 配置文件\n\n```sh\nuser  nginx;\nworker_processes  1;\n\nerror_log  /var/log/nginx/error.log warn;\npid        /var/run/nginx.pid;\n\n\nevents {\n    worker_connections  1024;\n}\n\n\nhttp {\n\n\t#博客服务器，多个可以实现负载均衡\n    upstream sob-blog{\n\t   server 172.23.152.88:8082 weight=1;\n    }\n\n\n \n    include       /etc/nginx/mime.types;\n    default_type  application/octet-stream;\n\n    log_format  main  '$remote_addr - $remote_user [$time_local] \"$request\" '\n                      '$status $body_bytes_sent \"$http_referer\" '\n                      '\"$http_user_agent\" \"$http_x_forwarded_for\"';\n\n    access_log  /var/log/nginx/access.log  main;\n\n    sendfile        on;\n    #tcp_nopush     on;\n\n    keepalive_timeout  65;\n\n    #gzip  on;\n\n   \n\tserver {\n\t\tlisten       80;\n\t\tserver_name  localhost;\n\n\t\t#charset koi8-r;\n\t\t#access_log  /var/log/nginx/host.access.log  main;\n\t\t\n\t\tindex index.html index.htm index.php;\n\t\t#用户相关的请求，转到sob-blog\n\t\tlocation ^~/user/ {\n            \tproxy_pass   http://sob-blog;\n\t\t\t#以下是一些反向代理的配置可删除\n\t\t\tproxy_redirect             off; \n\t\t\t#后端的Web服务器可以通过X-Forwarded-For获取用户真实IP\n\t\t\tproxy_set_header           Host $host;\n\t\t\tproxy_set_header \t\t   Cookie $http_cookie;\n\t\t\tproxy_set_header           X-Real-IP $remote_addr; \n\t\t\tproxy_set_header           X-Forwarded-For $proxy_add_x_forwarded_for;\n\t\t\tproxy_set_header           HTTP_X_FORWARDED_FOR $remote_addr;\n\t\t\tproxy_set_header           X-Forwarded-Server $host;\n        }\n        \n\t\tlocation ^~/admin/ {\n           \tproxy_pass   http://sob-blog;\n\t\t\t#以下是一些反向代理的配置可删除\n\t\t\tproxy_redirect             off; \n\t\t\t#后端的Web服务器可以通过X-Forwarded-For获取用户真实IP\n\t\t\tproxy_set_header           Host $host;\n\t\t\tproxy_set_header \t\t   Cookie $http_cookie;\n\t\t\tproxy_set_header           X-Real-IP $remote_addr; \n\t\t\tproxy_set_header           X-Forwarded-For $proxy_add_x_forwarded_for;\n\t\t\tproxy_set_header           HTTP_X_FORWARDED_FOR $remote_addr;\n\t\t\tproxy_set_header           X-Forwarded-Server $host;\n        }\n        \n        location ^~/portal/ {\n           \tproxy_pass   http://sob-blog;\n\t\t\t#以下是一些反向代理的配置可删除\n\t\t\tproxy_redirect             off; \n\t\t\t#后端的Web服务器可以通过X-Forwarded-For获取用户真实IP\n\t\t\tproxy_set_header           Host $host;\n\t\t\tproxy_set_header \t\t   Cookie $http_cookie;\n\t\t\tproxy_set_header           X-Real-IP $remote_addr; \n\t\t\tproxy_set_header           X-Forwarded-For $proxy_add_x_forwarded_for;\n\t\t\tproxy_set_header           HTTP_X_FORWARDED_FOR $remote_addr;\n\t\t\tproxy_set_header           X-Forwarded-Server $host;\n        }\n\n\t\t#其他访问访问根目录wwwroot\n\t\tlocation / {\n\t\t    root   /usr/share/nginx/html;\n\t\t    index  index.html index.htm;\n\t\t    #此处解决刷新页面出现404的问题\n\t\t    try_files $uri $uri/ /index.html;\n        }\n\t\t\n\t}\n}\n\n```\n\n\n\n```shell\n#user  nobody;\n \n#==工作进程数，一般设置为cpu核心数\nworker_processes  1;\n \n#error_log  logs/error.log;\n#error_log  logs/error.log  notice;\n#error_log  logs/error.log  info;\n \n#pid        logs/nginx.pid;\n \n \nevents {\n \n    #==最大连接数，一般设置为cpu*2048\n    worker_connections  1024;\n}\n \n \nhttp {\n\n    # 负载均衡配置\n    upstream web_servers {\n    server localhost:8082;\n    }\n\n    include       mime.types;\n    default_type  application/octet-stream;\n \n    #log_format  main  '$remote_addr - $remote_user [$time_local] \"$request\" '\n    #                  '$status $body_bytes_sent \"$http_referer\" '\n    #                  '\"$http_user_agent\" \"$http_x_forwarded_for\"';\n \n    #access_log  logs/access.log  main;\n \n    sendfile        on;\n    #tcp_nopush     on;\n \n    #keepalive_timeout  0;\n    \n    #==客户端链接超时时间\n    keepalive_timeout  65;\n \n    #gzip  on;\n \n    #当配置多个server节点时，默认server names的缓存区大小就不够了，需要手动设置大一点\n    server_names_hash_bucket_size 512;\n \n    #server表示虚拟主机可以理解为一个站点，可以配置多个server节点搭建多个站点\n    #每一个请求进来确定使用哪个server由server_name确定\n    server {\n        #站点监听端口\n        listen       80;\n        #站点访问域名\n        server_name  localhost;\n        \n        #编码格式，避免url参数乱码\n        charset utf-8;\n \n        #access_log  logs/host.access.log  main;\n \n        #location用来匹配同一域名下多个URI的访问规则\n        #比如动态资源如何跳转，静态资源如何跳转等\n        #location后面跟着的/代表匹配规则\n        location / {\n            #站点根目录，可以是相对路径，也可以使绝对路径\n            root   html;\n            #默认主页\n            index  index.html index.htm;\n            \n            #转发后端站点地址，一般用于做软负载，轮询后端服务器\n            #proxy_pass http://ip:端口;\n \n            #拒绝请求，返回403，一般用于某些目录禁止访问\n            #deny all;\n            \n            #允许请求\n            #allow all;\n            \n            add_header 'Access-Control-Allow-Origin' '*';\n            add_header 'Access-Control-Allow-Credentials' 'true';\n            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';\n            add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';\n            #重新定义或者添加发往后端服务器的请求头\n            #给请求头中添加客户请求主机名\n            proxy_set_header Host $host;\n            #给请求头中添加客户端IP\n            proxy_set_header X-Real-IP $remote_addr;\n            #将$remote_addr变量值添加在客户端“X-Forwarded-For”请求头的后面，并以逗号分隔。 如果客户端请求未携带“X-Forwarded-For”请求头，$proxy_add_x_forwarded_for变量值将与$remote_addr变量相同  \n            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n            #给请求头中添加客户端的Cookie\n            proxy_set_header Cookie $http_cookie;\n            #将使用代理服务器的主域名和端口号来替换。如果端口是80，可以不加。\n            proxy_redirect off;\n            \n            #浏览器对 Cookie 有很多限制，如果 Cookie 的 Domain 部分与当前页面的 Domain 不匹配就无法写入。\n            #所以如果请求 A 域名，服务器 proxy_pass 到 B 域名，然后 B 服务器输出 Domian=B 的 Cookie，\n            #前端的页面依然停留在 A 域名上，于是浏览器就无法将 Cookie 写入。\n            \n　　         #不仅是域名，浏览器对 Path 也有限制。我们经常会 proxy_pass 到目标服务器的某个 Path 下，\n            #不把这个 Path 暴露给浏览器。这时候如果目标服务器的 Cookie 写死了 Path 也会出现 Cookie 无法写入的问题。\n            \n            #设置“Set-Cookie”响应头中的domain属性的替换文本，其值可以为一个字符串、正则表达式的模式或一个引用的变量\n            #转发后端服务器如果需要Cookie则需要将cookie domain也进行转换，否则前端域名与后端域名不一致cookie就会无法存取\n　　　　　　  #配置规则：proxy_cookie_domain serverDomain(后端服务器域) nginxDomain(nginx服务器域)\n            proxy_cookie_domain localhost .testcaigou800.com;\n            \n            #取消当前配置级别的所有proxy_cookie_domain指令\n            #proxy_cookie_domain off;\n            #与后端服务器建立连接的超时时间。一般不可能大于75秒；\n            proxy_connect_timeout 30;\n        }\n\n        #用户相关的请求，转到sob-blog\n\t\tlocation ^~/user/ {\n            proxy_pass   http://web_servers;\n\t\t\t#以下是一些反向代理的配置可删除\n\t\t\tproxy_redirect             off; \n\t\t\t#后端的Web服务器可以通过X-Forwarded-For获取用户真实IP\n\t\t\tproxy_set_header           Host $host;\n\t\t\tproxy_set_header \t\t   Cookie $http_cookie;\n\t\t\tproxy_set_header           X-Real-IP $remote_addr; \n\t\t\tproxy_set_header           X-Forwarded-For $proxy_add_x_forwarded_for;\n\t\t\tproxy_set_header           HTTP_X_FORWARDED_FOR $remote_addr;\n\t\t\tproxy_set_header           X-Forwarded-Server $host;\n        }\n        \n\t\tlocation ^~/admin/ {\n           \t proxy_pass   http://web_servers;\n\t\t\t#以下是一些反向代理的配置可删除\n\t\t\tproxy_redirect             off; \n\t\t\t#后端的Web服务器可以通过X-Forwarded-For获取用户真实IP\n\t\t\tproxy_set_header           Host $host;\n\t\t\tproxy_set_header \t\t   Cookie $http_cookie;\n\t\t\tproxy_set_header           X-Real-IP $remote_addr; \n\t\t\tproxy_set_header           X-Forwarded-For $proxy_add_x_forwarded_for;\n\t\t\tproxy_set_header           HTTP_X_FORWARDED_FOR $remote_addr;\n\t\t\tproxy_set_header           X-Forwarded-Server $host;\n        }\n        \n        location ^~/portal/ {\n           \tproxy_pass   http://web_servers;\n\t\t\t#以下是一些反向代理的配置可删除\n\t\t\tproxy_redirect             off; \n\t\t\t#后端的Web服务器可以通过X-Forwarded-For获取用户真实IP\n\t\t\tproxy_set_header           Host $host;\n\t\t\tproxy_set_header \t\t   Cookie $http_cookie;\n\t\t\tproxy_set_header           X-Real-IP $remote_addr; \n\t\t\tproxy_set_header           X-Forwarded-For $proxy_add_x_forwarded_for;\n\t\t\tproxy_set_header           HTTP_X_FORWARDED_FOR $remote_addr;\n\t\t\tproxy_set_header           X-Forwarded-Server $host;\n        }\n \n        #error_page  404              /404.html;\n \n        # redirect server error pages to the static page /50x.html\n        #\n        error_page   500 502 503 504  /50x.html;\n        location = /50x.html {\n            root   html;\n        }\n \n    }\n    \n```\n# linux服务器上jar包启动及关闭方式\n## 1、直接启动\n```shell\njava -jar chapter.jar\n```\n> 这种启动方式有个缺点：启动好了之后就不能动了，不能ctrl+c退出，也不能关闭终端，一旦退出或者关闭终端，程序就会关闭。\n## 2.后台启动\n```shell\njava -jar chapter.jar &\n```\n> &符号就代表后台启动，这种启动方式日志仍然输入到终端控制台中，但是ctrl+c不会关闭程序，退出终端，程序会关闭\n## 3.nohup启动\n```sh\nnohup java -jar chapter.jar &\n```\n> 这种方式会生成一个nohup.out来记录日志，所以日志不会直接输出到终端，而且这种方式启动，ctrl+c或者关闭终端，程序都不会结束\n## 4、指定日志文件\nnohup启动的日志输出文件nohup.out是自动生成的，但是我们更希望自己指定日志输出文件，用以下命令：\n```sh\nnohup java -jar chapter.jar > logs.log &\n```\n> 此命令会将日志重定向到当前的logs.log文件中，但是只会输出标准输出。这种方式启动，ctrl+c或者关闭终端，程序都不会结束\n\n## 5、重定向错误输出（推荐）\n```sh\nnohup java -jar chapter.jar > logs.log 2>&1 &\n```\n> 这条命令不懂的可以去了解一下shell脚本，我简单解释一下：\n Linux下1表示标准输出，2表示错误输出\n“>logs.log”表示标准输出重定向到logs.log中，默认是标准输出，省略1,不省略的话可以写成1>logs.log;\n\"2>&1\"表示错误输出也重定向到logs.log中，其中&1表示前面的logs.log文件，不加&，写成2>1的话就表示把错误输出到1这个文件而不是前面标准输出的文件logs.log，所以&要加上；\n最后一个&表示以后台方式启动程序。\n这种方式启动，ctrl+c或者关闭终端，程序都不会结束。\n\n## 6、以系统服务启动（更推荐）\n\n​     以系统服务启动，实际上就是自己注册一个系统服务，然后系统服务的功能就是启动此jar包，所以我们就可以通过启动自定义系统服务控制jar包的启动了，这种方式有很多好处，最显而易见的就是系统服务的启动、停止、查看状态、开机自启动等命令能直接管理到jar包进程。\n\n1. 创建自定义系统服务(只介绍CentOS7下的方式)\n   在/etc/systemd/system目录下创建一个xxx.service文件，xxx就是自定义的服务名称。\n   在文件中写入以下内容：\n\n```sh\n[Unit]\n\nDescription=chapter\n\nAfter=syslog.target\n\n[Service]\n\nExecStart=/usr/software/jdk1.8.0_221/bin/java -jar /usr/programme/serviceJarTest/chapter.jar\n\n[Install]\n\nWantedBy=multi-user.target\n\n```\n\n> 内容解释：\n> [Unit]说明\n> Description:服务的描述\n> After:设置在某个服务启动后启动\n>\n> [Service]服务参数配置\n> ExecStart服务运行执行的命令\n>\n> [Install]服务安装的相关设置，可设置为多用户\n>\n> 根据需要，自己修改description和ExecStart的内容即可（ExecStart后面的java命令需要全路径，写java -jar 会启动不了）\n\n​\t2. 启动系统服务\n\n```sh\nsystemctl start 服务名\n```\n\n```\nsystemctl start xxx  #启动服务\nsystemctl status xxx  #查看服务状态\nsystemctl stop xxx  #停止服务\nsystemctl enable xxx  #设置服务开机自启动\nsystemctl disable xxx  #取消服务开机自启动\nsystemctl restart xxx  #重启服务\n```\n\n## 7、关闭jar包程序\n\n- 如果是第一种方式启动，ctrl+c就可以直接关闭\n\n\n- 如果是第二种方式启动，关闭终端就可以关闭程序\n\n\n- 如果是第三四五种方式启动，可以用kill进程的方式结束进程：\n  查看java进程：\n\n```sh\nps -ef | grep java\n#或者\n ps -ef|grep Blog-0.0.1-SNAPSHOT.jar\n\n```\n\n```sh\n//关闭进程\n#24204为查询出来的进程号\nkill -s 9 24204 \n```\n\n# 8.启动\n\n```sh\nnohup java -Djasypt.encryptor.password=578bee5369c35ad48751dd979ea4681e -Xms512m -Xmx512m -XX:MaxMetaspaceSize=128m  -XX:MaxNewSize=256m -jar  Blog-0.0.1-SNAPSHOT.jar  > logs.log 2>&1 &\n```\n知识点:\nJDK8之后把-XX:PermSize 和-XX:MaxPermGen移除了，取而代之的是\n```sh\n-XX:MetaspaceSize=128m （元空间默认大小）\n-XX:MaxMetaspaceSize=128m （元空间最大大小）\n```\n参数介绍:\n-XX:MetaspaceSize=128m （元空间默认大小）\n-XX:MaxMetaspaceSize=128m （元空间最大大小）\n-Xms1024m （堆最大大小）\n-Xmx1024m （堆默认大小）\n-Xmn256m （新生代大小）\n-Xss256k （棧最大深度大小）\n-XX:SurvivorRatio=8 （新生代分区比例 8:2）\n-XX:+UseConcMarkSweepGC （指定使用的垃圾收集器，这里使用CMS收集器）\n-XX:+PrintGCDetails （打印详细的GC日志）\n\n","source":"_posts/单体项目部署.md","raw":"---\ntitle: Java项目部署\nexcerpt: 比较简单的单体项目部署方式\ncategories:\n  - 运维\nindex_img: https://img0.baidu.com/it/u=3705150710,3501402283&fm=253&fmt=auto&app=138&f=PNG?w=500&h=288\nabbrlink: ea92c0b9\ndate: 2021-05-03 21:04:56\n---\n# 一、安装Nginx\n## (一)Docker安装nginx\n### 1.查看镜像版本\n\n```sh\ndocker  search nginx\n```\n\n### 2.拉取镜像\n\n```\ndocker pull nginx\n```\n\n### 3.查看镜像\n\n```\ndocker images | grep nginx\n```\n\n### 4.创建挂载目录\n\n```\nmkdir nginx\ncd nginx\nmkdir conf\nmkdir wwwroot\nmkdir logs\n```\n```sh\n#创建挂载目录\nmkdir -p ./nginx/{conf,html,logs}\n```\n\n### 5.构建容器并启动\n\n```\ndocker run -d --name=nginx -p 80:80 \\\n-v /local/docker/nginx/wwwroot:/usr/share/nginx/html \\\n-v /local/docker/nginx/conf/nginx.conf:/etc/nginx/nginx.conf \\\n-v /local/docker/nginx/logs:/var/log/nginx \\\nnginx\n```\n\n## （二）\n\n### 1.安装依赖包\n\n```\nsudo yum -y install gcc zlib zlib-devel pcre-devel openssl openssl-devel\n```\n\n### 2.下载并解压安装包\n\n```\ncd /usr/local//下载tar包\nsudo wget  http://nginx.org/download/nginx-1.21.4.tar.gz\nsudo tar -xvf nginx-1.21.4.tar.gz\n```\n\nhttps://www.cnblogs.com/gezp/p/14967445.html\n\n### 启动\n\n```\n# 检查配置文件\nsudo /usr/local/nginx/sbin/nginx  -t\n#启动\nsudo /usr/local/nginx/sbin/nginx\n# 重启加载配置\nsudo /usr/local/nginx/sbin/nginx -s reload\n```\n\n\n\n# 配置文件\n\n```sh\nuser  nginx;\nworker_processes  1;\n\nerror_log  /var/log/nginx/error.log warn;\npid        /var/run/nginx.pid;\n\n\nevents {\n    worker_connections  1024;\n}\n\n\nhttp {\n\n\t#博客服务器，多个可以实现负载均衡\n    upstream sob-blog{\n\t   server 172.23.152.88:8082 weight=1;\n    }\n\n\n \n    include       /etc/nginx/mime.types;\n    default_type  application/octet-stream;\n\n    log_format  main  '$remote_addr - $remote_user [$time_local] \"$request\" '\n                      '$status $body_bytes_sent \"$http_referer\" '\n                      '\"$http_user_agent\" \"$http_x_forwarded_for\"';\n\n    access_log  /var/log/nginx/access.log  main;\n\n    sendfile        on;\n    #tcp_nopush     on;\n\n    keepalive_timeout  65;\n\n    #gzip  on;\n\n   \n\tserver {\n\t\tlisten       80;\n\t\tserver_name  localhost;\n\n\t\t#charset koi8-r;\n\t\t#access_log  /var/log/nginx/host.access.log  main;\n\t\t\n\t\tindex index.html index.htm index.php;\n\t\t#用户相关的请求，转到sob-blog\n\t\tlocation ^~/user/ {\n            \tproxy_pass   http://sob-blog;\n\t\t\t#以下是一些反向代理的配置可删除\n\t\t\tproxy_redirect             off; \n\t\t\t#后端的Web服务器可以通过X-Forwarded-For获取用户真实IP\n\t\t\tproxy_set_header           Host $host;\n\t\t\tproxy_set_header \t\t   Cookie $http_cookie;\n\t\t\tproxy_set_header           X-Real-IP $remote_addr; \n\t\t\tproxy_set_header           X-Forwarded-For $proxy_add_x_forwarded_for;\n\t\t\tproxy_set_header           HTTP_X_FORWARDED_FOR $remote_addr;\n\t\t\tproxy_set_header           X-Forwarded-Server $host;\n        }\n        \n\t\tlocation ^~/admin/ {\n           \tproxy_pass   http://sob-blog;\n\t\t\t#以下是一些反向代理的配置可删除\n\t\t\tproxy_redirect             off; \n\t\t\t#后端的Web服务器可以通过X-Forwarded-For获取用户真实IP\n\t\t\tproxy_set_header           Host $host;\n\t\t\tproxy_set_header \t\t   Cookie $http_cookie;\n\t\t\tproxy_set_header           X-Real-IP $remote_addr; \n\t\t\tproxy_set_header           X-Forwarded-For $proxy_add_x_forwarded_for;\n\t\t\tproxy_set_header           HTTP_X_FORWARDED_FOR $remote_addr;\n\t\t\tproxy_set_header           X-Forwarded-Server $host;\n        }\n        \n        location ^~/portal/ {\n           \tproxy_pass   http://sob-blog;\n\t\t\t#以下是一些反向代理的配置可删除\n\t\t\tproxy_redirect             off; \n\t\t\t#后端的Web服务器可以通过X-Forwarded-For获取用户真实IP\n\t\t\tproxy_set_header           Host $host;\n\t\t\tproxy_set_header \t\t   Cookie $http_cookie;\n\t\t\tproxy_set_header           X-Real-IP $remote_addr; \n\t\t\tproxy_set_header           X-Forwarded-For $proxy_add_x_forwarded_for;\n\t\t\tproxy_set_header           HTTP_X_FORWARDED_FOR $remote_addr;\n\t\t\tproxy_set_header           X-Forwarded-Server $host;\n        }\n\n\t\t#其他访问访问根目录wwwroot\n\t\tlocation / {\n\t\t    root   /usr/share/nginx/html;\n\t\t    index  index.html index.htm;\n\t\t    #此处解决刷新页面出现404的问题\n\t\t    try_files $uri $uri/ /index.html;\n        }\n\t\t\n\t}\n}\n\n```\n\n\n\n```shell\n#user  nobody;\n \n#==工作进程数，一般设置为cpu核心数\nworker_processes  1;\n \n#error_log  logs/error.log;\n#error_log  logs/error.log  notice;\n#error_log  logs/error.log  info;\n \n#pid        logs/nginx.pid;\n \n \nevents {\n \n    #==最大连接数，一般设置为cpu*2048\n    worker_connections  1024;\n}\n \n \nhttp {\n\n    # 负载均衡配置\n    upstream web_servers {\n    server localhost:8082;\n    }\n\n    include       mime.types;\n    default_type  application/octet-stream;\n \n    #log_format  main  '$remote_addr - $remote_user [$time_local] \"$request\" '\n    #                  '$status $body_bytes_sent \"$http_referer\" '\n    #                  '\"$http_user_agent\" \"$http_x_forwarded_for\"';\n \n    #access_log  logs/access.log  main;\n \n    sendfile        on;\n    #tcp_nopush     on;\n \n    #keepalive_timeout  0;\n    \n    #==客户端链接超时时间\n    keepalive_timeout  65;\n \n    #gzip  on;\n \n    #当配置多个server节点时，默认server names的缓存区大小就不够了，需要手动设置大一点\n    server_names_hash_bucket_size 512;\n \n    #server表示虚拟主机可以理解为一个站点，可以配置多个server节点搭建多个站点\n    #每一个请求进来确定使用哪个server由server_name确定\n    server {\n        #站点监听端口\n        listen       80;\n        #站点访问域名\n        server_name  localhost;\n        \n        #编码格式，避免url参数乱码\n        charset utf-8;\n \n        #access_log  logs/host.access.log  main;\n \n        #location用来匹配同一域名下多个URI的访问规则\n        #比如动态资源如何跳转，静态资源如何跳转等\n        #location后面跟着的/代表匹配规则\n        location / {\n            #站点根目录，可以是相对路径，也可以使绝对路径\n            root   html;\n            #默认主页\n            index  index.html index.htm;\n            \n            #转发后端站点地址，一般用于做软负载，轮询后端服务器\n            #proxy_pass http://ip:端口;\n \n            #拒绝请求，返回403，一般用于某些目录禁止访问\n            #deny all;\n            \n            #允许请求\n            #allow all;\n            \n            add_header 'Access-Control-Allow-Origin' '*';\n            add_header 'Access-Control-Allow-Credentials' 'true';\n            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';\n            add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';\n            #重新定义或者添加发往后端服务器的请求头\n            #给请求头中添加客户请求主机名\n            proxy_set_header Host $host;\n            #给请求头中添加客户端IP\n            proxy_set_header X-Real-IP $remote_addr;\n            #将$remote_addr变量值添加在客户端“X-Forwarded-For”请求头的后面，并以逗号分隔。 如果客户端请求未携带“X-Forwarded-For”请求头，$proxy_add_x_forwarded_for变量值将与$remote_addr变量相同  \n            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n            #给请求头中添加客户端的Cookie\n            proxy_set_header Cookie $http_cookie;\n            #将使用代理服务器的主域名和端口号来替换。如果端口是80，可以不加。\n            proxy_redirect off;\n            \n            #浏览器对 Cookie 有很多限制，如果 Cookie 的 Domain 部分与当前页面的 Domain 不匹配就无法写入。\n            #所以如果请求 A 域名，服务器 proxy_pass 到 B 域名，然后 B 服务器输出 Domian=B 的 Cookie，\n            #前端的页面依然停留在 A 域名上，于是浏览器就无法将 Cookie 写入。\n            \n　　         #不仅是域名，浏览器对 Path 也有限制。我们经常会 proxy_pass 到目标服务器的某个 Path 下，\n            #不把这个 Path 暴露给浏览器。这时候如果目标服务器的 Cookie 写死了 Path 也会出现 Cookie 无法写入的问题。\n            \n            #设置“Set-Cookie”响应头中的domain属性的替换文本，其值可以为一个字符串、正则表达式的模式或一个引用的变量\n            #转发后端服务器如果需要Cookie则需要将cookie domain也进行转换，否则前端域名与后端域名不一致cookie就会无法存取\n　　　　　　  #配置规则：proxy_cookie_domain serverDomain(后端服务器域) nginxDomain(nginx服务器域)\n            proxy_cookie_domain localhost .testcaigou800.com;\n            \n            #取消当前配置级别的所有proxy_cookie_domain指令\n            #proxy_cookie_domain off;\n            #与后端服务器建立连接的超时时间。一般不可能大于75秒；\n            proxy_connect_timeout 30;\n        }\n\n        #用户相关的请求，转到sob-blog\n\t\tlocation ^~/user/ {\n            proxy_pass   http://web_servers;\n\t\t\t#以下是一些反向代理的配置可删除\n\t\t\tproxy_redirect             off; \n\t\t\t#后端的Web服务器可以通过X-Forwarded-For获取用户真实IP\n\t\t\tproxy_set_header           Host $host;\n\t\t\tproxy_set_header \t\t   Cookie $http_cookie;\n\t\t\tproxy_set_header           X-Real-IP $remote_addr; \n\t\t\tproxy_set_header           X-Forwarded-For $proxy_add_x_forwarded_for;\n\t\t\tproxy_set_header           HTTP_X_FORWARDED_FOR $remote_addr;\n\t\t\tproxy_set_header           X-Forwarded-Server $host;\n        }\n        \n\t\tlocation ^~/admin/ {\n           \t proxy_pass   http://web_servers;\n\t\t\t#以下是一些反向代理的配置可删除\n\t\t\tproxy_redirect             off; \n\t\t\t#后端的Web服务器可以通过X-Forwarded-For获取用户真实IP\n\t\t\tproxy_set_header           Host $host;\n\t\t\tproxy_set_header \t\t   Cookie $http_cookie;\n\t\t\tproxy_set_header           X-Real-IP $remote_addr; \n\t\t\tproxy_set_header           X-Forwarded-For $proxy_add_x_forwarded_for;\n\t\t\tproxy_set_header           HTTP_X_FORWARDED_FOR $remote_addr;\n\t\t\tproxy_set_header           X-Forwarded-Server $host;\n        }\n        \n        location ^~/portal/ {\n           \tproxy_pass   http://web_servers;\n\t\t\t#以下是一些反向代理的配置可删除\n\t\t\tproxy_redirect             off; \n\t\t\t#后端的Web服务器可以通过X-Forwarded-For获取用户真实IP\n\t\t\tproxy_set_header           Host $host;\n\t\t\tproxy_set_header \t\t   Cookie $http_cookie;\n\t\t\tproxy_set_header           X-Real-IP $remote_addr; \n\t\t\tproxy_set_header           X-Forwarded-For $proxy_add_x_forwarded_for;\n\t\t\tproxy_set_header           HTTP_X_FORWARDED_FOR $remote_addr;\n\t\t\tproxy_set_header           X-Forwarded-Server $host;\n        }\n \n        #error_page  404              /404.html;\n \n        # redirect server error pages to the static page /50x.html\n        #\n        error_page   500 502 503 504  /50x.html;\n        location = /50x.html {\n            root   html;\n        }\n \n    }\n    \n```\n# linux服务器上jar包启动及关闭方式\n## 1、直接启动\n```shell\njava -jar chapter.jar\n```\n> 这种启动方式有个缺点：启动好了之后就不能动了，不能ctrl+c退出，也不能关闭终端，一旦退出或者关闭终端，程序就会关闭。\n## 2.后台启动\n```shell\njava -jar chapter.jar &\n```\n> &符号就代表后台启动，这种启动方式日志仍然输入到终端控制台中，但是ctrl+c不会关闭程序，退出终端，程序会关闭\n## 3.nohup启动\n```sh\nnohup java -jar chapter.jar &\n```\n> 这种方式会生成一个nohup.out来记录日志，所以日志不会直接输出到终端，而且这种方式启动，ctrl+c或者关闭终端，程序都不会结束\n## 4、指定日志文件\nnohup启动的日志输出文件nohup.out是自动生成的，但是我们更希望自己指定日志输出文件，用以下命令：\n```sh\nnohup java -jar chapter.jar > logs.log &\n```\n> 此命令会将日志重定向到当前的logs.log文件中，但是只会输出标准输出。这种方式启动，ctrl+c或者关闭终端，程序都不会结束\n\n## 5、重定向错误输出（推荐）\n```sh\nnohup java -jar chapter.jar > logs.log 2>&1 &\n```\n> 这条命令不懂的可以去了解一下shell脚本，我简单解释一下：\n Linux下1表示标准输出，2表示错误输出\n“>logs.log”表示标准输出重定向到logs.log中，默认是标准输出，省略1,不省略的话可以写成1>logs.log;\n\"2>&1\"表示错误输出也重定向到logs.log中，其中&1表示前面的logs.log文件，不加&，写成2>1的话就表示把错误输出到1这个文件而不是前面标准输出的文件logs.log，所以&要加上；\n最后一个&表示以后台方式启动程序。\n这种方式启动，ctrl+c或者关闭终端，程序都不会结束。\n\n## 6、以系统服务启动（更推荐）\n\n​     以系统服务启动，实际上就是自己注册一个系统服务，然后系统服务的功能就是启动此jar包，所以我们就可以通过启动自定义系统服务控制jar包的启动了，这种方式有很多好处，最显而易见的就是系统服务的启动、停止、查看状态、开机自启动等命令能直接管理到jar包进程。\n\n1. 创建自定义系统服务(只介绍CentOS7下的方式)\n   在/etc/systemd/system目录下创建一个xxx.service文件，xxx就是自定义的服务名称。\n   在文件中写入以下内容：\n\n```sh\n[Unit]\n\nDescription=chapter\n\nAfter=syslog.target\n\n[Service]\n\nExecStart=/usr/software/jdk1.8.0_221/bin/java -jar /usr/programme/serviceJarTest/chapter.jar\n\n[Install]\n\nWantedBy=multi-user.target\n\n```\n\n> 内容解释：\n> [Unit]说明\n> Description:服务的描述\n> After:设置在某个服务启动后启动\n>\n> [Service]服务参数配置\n> ExecStart服务运行执行的命令\n>\n> [Install]服务安装的相关设置，可设置为多用户\n>\n> 根据需要，自己修改description和ExecStart的内容即可（ExecStart后面的java命令需要全路径，写java -jar 会启动不了）\n\n​\t2. 启动系统服务\n\n```sh\nsystemctl start 服务名\n```\n\n```\nsystemctl start xxx  #启动服务\nsystemctl status xxx  #查看服务状态\nsystemctl stop xxx  #停止服务\nsystemctl enable xxx  #设置服务开机自启动\nsystemctl disable xxx  #取消服务开机自启动\nsystemctl restart xxx  #重启服务\n```\n\n## 7、关闭jar包程序\n\n- 如果是第一种方式启动，ctrl+c就可以直接关闭\n\n\n- 如果是第二种方式启动，关闭终端就可以关闭程序\n\n\n- 如果是第三四五种方式启动，可以用kill进程的方式结束进程：\n  查看java进程：\n\n```sh\nps -ef | grep java\n#或者\n ps -ef|grep Blog-0.0.1-SNAPSHOT.jar\n\n```\n\n```sh\n//关闭进程\n#24204为查询出来的进程号\nkill -s 9 24204 \n```\n\n# 8.启动\n\n```sh\nnohup java -Djasypt.encryptor.password=578bee5369c35ad48751dd979ea4681e -Xms512m -Xmx512m -XX:MaxMetaspaceSize=128m  -XX:MaxNewSize=256m -jar  Blog-0.0.1-SNAPSHOT.jar  > logs.log 2>&1 &\n```\n知识点:\nJDK8之后把-XX:PermSize 和-XX:MaxPermGen移除了，取而代之的是\n```sh\n-XX:MetaspaceSize=128m （元空间默认大小）\n-XX:MaxMetaspaceSize=128m （元空间最大大小）\n```\n参数介绍:\n-XX:MetaspaceSize=128m （元空间默认大小）\n-XX:MaxMetaspaceSize=128m （元空间最大大小）\n-Xms1024m （堆最大大小）\n-Xmx1024m （堆默认大小）\n-Xmn256m （新生代大小）\n-Xss256k （棧最大深度大小）\n-XX:SurvivorRatio=8 （新生代分区比例 8:2）\n-XX:+UseConcMarkSweepGC （指定使用的垃圾收集器，这里使用CMS收集器）\n-XX:+PrintGCDetails （打印详细的GC日志）\n\n","slug":"单体项目部署","published":1,"updated":"2023-02-03T15:24:36.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clhrpaiah000veq6q21eabb8c","content":"<h1 id=\"一、安装Nginx\"><a href=\"#一、安装Nginx\" class=\"headerlink\" title=\"一、安装Nginx\"></a>一、安装Nginx</h1><h2 id=\"一-Docker安装nginx\"><a href=\"#一-Docker安装nginx\" class=\"headerlink\" title=\"(一)Docker安装nginx\"></a>(一)Docker安装nginx</h2><h3 id=\"1-查看镜像版本\"><a href=\"#1-查看镜像版本\" class=\"headerlink\" title=\"1.查看镜像版本\"></a>1.查看镜像版本</h3><div class=\"code-wrapper\"><pre><code class=\"hljs sh\">docker  search nginx</code></pre></div>\n\n<h3 id=\"2-拉取镜像\"><a href=\"#2-拉取镜像\" class=\"headerlink\" title=\"2.拉取镜像\"></a>2.拉取镜像</h3><div class=\"code-wrapper\"><pre><code class=\"hljs ebnf\"><span class=\"hljs-attribute\">docker pull nginx</span></code></pre></div>\n\n<h3 id=\"3-查看镜像\"><a href=\"#3-查看镜像\" class=\"headerlink\" title=\"3.查看镜像\"></a>3.查看镜像</h3><div class=\"code-wrapper\"><pre><code class=\"hljs 1c\">docker images <span class=\"hljs-string\">| grep nginx</span></code></pre></div>\n\n<h3 id=\"4-创建挂载目录\"><a href=\"#4-创建挂载目录\" class=\"headerlink\" title=\"4.创建挂载目录\"></a>4.创建挂载目录</h3><div class=\"code-wrapper\"><pre><code class=\"hljs stata\"><span class=\"hljs-keyword\">mkdir</span> nginx\n<span class=\"hljs-keyword\">cd</span> nginx\n<span class=\"hljs-keyword\">mkdir</span> <span class=\"hljs-keyword\">conf</span>\n<span class=\"hljs-keyword\">mkdir</span> wwwroot\n<span class=\"hljs-keyword\">mkdir</span> logs</code></pre></div>\n<div class=\"code-wrapper\"><pre><code class=\"hljs sh\"><span class=\"hljs-comment\">#创建挂载目录</span>\n<span class=\"hljs-built_in\">mkdir</span> -p ./nginx/&#123;conf,html,logs&#125;</code></pre></div>\n\n<h3 id=\"5-构建容器并启动\"><a href=\"#5-构建容器并启动\" class=\"headerlink\" title=\"5.构建容器并启动\"></a>5.构建容器并启动</h3><div class=\"code-wrapper\"><pre><code class=\"hljs awk\">docker run -d --name=nginx -p <span class=\"hljs-number\">80</span>:<span class=\"hljs-number\">80</span> \\\n-v <span class=\"hljs-regexp\">/local/</span>docker<span class=\"hljs-regexp\">/nginx/</span>wwwroot:<span class=\"hljs-regexp\">/usr/</span>share<span class=\"hljs-regexp\">/nginx/</span>html \\\n-v <span class=\"hljs-regexp\">/local/</span>docker<span class=\"hljs-regexp\">/nginx/</span>conf<span class=\"hljs-regexp\">/nginx.conf:/</span>etc<span class=\"hljs-regexp\">/nginx/</span>nginx.conf \\\n-v <span class=\"hljs-regexp\">/local/</span>docker<span class=\"hljs-regexp\">/nginx/</span>logs:<span class=\"hljs-regexp\">/var/</span>log/nginx \\\nnginx</code></pre></div>\n\n<h2 id=\"（二）\"><a href=\"#（二）\" class=\"headerlink\" title=\"（二）\"></a>（二）</h2><h3 id=\"1-安装依赖包\"><a href=\"#1-安装依赖包\" class=\"headerlink\" title=\"1.安装依赖包\"></a>1.安装依赖包</h3><div class=\"code-wrapper\"><pre><code class=\"hljs nsis\">sudo yum -y install gcc <span class=\"hljs-literal\">zlib</span> <span class=\"hljs-literal\">zlib</span>-devel pcre-devel openssl openssl-devel</code></pre></div>\n\n<h3 id=\"2-下载并解压安装包\"><a href=\"#2-下载并解压安装包\" class=\"headerlink\" title=\"2.下载并解压安装包\"></a>2.下载并解压安装包</h3><div class=\"code-wrapper\"><pre><code class=\"hljs awk\">cd <span class=\"hljs-regexp\">/usr/</span>local<span class=\"hljs-regexp\">//</span>下载tar包\nsudo wget  http:<span class=\"hljs-regexp\">//</span>nginx.org<span class=\"hljs-regexp\">/download/</span>nginx-<span class=\"hljs-number\">1.21</span>.<span class=\"hljs-number\">4</span>.tar.gz\nsudo tar -xvf nginx-<span class=\"hljs-number\">1.21</span>.<span class=\"hljs-number\">4</span>.tar.gz</code></pre></div>\n\n<p><a href=\"https://www.cnblogs.com/gezp/p/14967445.html\">https://www.cnblogs.com/gezp/p/14967445.html</a></p>\n<h3 id=\"启动\"><a href=\"#启动\" class=\"headerlink\" title=\"启动\"></a>启动</h3><div class=\"code-wrapper\"><pre><code class=\"hljs awk\"><span class=\"hljs-comment\"># 检查配置文件</span>\nsudo <span class=\"hljs-regexp\">/usr/</span>local<span class=\"hljs-regexp\">/nginx/</span>sbin/nginx  -t\n<span class=\"hljs-comment\">#启动</span>\nsudo <span class=\"hljs-regexp\">/usr/</span>local<span class=\"hljs-regexp\">/nginx/</span>sbin/nginx\n<span class=\"hljs-comment\"># 重启加载配置</span>\nsudo <span class=\"hljs-regexp\">/usr/</span>local<span class=\"hljs-regexp\">/nginx/</span>sbin/nginx -s reload</code></pre></div>\n\n\n\n<h1 id=\"配置文件\"><a href=\"#配置文件\" class=\"headerlink\" title=\"配置文件\"></a>配置文件</h1><div class=\"code-wrapper\"><pre><code class=\"hljs sh\">user  nginx;\nworker_processes  1;\n\nerror_log  /var/log/nginx/error.log warn;\npid        /var/run/nginx.pid;\n\n\nevents &#123;\n    worker_connections  1024;\n&#125;\n\n\nhttp &#123;\n\n\t<span class=\"hljs-comment\">#博客服务器，多个可以实现负载均衡</span>\n    upstream sob-blog&#123;\n\t   server 172.23.152.88:8082 weight=1;\n    &#125;\n\n\n \n    include       /etc/nginx/mime.types;\n    default_type  application/octet-stream;\n\n    log_format  main  <span class=\"hljs-string\">&#x27;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#x27;</span>\n                      <span class=\"hljs-string\">&#x27;$status $body_bytes_sent &quot;$http_referer&quot; &#x27;</span>\n                      <span class=\"hljs-string\">&#x27;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#x27;</span>;\n\n    access_log  /var/log/nginx/access.log  main;\n\n    sendfile        on;\n    <span class=\"hljs-comment\">#tcp_nopush     on;</span>\n\n    keepalive_timeout  65;\n\n    <span class=\"hljs-comment\">#gzip  on;</span>\n\n   \n\tserver &#123;\n\t\tlisten       80;\n\t\tserver_name  localhost;\n\n\t\t<span class=\"hljs-comment\">#charset koi8-r;</span>\n\t\t<span class=\"hljs-comment\">#access_log  /var/log/nginx/host.access.log  main;</span>\n\t\t\n\t\tindex index.html index.htm index.php;\n\t\t<span class=\"hljs-comment\">#用户相关的请求，转到sob-blog</span>\n\t\tlocation ^~/user/ &#123;\n            \tproxy_pass   http://sob-blog;\n\t\t\t<span class=\"hljs-comment\">#以下是一些反向代理的配置可删除</span>\n\t\t\tproxy_redirect             off; \n\t\t\t<span class=\"hljs-comment\">#后端的Web服务器可以通过X-Forwarded-For获取用户真实IP</span>\n\t\t\tproxy_set_header           Host <span class=\"hljs-variable\">$host</span>;\n\t\t\tproxy_set_header \t\t   Cookie <span class=\"hljs-variable\">$http_cookie</span>;\n\t\t\tproxy_set_header           X-Real-IP <span class=\"hljs-variable\">$remote_addr</span>; \n\t\t\tproxy_set_header           X-Forwarded-For <span class=\"hljs-variable\">$proxy_add_x_forwarded_for</span>;\n\t\t\tproxy_set_header           HTTP_X_FORWARDED_FOR <span class=\"hljs-variable\">$remote_addr</span>;\n\t\t\tproxy_set_header           X-Forwarded-Server <span class=\"hljs-variable\">$host</span>;\n        &#125;\n        \n\t\tlocation ^~/admin/ &#123;\n           \tproxy_pass   http://sob-blog;\n\t\t\t<span class=\"hljs-comment\">#以下是一些反向代理的配置可删除</span>\n\t\t\tproxy_redirect             off; \n\t\t\t<span class=\"hljs-comment\">#后端的Web服务器可以通过X-Forwarded-For获取用户真实IP</span>\n\t\t\tproxy_set_header           Host <span class=\"hljs-variable\">$host</span>;\n\t\t\tproxy_set_header \t\t   Cookie <span class=\"hljs-variable\">$http_cookie</span>;\n\t\t\tproxy_set_header           X-Real-IP <span class=\"hljs-variable\">$remote_addr</span>; \n\t\t\tproxy_set_header           X-Forwarded-For <span class=\"hljs-variable\">$proxy_add_x_forwarded_for</span>;\n\t\t\tproxy_set_header           HTTP_X_FORWARDED_FOR <span class=\"hljs-variable\">$remote_addr</span>;\n\t\t\tproxy_set_header           X-Forwarded-Server <span class=\"hljs-variable\">$host</span>;\n        &#125;\n        \n        location ^~/portal/ &#123;\n           \tproxy_pass   http://sob-blog;\n\t\t\t<span class=\"hljs-comment\">#以下是一些反向代理的配置可删除</span>\n\t\t\tproxy_redirect             off; \n\t\t\t<span class=\"hljs-comment\">#后端的Web服务器可以通过X-Forwarded-For获取用户真实IP</span>\n\t\t\tproxy_set_header           Host <span class=\"hljs-variable\">$host</span>;\n\t\t\tproxy_set_header \t\t   Cookie <span class=\"hljs-variable\">$http_cookie</span>;\n\t\t\tproxy_set_header           X-Real-IP <span class=\"hljs-variable\">$remote_addr</span>; \n\t\t\tproxy_set_header           X-Forwarded-For <span class=\"hljs-variable\">$proxy_add_x_forwarded_for</span>;\n\t\t\tproxy_set_header           HTTP_X_FORWARDED_FOR <span class=\"hljs-variable\">$remote_addr</span>;\n\t\t\tproxy_set_header           X-Forwarded-Server <span class=\"hljs-variable\">$host</span>;\n        &#125;\n\n\t\t<span class=\"hljs-comment\">#其他访问访问根目录wwwroot</span>\n\t\tlocation / &#123;\n\t\t    root   /usr/share/nginx/html;\n\t\t    index  index.html index.htm;\n\t\t    <span class=\"hljs-comment\">#此处解决刷新页面出现404的问题</span>\n\t\t    try_files <span class=\"hljs-variable\">$uri</span> <span class=\"hljs-variable\">$uri</span>/ /index.html;\n        &#125;\n\t\t\n\t&#125;\n&#125;\n</code></pre></div>\n\n\n\n<div class=\"code-wrapper\"><pre><code class=\"hljs shell\"><span class=\"hljs-meta prompt_\">#</span><span class=\"language-bash\">user  nobody;</span>\n<span class=\"hljs-meta prompt_\"> </span>\n<span class=\"hljs-meta prompt_\">#</span><span class=\"language-bash\">==工作进程数，一般设置为cpu核心数</span>\nworker_processes  1;\n<span class=\"hljs-meta prompt_\"> </span>\n<span class=\"hljs-meta prompt_\">#</span><span class=\"language-bash\">error_log  logs/error.log;</span>\n<span class=\"hljs-meta prompt_\">#</span><span class=\"language-bash\">error_log  logs/error.log  notice;</span>\n<span class=\"hljs-meta prompt_\">#</span><span class=\"language-bash\">error_log  logs/error.log  info;</span>\n<span class=\"hljs-meta prompt_\"> </span>\n<span class=\"hljs-meta prompt_\">#</span><span class=\"language-bash\">pid        logs/nginx.pid;</span>\n \n \nevents &#123;\n \n    #==最大连接数，一般设置为cpu*2048\n    worker_connections  1024;\n&#125;\n \n \nhttp &#123;\n\n    # 负载均衡配置\n    upstream web_servers &#123;\n    server localhost:8082;\n    &#125;\n\n    include       mime.types;\n    default_type  application/octet-stream;\n \n    #log_format  main  &#x27;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#x27;\n    #                  &#x27;$status $body_bytes_sent &quot;$http_referer&quot; &#x27;\n    #                  &#x27;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#x27;;\n \n    #access_log  logs/access.log  main;\n \n    sendfile        on;\n    #tcp_nopush     on;\n \n    #keepalive_timeout  0;\n    \n    #==客户端链接超时时间\n    keepalive_timeout  65;\n \n    #gzip  on;\n \n    #当配置多个server节点时，默认server names的缓存区大小就不够了，需要手动设置大一点\n    server_names_hash_bucket_size 512;\n \n    #server表示虚拟主机可以理解为一个站点，可以配置多个server节点搭建多个站点\n    #每一个请求进来确定使用哪个server由server_name确定\n    server &#123;\n        #站点监听端口\n        listen       80;\n        #站点访问域名\n        server_name  localhost;\n        \n        #编码格式，避免url参数乱码\n        charset utf-8;\n \n        #access_log  logs/host.access.log  main;\n \n        #location用来匹配同一域名下多个URI的访问规则\n        #比如动态资源如何跳转，静态资源如何跳转等\n        #location后面跟着的/代表匹配规则\n        location / &#123;\n            #站点根目录，可以是相对路径，也可以使绝对路径\n            root   html;\n            #默认主页\n            index  index.html index.htm;\n            \n            #转发后端站点地址，一般用于做软负载，轮询后端服务器\n            #proxy_pass http://ip:端口;\n \n            #拒绝请求，返回403，一般用于某些目录禁止访问\n            #deny all;\n            \n            #允许请求\n            #allow all;\n            \n            add_header &#x27;Access-Control-Allow-Origin&#x27; &#x27;*&#x27;;\n            add_header &#x27;Access-Control-Allow-Credentials&#x27; &#x27;true&#x27;;\n            add_header &#x27;Access-Control-Allow-Methods&#x27; &#x27;GET, POST, OPTIONS&#x27;;\n            add_header &#x27;Access-Control-Allow-Headers&#x27; &#x27;DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type&#x27;;\n            #重新定义或者添加发往后端服务器的请求头\n            #给请求头中添加客户请求主机名\n            proxy_set_header Host $host;\n            #给请求头中添加客户端IP\n            proxy_set_header X-Real-IP $remote_addr;\n            #将$remote_addr变量值添加在客户端“X-Forwarded-For”请求头的后面，并以逗号分隔。 如果客户端请求未携带“X-Forwarded-For”请求头，$proxy_add_x_forwarded_for变量值将与$remote_addr变量相同  \n            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n            #给请求头中添加客户端的Cookie\n            proxy_set_header Cookie $http_cookie;\n            #将使用代理服务器的主域名和端口号来替换。如果端口是80，可以不加。\n            proxy_redirect off;\n            \n            #浏览器对 Cookie 有很多限制，如果 Cookie 的 Domain 部分与当前页面的 Domain 不匹配就无法写入。\n            #所以如果请求 A 域名，服务器 proxy_pass 到 B 域名，然后 B 服务器输出 Domian=B 的 Cookie，\n            #前端的页面依然停留在 A 域名上，于是浏览器就无法将 Cookie 写入。\n            \n　　         #不仅是域名，浏览器对 Path 也有限制。我们经常会 proxy_pass 到目标服务器的某个 Path 下，\n            #不把这个 Path 暴露给浏览器。这时候如果目标服务器的 Cookie 写死了 Path 也会出现 Cookie 无法写入的问题。\n            \n            #设置“Set-Cookie”响应头中的domain属性的替换文本，其值可以为一个字符串、正则表达式的模式或一个引用的变量\n            #转发后端服务器如果需要Cookie则需要将cookie domain也进行转换，否则前端域名与后端域名不一致cookie就会无法存取\n　　　　　　  #配置规则：proxy_cookie_domain serverDomain(后端服务器域) nginxDomain(nginx服务器域)\n            proxy_cookie_domain localhost .testcaigou800.com;\n            \n            #取消当前配置级别的所有proxy_cookie_domain指令\n            #proxy_cookie_domain off;\n            #与后端服务器建立连接的超时时间。一般不可能大于75秒；\n            proxy_connect_timeout 30;\n        &#125;\n\n        #用户相关的请求，转到sob-blog\n\t\tlocation ^~/user/ &#123;\n            proxy_pass   http://web_servers;\n<span class=\"hljs-meta prompt_\">\t\t\t#</span><span class=\"language-bash\">以下是一些反向代理的配置可删除</span>\n\t\t\tproxy_redirect             off; \n<span class=\"hljs-meta prompt_\">\t\t\t#</span><span class=\"language-bash\">后端的Web服务器可以通过X-Forwarded-For获取用户真实IP</span>\n\t\t\tproxy_set_header           Host $host;\n\t\t\tproxy_set_header \t\t   Cookie $http_cookie;\n\t\t\tproxy_set_header           X-Real-IP $remote_addr; \n\t\t\tproxy_set_header           X-Forwarded-For $proxy_add_x_forwarded_for;\n\t\t\tproxy_set_header           HTTP_X_FORWARDED_FOR $remote_addr;\n\t\t\tproxy_set_header           X-Forwarded-Server $host;\n        &#125;\n        \n\t\tlocation ^~/admin/ &#123;\n           \t proxy_pass   http://web_servers;\n<span class=\"hljs-meta prompt_\">\t\t\t#</span><span class=\"language-bash\">以下是一些反向代理的配置可删除</span>\n\t\t\tproxy_redirect             off; \n<span class=\"hljs-meta prompt_\">\t\t\t#</span><span class=\"language-bash\">后端的Web服务器可以通过X-Forwarded-For获取用户真实IP</span>\n\t\t\tproxy_set_header           Host $host;\n\t\t\tproxy_set_header \t\t   Cookie $http_cookie;\n\t\t\tproxy_set_header           X-Real-IP $remote_addr; \n\t\t\tproxy_set_header           X-Forwarded-For $proxy_add_x_forwarded_for;\n\t\t\tproxy_set_header           HTTP_X_FORWARDED_FOR $remote_addr;\n\t\t\tproxy_set_header           X-Forwarded-Server $host;\n        &#125;\n        \n        location ^~/portal/ &#123;\n           \tproxy_pass   http://web_servers;\n<span class=\"hljs-meta prompt_\">\t\t\t#</span><span class=\"language-bash\">以下是一些反向代理的配置可删除</span>\n\t\t\tproxy_redirect             off; \n<span class=\"hljs-meta prompt_\">\t\t\t#</span><span class=\"language-bash\">后端的Web服务器可以通过X-Forwarded-For获取用户真实IP</span>\n\t\t\tproxy_set_header           Host $host;\n\t\t\tproxy_set_header \t\t   Cookie $http_cookie;\n\t\t\tproxy_set_header           X-Real-IP $remote_addr; \n\t\t\tproxy_set_header           X-Forwarded-For $proxy_add_x_forwarded_for;\n\t\t\tproxy_set_header           HTTP_X_FORWARDED_FOR $remote_addr;\n\t\t\tproxy_set_header           X-Forwarded-Server $host;\n        &#125;\n \n        #error_page  404              /404.html;\n \n        # redirect server error pages to the static page /50x.html\n        #\n        error_page   500 502 503 504  /50x.html;\n        location = /50x.html &#123;\n            root   html;\n        &#125;\n \n    &#125;</code></pre></div>\n<h1 id=\"linux服务器上jar包启动及关闭方式\"><a href=\"#linux服务器上jar包启动及关闭方式\" class=\"headerlink\" title=\"linux服务器上jar包启动及关闭方式\"></a>linux服务器上jar包启动及关闭方式</h1><h2 id=\"1、直接启动\"><a href=\"#1、直接启动\" class=\"headerlink\" title=\"1、直接启动\"></a>1、直接启动</h2><div class=\"code-wrapper\"><pre><code class=\"hljs shell\">java -jar chapter.jar</code></pre></div>\n<blockquote>\n<p>这种启动方式有个缺点：启动好了之后就不能动了，不能ctrl+c退出，也不能关闭终端，一旦退出或者关闭终端，程序就会关闭。</p>\n</blockquote>\n<h2 id=\"2-后台启动\"><a href=\"#2-后台启动\" class=\"headerlink\" title=\"2.后台启动\"></a>2.后台启动</h2><div class=\"code-wrapper\"><pre><code class=\"hljs shell\">java -jar chapter.jar &amp;</code></pre></div>\n<blockquote>\n<p>&amp;符号就代表后台启动，这种启动方式日志仍然输入到终端控制台中，但是ctrl+c不会关闭程序，退出终端，程序会关闭</p>\n</blockquote>\n<h2 id=\"3-nohup启动\"><a href=\"#3-nohup启动\" class=\"headerlink\" title=\"3.nohup启动\"></a>3.nohup启动</h2><div class=\"code-wrapper\"><pre><code class=\"hljs sh\"><span class=\"hljs-built_in\">nohup</span> java -jar chapter.jar &amp;</code></pre></div>\n<blockquote>\n<p>这种方式会生成一个nohup.out来记录日志，所以日志不会直接输出到终端，而且这种方式启动，ctrl+c或者关闭终端，程序都不会结束</p>\n</blockquote>\n<h2 id=\"4、指定日志文件\"><a href=\"#4、指定日志文件\" class=\"headerlink\" title=\"4、指定日志文件\"></a>4、指定日志文件</h2><p>nohup启动的日志输出文件nohup.out是自动生成的，但是我们更希望自己指定日志输出文件，用以下命令：</p>\n<div class=\"code-wrapper\"><pre><code class=\"hljs sh\"><span class=\"hljs-built_in\">nohup</span> java -jar chapter.jar &gt; logs.log &amp;</code></pre></div>\n<blockquote>\n<p>此命令会将日志重定向到当前的logs.log文件中，但是只会输出标准输出。这种方式启动，ctrl+c或者关闭终端，程序都不会结束</p>\n</blockquote>\n<h2 id=\"5、重定向错误输出（推荐）\"><a href=\"#5、重定向错误输出（推荐）\" class=\"headerlink\" title=\"5、重定向错误输出（推荐）\"></a>5、重定向错误输出（推荐）</h2><div class=\"code-wrapper\"><pre><code class=\"hljs sh\"><span class=\"hljs-built_in\">nohup</span> java -jar chapter.jar &gt; logs.log 2&gt;&amp;1 &amp;</code></pre></div>\n<blockquote>\n<p>这条命令不懂的可以去了解一下shell脚本，我简单解释一下：<br> Linux下1表示标准输出，2表示错误输出<br>“&gt;logs.log”表示标准输出重定向到logs.log中，默认是标准输出，省略1,不省略的话可以写成1&gt;logs.log;<br>“2&gt;&amp;1”表示错误输出也重定向到logs.log中，其中&amp;1表示前面的logs.log文件，不加&amp;，写成2&gt;1的话就表示把错误输出到1这个文件而不是前面标准输出的文件logs.log，所以&amp;要加上；<br>最后一个&amp;表示以后台方式启动程序。<br>这种方式启动，ctrl+c或者关闭终端，程序都不会结束。</p>\n</blockquote>\n<h2 id=\"6、以系统服务启动（更推荐）\"><a href=\"#6、以系统服务启动（更推荐）\" class=\"headerlink\" title=\"6、以系统服务启动（更推荐）\"></a>6、以系统服务启动（更推荐）</h2><p>​     以系统服务启动，实际上就是自己注册一个系统服务，然后系统服务的功能就是启动此jar包，所以我们就可以通过启动自定义系统服务控制jar包的启动了，这种方式有很多好处，最显而易见的就是系统服务的启动、停止、查看状态、开机自启动等命令能直接管理到jar包进程。</p>\n<ol>\n<li>创建自定义系统服务(只介绍CentOS7下的方式)<br>在/etc/systemd/system目录下创建一个xxx.service文件，xxx就是自定义的服务名称。<br>在文件中写入以下内容：</li>\n</ol>\n<div class=\"code-wrapper\"><pre><code class=\"hljs sh\">[Unit]\n\nDescription=chapter\n\nAfter=syslog.target\n\n[Service]\n\nExecStart=/usr/software/jdk1.8.0_221/bin/java -jar /usr/programme/serviceJarTest/chapter.jar\n\n[Install]\n\nWantedBy=multi-user.target\n</code></pre></div>\n\n<blockquote>\n<p>内容解释：<br>[Unit]说明<br>Description:服务的描述<br>After:设置在某个服务启动后启动</p>\n<p>[Service]服务参数配置<br>ExecStart服务运行执行的命令</p>\n<p>[Install]服务安装的相关设置，可设置为多用户</p>\n<p>根据需要，自己修改description和ExecStart的内容即可（ExecStart后面的java命令需要全路径，写java -jar 会启动不了）</p>\n</blockquote>\n<p>​    2. 启动系统服务</p>\n<div class=\"code-wrapper\"><pre><code class=\"hljs sh\">systemctl start 服务名</code></pre></div>\n\n<div class=\"code-wrapper\"><pre><code class=\"hljs nsis\"><span class=\"hljs-params\">system</span>ctl start xxx  <span class=\"hljs-comment\">#启动服务</span>\n<span class=\"hljs-params\">system</span>ctl status xxx  <span class=\"hljs-comment\">#查看服务状态</span>\n<span class=\"hljs-params\">system</span>ctl stop xxx  <span class=\"hljs-comment\">#停止服务</span>\n<span class=\"hljs-params\">system</span>ctl enable xxx  <span class=\"hljs-comment\">#设置服务开机自启动</span>\n<span class=\"hljs-params\">system</span>ctl disable xxx  <span class=\"hljs-comment\">#取消服务开机自启动</span>\n<span class=\"hljs-params\">system</span>ctl restart xxx  <span class=\"hljs-comment\">#重启服务</span></code></pre></div>\n\n<h2 id=\"7、关闭jar包程序\"><a href=\"#7、关闭jar包程序\" class=\"headerlink\" title=\"7、关闭jar包程序\"></a>7、关闭jar包程序</h2><ul>\n<li>如果是第一种方式启动，ctrl+c就可以直接关闭</li>\n</ul>\n<ul>\n<li>如果是第二种方式启动，关闭终端就可以关闭程序</li>\n</ul>\n<ul>\n<li>如果是第三四五种方式启动，可以用kill进程的方式结束进程：<br>查看java进程：</li>\n</ul>\n<div class=\"code-wrapper\"><pre><code class=\"hljs sh\">ps -ef | grep java\n<span class=\"hljs-comment\">#或者</span>\n ps -ef|grep Blog-0.0.1-SNAPSHOT.jar\n</code></pre></div>\n\n<div class=\"code-wrapper\"><pre><code class=\"hljs sh\">//关闭进程\n<span class=\"hljs-comment\">#24204为查询出来的进程号</span>\n<span class=\"hljs-built_in\">kill</span> -s 9 24204</code></pre></div>\n\n<h1 id=\"8-启动\"><a href=\"#8-启动\" class=\"headerlink\" title=\"8.启动\"></a>8.启动</h1><div class=\"code-wrapper\"><pre><code class=\"hljs sh\"><span class=\"hljs-built_in\">nohup</span> java -Djasypt.encryptor.password=578bee5369c35ad48751dd979ea4681e -Xms512m -Xmx512m -XX:MaxMetaspaceSize=128m  -XX:MaxNewSize=256m -jar  Blog-0.0.1-SNAPSHOT.jar  &gt; logs.log 2&gt;&amp;1 &amp;</code></pre></div>\n<p>知识点:<br>JDK8之后把-XX:PermSize 和-XX:MaxPermGen移除了，取而代之的是</p>\n<div class=\"code-wrapper\"><pre><code class=\"hljs sh\">-XX:MetaspaceSize=128m （元空间默认大小）\n-XX:MaxMetaspaceSize=128m （元空间最大大小）</code></pre></div>\n<p>参数介绍:<br>-XX:MetaspaceSize=128m （元空间默认大小）<br>-XX:MaxMetaspaceSize=128m （元空间最大大小）<br>-Xms1024m （堆最大大小）<br>-Xmx1024m （堆默认大小）<br>-Xmn256m （新生代大小）<br>-Xss256k （棧最大深度大小）<br>-XX:SurvivorRatio=8 （新生代分区比例 8:2）<br>-XX:+UseConcMarkSweepGC （指定使用的垃圾收集器，这里使用CMS收集器）<br>-XX:+PrintGCDetails （打印详细的GC日志）</p>\n","site":{"data":{}},"more":"<h1 id=\"一、安装Nginx\"><a href=\"#一、安装Nginx\" class=\"headerlink\" title=\"一、安装Nginx\"></a>一、安装Nginx</h1><h2 id=\"一-Docker安装nginx\"><a href=\"#一-Docker安装nginx\" class=\"headerlink\" title=\"(一)Docker安装nginx\"></a>(一)Docker安装nginx</h2><h3 id=\"1-查看镜像版本\"><a href=\"#1-查看镜像版本\" class=\"headerlink\" title=\"1.查看镜像版本\"></a>1.查看镜像版本</h3><pre><code class=\"hljs sh\">docker  search nginx</code></pre>\n\n<h3 id=\"2-拉取镜像\"><a href=\"#2-拉取镜像\" class=\"headerlink\" title=\"2.拉取镜像\"></a>2.拉取镜像</h3><pre><code class=\"hljs ebnf\"><span class=\"hljs-attribute\">docker pull nginx</span></code></pre>\n\n<h3 id=\"3-查看镜像\"><a href=\"#3-查看镜像\" class=\"headerlink\" title=\"3.查看镜像\"></a>3.查看镜像</h3><pre><code class=\"hljs 1c\">docker images <span class=\"hljs-string\">| grep nginx</span></code></pre>\n\n<h3 id=\"4-创建挂载目录\"><a href=\"#4-创建挂载目录\" class=\"headerlink\" title=\"4.创建挂载目录\"></a>4.创建挂载目录</h3><pre><code class=\"hljs stata\"><span class=\"hljs-keyword\">mkdir</span> nginx\n<span class=\"hljs-keyword\">cd</span> nginx\n<span class=\"hljs-keyword\">mkdir</span> <span class=\"hljs-keyword\">conf</span>\n<span class=\"hljs-keyword\">mkdir</span> wwwroot\n<span class=\"hljs-keyword\">mkdir</span> logs</code></pre>\n<pre><code class=\"hljs sh\"><span class=\"hljs-comment\">#创建挂载目录</span>\n<span class=\"hljs-built_in\">mkdir</span> -p ./nginx/&#123;conf,html,logs&#125;</code></pre>\n\n<h3 id=\"5-构建容器并启动\"><a href=\"#5-构建容器并启动\" class=\"headerlink\" title=\"5.构建容器并启动\"></a>5.构建容器并启动</h3><pre><code class=\"hljs awk\">docker run -d --name=nginx -p <span class=\"hljs-number\">80</span>:<span class=\"hljs-number\">80</span> \\\n-v <span class=\"hljs-regexp\">/local/</span>docker<span class=\"hljs-regexp\">/nginx/</span>wwwroot:<span class=\"hljs-regexp\">/usr/</span>share<span class=\"hljs-regexp\">/nginx/</span>html \\\n-v <span class=\"hljs-regexp\">/local/</span>docker<span class=\"hljs-regexp\">/nginx/</span>conf<span class=\"hljs-regexp\">/nginx.conf:/</span>etc<span class=\"hljs-regexp\">/nginx/</span>nginx.conf \\\n-v <span class=\"hljs-regexp\">/local/</span>docker<span class=\"hljs-regexp\">/nginx/</span>logs:<span class=\"hljs-regexp\">/var/</span>log/nginx \\\nnginx</code></pre>\n\n<h2 id=\"（二）\"><a href=\"#（二）\" class=\"headerlink\" title=\"（二）\"></a>（二）</h2><h3 id=\"1-安装依赖包\"><a href=\"#1-安装依赖包\" class=\"headerlink\" title=\"1.安装依赖包\"></a>1.安装依赖包</h3><pre><code class=\"hljs nsis\">sudo yum -y install gcc <span class=\"hljs-literal\">zlib</span> <span class=\"hljs-literal\">zlib</span>-devel pcre-devel openssl openssl-devel</code></pre>\n\n<h3 id=\"2-下载并解压安装包\"><a href=\"#2-下载并解压安装包\" class=\"headerlink\" title=\"2.下载并解压安装包\"></a>2.下载并解压安装包</h3><pre><code class=\"hljs awk\">cd <span class=\"hljs-regexp\">/usr/</span>local<span class=\"hljs-regexp\">//</span>下载tar包\nsudo wget  http:<span class=\"hljs-regexp\">//</span>nginx.org<span class=\"hljs-regexp\">/download/</span>nginx-<span class=\"hljs-number\">1.21</span>.<span class=\"hljs-number\">4</span>.tar.gz\nsudo tar -xvf nginx-<span class=\"hljs-number\">1.21</span>.<span class=\"hljs-number\">4</span>.tar.gz</code></pre>\n\n<p><a href=\"https://www.cnblogs.com/gezp/p/14967445.html\">https://www.cnblogs.com/gezp/p/14967445.html</a></p>\n<h3 id=\"启动\"><a href=\"#启动\" class=\"headerlink\" title=\"启动\"></a>启动</h3><pre><code class=\"hljs awk\"><span class=\"hljs-comment\"># 检查配置文件</span>\nsudo <span class=\"hljs-regexp\">/usr/</span>local<span class=\"hljs-regexp\">/nginx/</span>sbin/nginx  -t\n<span class=\"hljs-comment\">#启动</span>\nsudo <span class=\"hljs-regexp\">/usr/</span>local<span class=\"hljs-regexp\">/nginx/</span>sbin/nginx\n<span class=\"hljs-comment\"># 重启加载配置</span>\nsudo <span class=\"hljs-regexp\">/usr/</span>local<span class=\"hljs-regexp\">/nginx/</span>sbin/nginx -s reload</code></pre>\n\n\n\n<h1 id=\"配置文件\"><a href=\"#配置文件\" class=\"headerlink\" title=\"配置文件\"></a>配置文件</h1><pre><code class=\"hljs sh\">user  nginx;\nworker_processes  1;\n\nerror_log  /var/log/nginx/error.log warn;\npid        /var/run/nginx.pid;\n\n\nevents &#123;\n    worker_connections  1024;\n&#125;\n\n\nhttp &#123;\n\n\t<span class=\"hljs-comment\">#博客服务器，多个可以实现负载均衡</span>\n    upstream sob-blog&#123;\n\t   server 172.23.152.88:8082 weight=1;\n    &#125;\n\n\n \n    include       /etc/nginx/mime.types;\n    default_type  application/octet-stream;\n\n    log_format  main  <span class=\"hljs-string\">&#x27;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#x27;</span>\n                      <span class=\"hljs-string\">&#x27;$status $body_bytes_sent &quot;$http_referer&quot; &#x27;</span>\n                      <span class=\"hljs-string\">&#x27;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#x27;</span>;\n\n    access_log  /var/log/nginx/access.log  main;\n\n    sendfile        on;\n    <span class=\"hljs-comment\">#tcp_nopush     on;</span>\n\n    keepalive_timeout  65;\n\n    <span class=\"hljs-comment\">#gzip  on;</span>\n\n   \n\tserver &#123;\n\t\tlisten       80;\n\t\tserver_name  localhost;\n\n\t\t<span class=\"hljs-comment\">#charset koi8-r;</span>\n\t\t<span class=\"hljs-comment\">#access_log  /var/log/nginx/host.access.log  main;</span>\n\t\t\n\t\tindex index.html index.htm index.php;\n\t\t<span class=\"hljs-comment\">#用户相关的请求，转到sob-blog</span>\n\t\tlocation ^~/user/ &#123;\n            \tproxy_pass   http://sob-blog;\n\t\t\t<span class=\"hljs-comment\">#以下是一些反向代理的配置可删除</span>\n\t\t\tproxy_redirect             off; \n\t\t\t<span class=\"hljs-comment\">#后端的Web服务器可以通过X-Forwarded-For获取用户真实IP</span>\n\t\t\tproxy_set_header           Host <span class=\"hljs-variable\">$host</span>;\n\t\t\tproxy_set_header \t\t   Cookie <span class=\"hljs-variable\">$http_cookie</span>;\n\t\t\tproxy_set_header           X-Real-IP <span class=\"hljs-variable\">$remote_addr</span>; \n\t\t\tproxy_set_header           X-Forwarded-For <span class=\"hljs-variable\">$proxy_add_x_forwarded_for</span>;\n\t\t\tproxy_set_header           HTTP_X_FORWARDED_FOR <span class=\"hljs-variable\">$remote_addr</span>;\n\t\t\tproxy_set_header           X-Forwarded-Server <span class=\"hljs-variable\">$host</span>;\n        &#125;\n        \n\t\tlocation ^~/admin/ &#123;\n           \tproxy_pass   http://sob-blog;\n\t\t\t<span class=\"hljs-comment\">#以下是一些反向代理的配置可删除</span>\n\t\t\tproxy_redirect             off; \n\t\t\t<span class=\"hljs-comment\">#后端的Web服务器可以通过X-Forwarded-For获取用户真实IP</span>\n\t\t\tproxy_set_header           Host <span class=\"hljs-variable\">$host</span>;\n\t\t\tproxy_set_header \t\t   Cookie <span class=\"hljs-variable\">$http_cookie</span>;\n\t\t\tproxy_set_header           X-Real-IP <span class=\"hljs-variable\">$remote_addr</span>; \n\t\t\tproxy_set_header           X-Forwarded-For <span class=\"hljs-variable\">$proxy_add_x_forwarded_for</span>;\n\t\t\tproxy_set_header           HTTP_X_FORWARDED_FOR <span class=\"hljs-variable\">$remote_addr</span>;\n\t\t\tproxy_set_header           X-Forwarded-Server <span class=\"hljs-variable\">$host</span>;\n        &#125;\n        \n        location ^~/portal/ &#123;\n           \tproxy_pass   http://sob-blog;\n\t\t\t<span class=\"hljs-comment\">#以下是一些反向代理的配置可删除</span>\n\t\t\tproxy_redirect             off; \n\t\t\t<span class=\"hljs-comment\">#后端的Web服务器可以通过X-Forwarded-For获取用户真实IP</span>\n\t\t\tproxy_set_header           Host <span class=\"hljs-variable\">$host</span>;\n\t\t\tproxy_set_header \t\t   Cookie <span class=\"hljs-variable\">$http_cookie</span>;\n\t\t\tproxy_set_header           X-Real-IP <span class=\"hljs-variable\">$remote_addr</span>; \n\t\t\tproxy_set_header           X-Forwarded-For <span class=\"hljs-variable\">$proxy_add_x_forwarded_for</span>;\n\t\t\tproxy_set_header           HTTP_X_FORWARDED_FOR <span class=\"hljs-variable\">$remote_addr</span>;\n\t\t\tproxy_set_header           X-Forwarded-Server <span class=\"hljs-variable\">$host</span>;\n        &#125;\n\n\t\t<span class=\"hljs-comment\">#其他访问访问根目录wwwroot</span>\n\t\tlocation / &#123;\n\t\t    root   /usr/share/nginx/html;\n\t\t    index  index.html index.htm;\n\t\t    <span class=\"hljs-comment\">#此处解决刷新页面出现404的问题</span>\n\t\t    try_files <span class=\"hljs-variable\">$uri</span> <span class=\"hljs-variable\">$uri</span>/ /index.html;\n        &#125;\n\t\t\n\t&#125;\n&#125;\n</code></pre>\n\n\n\n<pre><code class=\"hljs shell\"><span class=\"hljs-meta prompt_\">#</span><span class=\"language-bash\">user  nobody;</span>\n<span class=\"hljs-meta prompt_\"> </span>\n<span class=\"hljs-meta prompt_\">#</span><span class=\"language-bash\">==工作进程数，一般设置为cpu核心数</span>\nworker_processes  1;\n<span class=\"hljs-meta prompt_\"> </span>\n<span class=\"hljs-meta prompt_\">#</span><span class=\"language-bash\">error_log  logs/error.log;</span>\n<span class=\"hljs-meta prompt_\">#</span><span class=\"language-bash\">error_log  logs/error.log  notice;</span>\n<span class=\"hljs-meta prompt_\">#</span><span class=\"language-bash\">error_log  logs/error.log  info;</span>\n<span class=\"hljs-meta prompt_\"> </span>\n<span class=\"hljs-meta prompt_\">#</span><span class=\"language-bash\">pid        logs/nginx.pid;</span>\n \n \nevents &#123;\n \n    #==最大连接数，一般设置为cpu*2048\n    worker_connections  1024;\n&#125;\n \n \nhttp &#123;\n\n    # 负载均衡配置\n    upstream web_servers &#123;\n    server localhost:8082;\n    &#125;\n\n    include       mime.types;\n    default_type  application/octet-stream;\n \n    #log_format  main  &#x27;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#x27;\n    #                  &#x27;$status $body_bytes_sent &quot;$http_referer&quot; &#x27;\n    #                  &#x27;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#x27;;\n \n    #access_log  logs/access.log  main;\n \n    sendfile        on;\n    #tcp_nopush     on;\n \n    #keepalive_timeout  0;\n    \n    #==客户端链接超时时间\n    keepalive_timeout  65;\n \n    #gzip  on;\n \n    #当配置多个server节点时，默认server names的缓存区大小就不够了，需要手动设置大一点\n    server_names_hash_bucket_size 512;\n \n    #server表示虚拟主机可以理解为一个站点，可以配置多个server节点搭建多个站点\n    #每一个请求进来确定使用哪个server由server_name确定\n    server &#123;\n        #站点监听端口\n        listen       80;\n        #站点访问域名\n        server_name  localhost;\n        \n        #编码格式，避免url参数乱码\n        charset utf-8;\n \n        #access_log  logs/host.access.log  main;\n \n        #location用来匹配同一域名下多个URI的访问规则\n        #比如动态资源如何跳转，静态资源如何跳转等\n        #location后面跟着的/代表匹配规则\n        location / &#123;\n            #站点根目录，可以是相对路径，也可以使绝对路径\n            root   html;\n            #默认主页\n            index  index.html index.htm;\n            \n            #转发后端站点地址，一般用于做软负载，轮询后端服务器\n            #proxy_pass http://ip:端口;\n \n            #拒绝请求，返回403，一般用于某些目录禁止访问\n            #deny all;\n            \n            #允许请求\n            #allow all;\n            \n            add_header &#x27;Access-Control-Allow-Origin&#x27; &#x27;*&#x27;;\n            add_header &#x27;Access-Control-Allow-Credentials&#x27; &#x27;true&#x27;;\n            add_header &#x27;Access-Control-Allow-Methods&#x27; &#x27;GET, POST, OPTIONS&#x27;;\n            add_header &#x27;Access-Control-Allow-Headers&#x27; &#x27;DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type&#x27;;\n            #重新定义或者添加发往后端服务器的请求头\n            #给请求头中添加客户请求主机名\n            proxy_set_header Host $host;\n            #给请求头中添加客户端IP\n            proxy_set_header X-Real-IP $remote_addr;\n            #将$remote_addr变量值添加在客户端“X-Forwarded-For”请求头的后面，并以逗号分隔。 如果客户端请求未携带“X-Forwarded-For”请求头，$proxy_add_x_forwarded_for变量值将与$remote_addr变量相同  \n            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n            #给请求头中添加客户端的Cookie\n            proxy_set_header Cookie $http_cookie;\n            #将使用代理服务器的主域名和端口号来替换。如果端口是80，可以不加。\n            proxy_redirect off;\n            \n            #浏览器对 Cookie 有很多限制，如果 Cookie 的 Domain 部分与当前页面的 Domain 不匹配就无法写入。\n            #所以如果请求 A 域名，服务器 proxy_pass 到 B 域名，然后 B 服务器输出 Domian=B 的 Cookie，\n            #前端的页面依然停留在 A 域名上，于是浏览器就无法将 Cookie 写入。\n            \n　　         #不仅是域名，浏览器对 Path 也有限制。我们经常会 proxy_pass 到目标服务器的某个 Path 下，\n            #不把这个 Path 暴露给浏览器。这时候如果目标服务器的 Cookie 写死了 Path 也会出现 Cookie 无法写入的问题。\n            \n            #设置“Set-Cookie”响应头中的domain属性的替换文本，其值可以为一个字符串、正则表达式的模式或一个引用的变量\n            #转发后端服务器如果需要Cookie则需要将cookie domain也进行转换，否则前端域名与后端域名不一致cookie就会无法存取\n　　　　　　  #配置规则：proxy_cookie_domain serverDomain(后端服务器域) nginxDomain(nginx服务器域)\n            proxy_cookie_domain localhost .testcaigou800.com;\n            \n            #取消当前配置级别的所有proxy_cookie_domain指令\n            #proxy_cookie_domain off;\n            #与后端服务器建立连接的超时时间。一般不可能大于75秒；\n            proxy_connect_timeout 30;\n        &#125;\n\n        #用户相关的请求，转到sob-blog\n\t\tlocation ^~/user/ &#123;\n            proxy_pass   http://web_servers;\n<span class=\"hljs-meta prompt_\">\t\t\t#</span><span class=\"language-bash\">以下是一些反向代理的配置可删除</span>\n\t\t\tproxy_redirect             off; \n<span class=\"hljs-meta prompt_\">\t\t\t#</span><span class=\"language-bash\">后端的Web服务器可以通过X-Forwarded-For获取用户真实IP</span>\n\t\t\tproxy_set_header           Host $host;\n\t\t\tproxy_set_header \t\t   Cookie $http_cookie;\n\t\t\tproxy_set_header           X-Real-IP $remote_addr; \n\t\t\tproxy_set_header           X-Forwarded-For $proxy_add_x_forwarded_for;\n\t\t\tproxy_set_header           HTTP_X_FORWARDED_FOR $remote_addr;\n\t\t\tproxy_set_header           X-Forwarded-Server $host;\n        &#125;\n        \n\t\tlocation ^~/admin/ &#123;\n           \t proxy_pass   http://web_servers;\n<span class=\"hljs-meta prompt_\">\t\t\t#</span><span class=\"language-bash\">以下是一些反向代理的配置可删除</span>\n\t\t\tproxy_redirect             off; \n<span class=\"hljs-meta prompt_\">\t\t\t#</span><span class=\"language-bash\">后端的Web服务器可以通过X-Forwarded-For获取用户真实IP</span>\n\t\t\tproxy_set_header           Host $host;\n\t\t\tproxy_set_header \t\t   Cookie $http_cookie;\n\t\t\tproxy_set_header           X-Real-IP $remote_addr; \n\t\t\tproxy_set_header           X-Forwarded-For $proxy_add_x_forwarded_for;\n\t\t\tproxy_set_header           HTTP_X_FORWARDED_FOR $remote_addr;\n\t\t\tproxy_set_header           X-Forwarded-Server $host;\n        &#125;\n        \n        location ^~/portal/ &#123;\n           \tproxy_pass   http://web_servers;\n<span class=\"hljs-meta prompt_\">\t\t\t#</span><span class=\"language-bash\">以下是一些反向代理的配置可删除</span>\n\t\t\tproxy_redirect             off; \n<span class=\"hljs-meta prompt_\">\t\t\t#</span><span class=\"language-bash\">后端的Web服务器可以通过X-Forwarded-For获取用户真实IP</span>\n\t\t\tproxy_set_header           Host $host;\n\t\t\tproxy_set_header \t\t   Cookie $http_cookie;\n\t\t\tproxy_set_header           X-Real-IP $remote_addr; \n\t\t\tproxy_set_header           X-Forwarded-For $proxy_add_x_forwarded_for;\n\t\t\tproxy_set_header           HTTP_X_FORWARDED_FOR $remote_addr;\n\t\t\tproxy_set_header           X-Forwarded-Server $host;\n        &#125;\n \n        #error_page  404              /404.html;\n \n        # redirect server error pages to the static page /50x.html\n        #\n        error_page   500 502 503 504  /50x.html;\n        location = /50x.html &#123;\n            root   html;\n        &#125;\n \n    &#125;</code></pre>\n<h1 id=\"linux服务器上jar包启动及关闭方式\"><a href=\"#linux服务器上jar包启动及关闭方式\" class=\"headerlink\" title=\"linux服务器上jar包启动及关闭方式\"></a>linux服务器上jar包启动及关闭方式</h1><h2 id=\"1、直接启动\"><a href=\"#1、直接启动\" class=\"headerlink\" title=\"1、直接启动\"></a>1、直接启动</h2><pre><code class=\"hljs shell\">java -jar chapter.jar</code></pre>\n<blockquote>\n<p>这种启动方式有个缺点：启动好了之后就不能动了，不能ctrl+c退出，也不能关闭终端，一旦退出或者关闭终端，程序就会关闭。</p>\n</blockquote>\n<h2 id=\"2-后台启动\"><a href=\"#2-后台启动\" class=\"headerlink\" title=\"2.后台启动\"></a>2.后台启动</h2><pre><code class=\"hljs shell\">java -jar chapter.jar &amp;</code></pre>\n<blockquote>\n<p>&amp;符号就代表后台启动，这种启动方式日志仍然输入到终端控制台中，但是ctrl+c不会关闭程序，退出终端，程序会关闭</p>\n</blockquote>\n<h2 id=\"3-nohup启动\"><a href=\"#3-nohup启动\" class=\"headerlink\" title=\"3.nohup启动\"></a>3.nohup启动</h2><pre><code class=\"hljs sh\"><span class=\"hljs-built_in\">nohup</span> java -jar chapter.jar &amp;</code></pre>\n<blockquote>\n<p>这种方式会生成一个nohup.out来记录日志，所以日志不会直接输出到终端，而且这种方式启动，ctrl+c或者关闭终端，程序都不会结束</p>\n</blockquote>\n<h2 id=\"4、指定日志文件\"><a href=\"#4、指定日志文件\" class=\"headerlink\" title=\"4、指定日志文件\"></a>4、指定日志文件</h2><p>nohup启动的日志输出文件nohup.out是自动生成的，但是我们更希望自己指定日志输出文件，用以下命令：</p>\n<pre><code class=\"hljs sh\"><span class=\"hljs-built_in\">nohup</span> java -jar chapter.jar &gt; logs.log &amp;</code></pre>\n<blockquote>\n<p>此命令会将日志重定向到当前的logs.log文件中，但是只会输出标准输出。这种方式启动，ctrl+c或者关闭终端，程序都不会结束</p>\n</blockquote>\n<h2 id=\"5、重定向错误输出（推荐）\"><a href=\"#5、重定向错误输出（推荐）\" class=\"headerlink\" title=\"5、重定向错误输出（推荐）\"></a>5、重定向错误输出（推荐）</h2><pre><code class=\"hljs sh\"><span class=\"hljs-built_in\">nohup</span> java -jar chapter.jar &gt; logs.log 2&gt;&amp;1 &amp;</code></pre>\n<blockquote>\n<p>这条命令不懂的可以去了解一下shell脚本，我简单解释一下：<br> Linux下1表示标准输出，2表示错误输出<br>“&gt;logs.log”表示标准输出重定向到logs.log中，默认是标准输出，省略1,不省略的话可以写成1&gt;logs.log;<br>“2&gt;&amp;1”表示错误输出也重定向到logs.log中，其中&amp;1表示前面的logs.log文件，不加&amp;，写成2&gt;1的话就表示把错误输出到1这个文件而不是前面标准输出的文件logs.log，所以&amp;要加上；<br>最后一个&amp;表示以后台方式启动程序。<br>这种方式启动，ctrl+c或者关闭终端，程序都不会结束。</p>\n</blockquote>\n<h2 id=\"6、以系统服务启动（更推荐）\"><a href=\"#6、以系统服务启动（更推荐）\" class=\"headerlink\" title=\"6、以系统服务启动（更推荐）\"></a>6、以系统服务启动（更推荐）</h2><p>​     以系统服务启动，实际上就是自己注册一个系统服务，然后系统服务的功能就是启动此jar包，所以我们就可以通过启动自定义系统服务控制jar包的启动了，这种方式有很多好处，最显而易见的就是系统服务的启动、停止、查看状态、开机自启动等命令能直接管理到jar包进程。</p>\n<ol>\n<li>创建自定义系统服务(只介绍CentOS7下的方式)<br>在/etc/systemd/system目录下创建一个xxx.service文件，xxx就是自定义的服务名称。<br>在文件中写入以下内容：</li>\n</ol>\n<pre><code class=\"hljs sh\">[Unit]\n\nDescription=chapter\n\nAfter=syslog.target\n\n[Service]\n\nExecStart=/usr/software/jdk1.8.0_221/bin/java -jar /usr/programme/serviceJarTest/chapter.jar\n\n[Install]\n\nWantedBy=multi-user.target\n</code></pre>\n\n<blockquote>\n<p>内容解释：<br>[Unit]说明<br>Description:服务的描述<br>After:设置在某个服务启动后启动</p>\n<p>[Service]服务参数配置<br>ExecStart服务运行执行的命令</p>\n<p>[Install]服务安装的相关设置，可设置为多用户</p>\n<p>根据需要，自己修改description和ExecStart的内容即可（ExecStart后面的java命令需要全路径，写java -jar 会启动不了）</p>\n</blockquote>\n<p>​    2. 启动系统服务</p>\n<pre><code class=\"hljs sh\">systemctl start 服务名</code></pre>\n\n<pre><code class=\"hljs nsis\"><span class=\"hljs-params\">system</span>ctl start xxx  <span class=\"hljs-comment\">#启动服务</span>\n<span class=\"hljs-params\">system</span>ctl status xxx  <span class=\"hljs-comment\">#查看服务状态</span>\n<span class=\"hljs-params\">system</span>ctl stop xxx  <span class=\"hljs-comment\">#停止服务</span>\n<span class=\"hljs-params\">system</span>ctl enable xxx  <span class=\"hljs-comment\">#设置服务开机自启动</span>\n<span class=\"hljs-params\">system</span>ctl disable xxx  <span class=\"hljs-comment\">#取消服务开机自启动</span>\n<span class=\"hljs-params\">system</span>ctl restart xxx  <span class=\"hljs-comment\">#重启服务</span></code></pre>\n\n<h2 id=\"7、关闭jar包程序\"><a href=\"#7、关闭jar包程序\" class=\"headerlink\" title=\"7、关闭jar包程序\"></a>7、关闭jar包程序</h2><ul>\n<li>如果是第一种方式启动，ctrl+c就可以直接关闭</li>\n</ul>\n<ul>\n<li>如果是第二种方式启动，关闭终端就可以关闭程序</li>\n</ul>\n<ul>\n<li>如果是第三四五种方式启动，可以用kill进程的方式结束进程：<br>查看java进程：</li>\n</ul>\n<pre><code class=\"hljs sh\">ps -ef | grep java\n<span class=\"hljs-comment\">#或者</span>\n ps -ef|grep Blog-0.0.1-SNAPSHOT.jar\n</code></pre>\n\n<pre><code class=\"hljs sh\">//关闭进程\n<span class=\"hljs-comment\">#24204为查询出来的进程号</span>\n<span class=\"hljs-built_in\">kill</span> -s 9 24204</code></pre>\n\n<h1 id=\"8-启动\"><a href=\"#8-启动\" class=\"headerlink\" title=\"8.启动\"></a>8.启动</h1><pre><code class=\"hljs sh\"><span class=\"hljs-built_in\">nohup</span> java -Djasypt.encryptor.password=578bee5369c35ad48751dd979ea4681e -Xms512m -Xmx512m -XX:MaxMetaspaceSize=128m  -XX:MaxNewSize=256m -jar  Blog-0.0.1-SNAPSHOT.jar  &gt; logs.log 2&gt;&amp;1 &amp;</code></pre>\n<p>知识点:<br>JDK8之后把-XX:PermSize 和-XX:MaxPermGen移除了，取而代之的是</p>\n<pre><code class=\"hljs sh\">-XX:MetaspaceSize=128m （元空间默认大小）\n-XX:MaxMetaspaceSize=128m （元空间最大大小）</code></pre>\n<p>参数介绍:<br>-XX:MetaspaceSize=128m （元空间默认大小）<br>-XX:MaxMetaspaceSize=128m （元空间最大大小）<br>-Xms1024m （堆最大大小）<br>-Xmx1024m （堆默认大小）<br>-Xmn256m （新生代大小）<br>-Xss256k （棧最大深度大小）<br>-XX:SurvivorRatio=8 （新生代分区比例 8:2）<br>-XX:+UseConcMarkSweepGC （指定使用的垃圾收集器，这里使用CMS收集器）<br>-XX:+PrintGCDetails （打印详细的GC日志）</p>\n"},{"title":"即使孤身一人，也要热情拥抱生活","excerpt":"在路上，不为旅行，不因某人，只为在未知的途中遇见未知的自己","index_img":"https://img0.baidu.com/it/u=1749632235,4239587418&fm=253&fmt=auto&app=120&f=JPEG?w=900&h=600","abbrlink":"cef82103","date":"2023-02-03T13:44:18.000Z","_content":"\n并不想和别人争辩什么，也不想去抱怨什么，也不想和任何人去吵架，只是想过一个甜甜的生活，因为争辩得不到什么抱怨也没有拥抱吵架只会让我心烦。\n\n{% gi 3 %}\n![](https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202302062139877.jpg)\n![](https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202302062141352.jpg)\n![](https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202302062141012.jpg)\n{% endgi %}","source":"_posts/孤身一人也要生活.md","raw":"---\ntitle: 即使孤身一人，也要热情拥抱生活\nexcerpt: 在路上，不为旅行，不因某人，只为在未知的途中遇见未知的自己\ntags:\n  - 杂谈\ncategories:\n  - 杂谈\nindex_img: https://img0.baidu.com/it/u=1749632235,4239587418&fm=253&fmt=auto&app=120&f=JPEG?w=900&h=600\nabbrlink: cef82103\ndate: 2023-02-03 21:44:18\n---\n\n并不想和别人争辩什么，也不想去抱怨什么，也不想和任何人去吵架，只是想过一个甜甜的生活，因为争辩得不到什么抱怨也没有拥抱吵架只会让我心烦。\n\n{% gi 3 %}\n![](https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202302062139877.jpg)\n![](https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202302062141352.jpg)\n![](https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202302062141012.jpg)\n{% endgi %}","slug":"孤身一人也要生活","published":1,"updated":"2023-02-06T13:45:48.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clhrpaiaj000yeq6q413gbps8","content":"<p>并不想和别人争辩什么，也不想去抱怨什么，也不想和任何人去吵架，只是想过一个甜甜的生活，因为争辩得不到什么抱怨也没有拥抱吵架只会让我心烦。</p>\n<div class=\"group-image-container\"><div class=\"group-image-row\"><div class=\"group-image-wrap\"><img src=\"https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202302062139877.jpg\"></div><div class=\"group-image-wrap\"><img src=\"https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202302062141352.jpg\"></div></div><div class=\"group-image-row\"><div class=\"group-image-wrap\"><img src=\"https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202302062141012.jpg\"></div></div></div>","site":{"data":{}},"more":"<p>并不想和别人争辩什么，也不想去抱怨什么，也不想和任何人去吵架，只是想过一个甜甜的生活，因为争辩得不到什么抱怨也没有拥抱吵架只会让我心烦。</p>\n<div class=\"group-image-container\"><div class=\"group-image-row\"><div class=\"group-image-wrap\"><img src=\"https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202302062139877.jpg\"></div><div class=\"group-image-wrap\"><img src=\"https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202302062141352.jpg\"></div></div><div class=\"group-image-row\"><div class=\"group-image-wrap\"><img src=\"https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202302062141012.jpg\"></div></div></div>"},{"title":"浅谈《围城》","excerpt":"理想与现实在爱情婚姻中往往呈现出极大的反差，这就是残酷的生活本相","index_img":"https://img0.baidu.com/it/u=1670223170,1148726303&fm=253&fmt=auto&app=138&f=JPEG?w=640&h=283","abbrlink":"fde7e8f6","date":"2023-01-11T04:05:23.000Z","_content":"\n\n\n**“没有梦，没有感觉，人生最原始的睡，同时也是死的样品。”**\n\n\n\n有的人死了他还活着，有的人活着他已经死了，方鸿渐30岁以后的生活，就符合后一种。\n\n\n\n事业上，方鸿渐自命不凡却一事无成，每份工作，都是在糊里糊涂中就遭了嫌弃。\n\n\n\n\n\n爱情上，他茫然被动，不喜欢苏文纨，却没勇气拒绝，倾心唐晓芙，却不会争取。\n\n\n\n\n\n朋友提醒他，孙柔嘉心机深，对他煞费苦心，他却觉得“承她瞧得起，应当珍惜她”。\n\n\n\n\n\n最后，方鸿渐落入孙柔嘉精心编织的网中，顺水推舟结了婚，种下了他们往后余生，日复一日争吵的因。\n\n\n\n\n\n有一句话说：“生命绚烂的人，都是受到某些力量所驱使。”\n\n\n\n\n\n**而有些人，睡着和醒着，都是在无意义地游荡人间。**\n\n\n\n\n\n不知所因，不知所终，任由人世洪流裹挟着前行，最终遭受到了生活的重击。\n\n\n\n\n\n没有梦，没有想法的一生，就无异于死的样品。\n\n\n\n\n\n**无论前方道路是平坦宽阔，还是荆棘坎坷，不浑浑噩噩，才能掌控人生。**\n\n\n\n\n\n**“一个人，到了20岁还不狂，这个人是没出息的；到了30岁还狂，也是没出息的。”**\n\n\n\n\n\n20 岁的方鸿渐，把少年人的丰满理想和仗剑走天涯的劲头，体现得淋漓尽致。\n\n\n\n\n\n但这样的性格，保持到了30岁，就成了一种悲哀。\n\n\n\n\n\n明明能力不足，却狂妄地不愿承认，只一味找理由开脱。\n\n\n\n\n\n心高气傲、自命不凡地做一些对抗现实的傻事，偏执地想证明自己的与众不同。\n\n\n\n\n\n最后让自己的处境，一岁不如一岁。\n\n\n\n\n\n**一个人20岁，如果不狂，就体现不出来年轻人的志气；但到了30岁还狂，往往就要吃很多生活的苦。**\n\n\n\n\n\n成长的青穗仰头向天，成熟的水稻弯腰向下。\n\n\n\n\n\n人都是要随着岁月，慢慢成长的。\n\n\n\n\n\n年轻的时候，意气风发是因为对未来充满希望，狂，让年轻人敢于去拼搏探索。\n\n\n\n\n\n但随着年纪的增长，我们终要学会在阅历中，认识到自己的浅薄和不足。\n\n\n\n\n\n知道世界之大，接受自己也有平凡的一面，踏实做事，才能在人生的处处围城中好好生活。\n\n\n\n\n\n**“时间对友谊的磨蚀，好比水流过石子，反而把它洗濯得光洁了。”**\n\n\n\n\n\n方鸿渐刚认识赵辛楣时，两人关系其实一般。\n\n\n\n\n\n但当方鸿渐和前岳父闹翻，找不到工作时，赵辛楣却为他介绍了三闾大学教师一职。\n\n\n\n\n\n方鸿渐被三闾大学解聘，后来的工作也是赵辛楣推荐而来。\n\n\n\n\n\n有人说：**“这世上所有好的感情，都必然经得起时间的考验。”**\n\n\n\n\n\n有的朋友，会因为你的荣耀得失，来了又去。\n\n\n\n\n\n也有的朋友，能经得住岁月的沉淀，不管晴天雨天，都会在你身边。\n\n\n\n\n\n**路遥知马力，日久见人心。**\n\n\n\n\n\n时间是一把好筛子，友情中，那些眼睛看不明，耳朵听不到的本质东西，都会在时间面前显现出来。\n\n\n\n\n\n假的，蒙尘不见；真的，光洁亮眼。\n\n\n\n\n\n朋友好不好，时间会证明。\n\n\n\n\n\n**“老实说，不管你跟谁结婚，结婚以后，你总会发现你娶的不是原来的人，换了另外一个。”**\n\n\n\n\n\n结婚是什么？\n\n\n\n\n\n**结婚是两个陌生的成年人，生活到了一起。**\n\n\n\n\n\n不管结婚时，是怀着怎样甜蜜的心情说出的“我愿意”。\n\n\n\n\n\n婚后的生活，其实都会和想象中的有差距。\n\n\n\n\n\n因为结婚是一瞬间，婚姻却是漫长的余生。\n\n\n\n\n\n方鸿渐和孙柔嘉结婚前，孙柔嘉认为方鸿渐洒脱不羁，方鸿渐觉得她温柔体贴。\n\n\n\n\n\n但这种感觉，在婚后很快就变得面目全非。\n\n\n\n\n\n在一段关系开始的时候，激情会激发双方强烈的吸引力，彼此都会释放出自己的优点。\n\n\n\n\n\n但随着日子中各种问题出现，大家都不可避免地会释放出自身的缺点。\n\n\n\n\n\n曾经你侬我侬的两个人，经过婚姻中的柴米油盐、岁月里的鸡毛蒜皮，各自在对方的眼中，都不是原来的那个人了。\n\n\n\n\n\n**不会有十全十美的恋人，也没有完美无瑕疵的婚姻。**\n\n\n\n\n\n所谓对的婚姻，不过是和已经选择的眼前人，彼此理解、包容，在吵吵闹闹中相扶到老。\n\n\n\n\n\n**“我们对采摘不到的葡萄，不但想象它酸，也很可能想象它是分外地甜。”**\n\n\n\n\n\n王小波曾说：\n\n\n\n\n\n\n\n“人生在世，会遇到一些好事，还会遇到一些坏事，好事承担得起，坏事也承受得住，就这样坦坦荡荡做个寻常人也不坏。”\n\n\n\n\n\n未来的事情就像薛定谔的猫，没有真正发生的时候，你永远也不会知道结局。\n\n\n\n\n\n不如保持一颗平常心，聚焦当下能做的事。\n\n\n\n\n\n人这一生，成功失败，都会经历，高低起伏，都是生命的常态。\n\n\n\n\n\n混装的巧克力，随意拿起一颗，没人知道会是什么味道。\n\n\n\n\n\n正在做的事情，不到最后，谁也不能预知成功失败。\n\n\n\n\n\n**人生是一场修行，它可能不会如你想的那么好，但也不会如你想的那么糟。**\n\n\n\n\n\n古人说，山重水复疑无路，柳暗花明又一村。\n\n\n\n\n\n人生路上，可能阳光明媚，也可能大雨滂沱。\n\n\n\n\n\n未来充满了不确定性，保持一颗平常心，不过分期待，也不过分悲观。\n\n\n\n\n\n坦然面对得失，好的事情，才会不期而遇。\n\n\n\n\n\n\n\n**“流言这东西，比流感蔓延的速度更快，比流星所蕴含的能量更巨大，比流氓更具有恶意，比流产更能让人心力憔悴。”**\n\n\n\n\n\n佛语说：“在世间十种恶业中，口恶是最大的恶。”\n\n\n\n\n\n流言是写在水上的字，注定不持久，但是裹挟着恶意，传得飞快，给当事人带来难以想象的伤害。\n\n\n\n\n\n那些无中生有的事，大多都是从流言而来。\n\n\n\n\n\n世上不会有完全相同的人生，生活各有千秋，事情各有各的缘由。\n\n\n\n\n\n不要因为不了解，就轻易地想当然。\n\n\n\n\n\n正所谓：流言难尽，乱世如刀。\n\n\n\n\n\n**有时候，看似柔软的舌头，却可以毁了一个人的一生。**\n\n\n\n\n\n语言是这个世界上最锋利的兵器。\n\n\n\n\n\n管好自己的嘴巴，做一个能止住流言的智者，是人生很重要的一件事。\n\n\n\n\n\n有人说，《围城》是读一遍有一遍感觉的书，因为经历得越多，理解得越多。\n\n\n\n\n\n故事也许是虚构的，但反映的是人间事实。\n\n\n\n\n\n**人生的真相，全都藏在文字背后。**\n\n\n\n\n\n读别人的故事，让我们对自己的人生，有了更多的思考。\n\n\n\n\n\n愿看过这篇文章的你，都能在人事复杂中，一边披荆斩棘，一边打破内心的围城。","source":"_posts/围城.md","raw":"---\ntitle: 浅谈《围城》\nexcerpt: 理想与现实在爱情婚姻中往往呈现出极大的反差，这就是残酷的生活本相\nindex_img: >-\n  https://img0.baidu.com/it/u=1670223170,1148726303&fm=253&fmt=auto&app=138&f=JPEG?w=640&h=283\nabbrlink: fde7e8f6\ndate: 2023-01-11 12:05:23\n---\n\n\n\n**“没有梦，没有感觉，人生最原始的睡，同时也是死的样品。”**\n\n\n\n有的人死了他还活着，有的人活着他已经死了，方鸿渐30岁以后的生活，就符合后一种。\n\n\n\n事业上，方鸿渐自命不凡却一事无成，每份工作，都是在糊里糊涂中就遭了嫌弃。\n\n\n\n\n\n爱情上，他茫然被动，不喜欢苏文纨，却没勇气拒绝，倾心唐晓芙，却不会争取。\n\n\n\n\n\n朋友提醒他，孙柔嘉心机深，对他煞费苦心，他却觉得“承她瞧得起，应当珍惜她”。\n\n\n\n\n\n最后，方鸿渐落入孙柔嘉精心编织的网中，顺水推舟结了婚，种下了他们往后余生，日复一日争吵的因。\n\n\n\n\n\n有一句话说：“生命绚烂的人，都是受到某些力量所驱使。”\n\n\n\n\n\n**而有些人，睡着和醒着，都是在无意义地游荡人间。**\n\n\n\n\n\n不知所因，不知所终，任由人世洪流裹挟着前行，最终遭受到了生活的重击。\n\n\n\n\n\n没有梦，没有想法的一生，就无异于死的样品。\n\n\n\n\n\n**无论前方道路是平坦宽阔，还是荆棘坎坷，不浑浑噩噩，才能掌控人生。**\n\n\n\n\n\n**“一个人，到了20岁还不狂，这个人是没出息的；到了30岁还狂，也是没出息的。”**\n\n\n\n\n\n20 岁的方鸿渐，把少年人的丰满理想和仗剑走天涯的劲头，体现得淋漓尽致。\n\n\n\n\n\n但这样的性格，保持到了30岁，就成了一种悲哀。\n\n\n\n\n\n明明能力不足，却狂妄地不愿承认，只一味找理由开脱。\n\n\n\n\n\n心高气傲、自命不凡地做一些对抗现实的傻事，偏执地想证明自己的与众不同。\n\n\n\n\n\n最后让自己的处境，一岁不如一岁。\n\n\n\n\n\n**一个人20岁，如果不狂，就体现不出来年轻人的志气；但到了30岁还狂，往往就要吃很多生活的苦。**\n\n\n\n\n\n成长的青穗仰头向天，成熟的水稻弯腰向下。\n\n\n\n\n\n人都是要随着岁月，慢慢成长的。\n\n\n\n\n\n年轻的时候，意气风发是因为对未来充满希望，狂，让年轻人敢于去拼搏探索。\n\n\n\n\n\n但随着年纪的增长，我们终要学会在阅历中，认识到自己的浅薄和不足。\n\n\n\n\n\n知道世界之大，接受自己也有平凡的一面，踏实做事，才能在人生的处处围城中好好生活。\n\n\n\n\n\n**“时间对友谊的磨蚀，好比水流过石子，反而把它洗濯得光洁了。”**\n\n\n\n\n\n方鸿渐刚认识赵辛楣时，两人关系其实一般。\n\n\n\n\n\n但当方鸿渐和前岳父闹翻，找不到工作时，赵辛楣却为他介绍了三闾大学教师一职。\n\n\n\n\n\n方鸿渐被三闾大学解聘，后来的工作也是赵辛楣推荐而来。\n\n\n\n\n\n有人说：**“这世上所有好的感情，都必然经得起时间的考验。”**\n\n\n\n\n\n有的朋友，会因为你的荣耀得失，来了又去。\n\n\n\n\n\n也有的朋友，能经得住岁月的沉淀，不管晴天雨天，都会在你身边。\n\n\n\n\n\n**路遥知马力，日久见人心。**\n\n\n\n\n\n时间是一把好筛子，友情中，那些眼睛看不明，耳朵听不到的本质东西，都会在时间面前显现出来。\n\n\n\n\n\n假的，蒙尘不见；真的，光洁亮眼。\n\n\n\n\n\n朋友好不好，时间会证明。\n\n\n\n\n\n**“老实说，不管你跟谁结婚，结婚以后，你总会发现你娶的不是原来的人，换了另外一个。”**\n\n\n\n\n\n结婚是什么？\n\n\n\n\n\n**结婚是两个陌生的成年人，生活到了一起。**\n\n\n\n\n\n不管结婚时，是怀着怎样甜蜜的心情说出的“我愿意”。\n\n\n\n\n\n婚后的生活，其实都会和想象中的有差距。\n\n\n\n\n\n因为结婚是一瞬间，婚姻却是漫长的余生。\n\n\n\n\n\n方鸿渐和孙柔嘉结婚前，孙柔嘉认为方鸿渐洒脱不羁，方鸿渐觉得她温柔体贴。\n\n\n\n\n\n但这种感觉，在婚后很快就变得面目全非。\n\n\n\n\n\n在一段关系开始的时候，激情会激发双方强烈的吸引力，彼此都会释放出自己的优点。\n\n\n\n\n\n但随着日子中各种问题出现，大家都不可避免地会释放出自身的缺点。\n\n\n\n\n\n曾经你侬我侬的两个人，经过婚姻中的柴米油盐、岁月里的鸡毛蒜皮，各自在对方的眼中，都不是原来的那个人了。\n\n\n\n\n\n**不会有十全十美的恋人，也没有完美无瑕疵的婚姻。**\n\n\n\n\n\n所谓对的婚姻，不过是和已经选择的眼前人，彼此理解、包容，在吵吵闹闹中相扶到老。\n\n\n\n\n\n**“我们对采摘不到的葡萄，不但想象它酸，也很可能想象它是分外地甜。”**\n\n\n\n\n\n王小波曾说：\n\n\n\n\n\n\n\n“人生在世，会遇到一些好事，还会遇到一些坏事，好事承担得起，坏事也承受得住，就这样坦坦荡荡做个寻常人也不坏。”\n\n\n\n\n\n未来的事情就像薛定谔的猫，没有真正发生的时候，你永远也不会知道结局。\n\n\n\n\n\n不如保持一颗平常心，聚焦当下能做的事。\n\n\n\n\n\n人这一生，成功失败，都会经历，高低起伏，都是生命的常态。\n\n\n\n\n\n混装的巧克力，随意拿起一颗，没人知道会是什么味道。\n\n\n\n\n\n正在做的事情，不到最后，谁也不能预知成功失败。\n\n\n\n\n\n**人生是一场修行，它可能不会如你想的那么好，但也不会如你想的那么糟。**\n\n\n\n\n\n古人说，山重水复疑无路，柳暗花明又一村。\n\n\n\n\n\n人生路上，可能阳光明媚，也可能大雨滂沱。\n\n\n\n\n\n未来充满了不确定性，保持一颗平常心，不过分期待，也不过分悲观。\n\n\n\n\n\n坦然面对得失，好的事情，才会不期而遇。\n\n\n\n\n\n\n\n**“流言这东西，比流感蔓延的速度更快，比流星所蕴含的能量更巨大，比流氓更具有恶意，比流产更能让人心力憔悴。”**\n\n\n\n\n\n佛语说：“在世间十种恶业中，口恶是最大的恶。”\n\n\n\n\n\n流言是写在水上的字，注定不持久，但是裹挟着恶意，传得飞快，给当事人带来难以想象的伤害。\n\n\n\n\n\n那些无中生有的事，大多都是从流言而来。\n\n\n\n\n\n世上不会有完全相同的人生，生活各有千秋，事情各有各的缘由。\n\n\n\n\n\n不要因为不了解，就轻易地想当然。\n\n\n\n\n\n正所谓：流言难尽，乱世如刀。\n\n\n\n\n\n**有时候，看似柔软的舌头，却可以毁了一个人的一生。**\n\n\n\n\n\n语言是这个世界上最锋利的兵器。\n\n\n\n\n\n管好自己的嘴巴，做一个能止住流言的智者，是人生很重要的一件事。\n\n\n\n\n\n有人说，《围城》是读一遍有一遍感觉的书，因为经历得越多，理解得越多。\n\n\n\n\n\n故事也许是虚构的，但反映的是人间事实。\n\n\n\n\n\n**人生的真相，全都藏在文字背后。**\n\n\n\n\n\n读别人的故事，让我们对自己的人生，有了更多的思考。\n\n\n\n\n\n愿看过这篇文章的你，都能在人事复杂中，一边披荆斩棘，一边打破内心的围城。","slug":"围城","published":1,"updated":"2023-05-15T05:01:23.667Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clhrpaiak0012eq6q7edb8i8t","content":"<p><strong>“没有梦，没有感觉，人生最原始的睡，同时也是死的样品。”</strong></p>\n<p>有的人死了他还活着，有的人活着他已经死了，方鸿渐30岁以后的生活，就符合后一种。</p>\n<p>事业上，方鸿渐自命不凡却一事无成，每份工作，都是在糊里糊涂中就遭了嫌弃。</p>\n<p>爱情上，他茫然被动，不喜欢苏文纨，却没勇气拒绝，倾心唐晓芙，却不会争取。</p>\n<p>朋友提醒他，孙柔嘉心机深，对他煞费苦心，他却觉得“承她瞧得起，应当珍惜她”。</p>\n<p>最后，方鸿渐落入孙柔嘉精心编织的网中，顺水推舟结了婚，种下了他们往后余生，日复一日争吵的因。</p>\n<p>有一句话说：“生命绚烂的人，都是受到某些力量所驱使。”</p>\n<p><strong>而有些人，睡着和醒着，都是在无意义地游荡人间。</strong></p>\n<p>不知所因，不知所终，任由人世洪流裹挟着前行，最终遭受到了生活的重击。</p>\n<p>没有梦，没有想法的一生，就无异于死的样品。</p>\n<p><strong>无论前方道路是平坦宽阔，还是荆棘坎坷，不浑浑噩噩，才能掌控人生。</strong></p>\n<p><strong>“一个人，到了20岁还不狂，这个人是没出息的；到了30岁还狂，也是没出息的。”</strong></p>\n<p>20 岁的方鸿渐，把少年人的丰满理想和仗剑走天涯的劲头，体现得淋漓尽致。</p>\n<p>但这样的性格，保持到了30岁，就成了一种悲哀。</p>\n<p>明明能力不足，却狂妄地不愿承认，只一味找理由开脱。</p>\n<p>心高气傲、自命不凡地做一些对抗现实的傻事，偏执地想证明自己的与众不同。</p>\n<p>最后让自己的处境，一岁不如一岁。</p>\n<p><strong>一个人20岁，如果不狂，就体现不出来年轻人的志气；但到了30岁还狂，往往就要吃很多生活的苦。</strong></p>\n<p>成长的青穗仰头向天，成熟的水稻弯腰向下。</p>\n<p>人都是要随着岁月，慢慢成长的。</p>\n<p>年轻的时候，意气风发是因为对未来充满希望，狂，让年轻人敢于去拼搏探索。</p>\n<p>但随着年纪的增长，我们终要学会在阅历中，认识到自己的浅薄和不足。</p>\n<p>知道世界之大，接受自己也有平凡的一面，踏实做事，才能在人生的处处围城中好好生活。</p>\n<p><strong>“时间对友谊的磨蚀，好比水流过石子，反而把它洗濯得光洁了。”</strong></p>\n<p>方鸿渐刚认识赵辛楣时，两人关系其实一般。</p>\n<p>但当方鸿渐和前岳父闹翻，找不到工作时，赵辛楣却为他介绍了三闾大学教师一职。</p>\n<p>方鸿渐被三闾大学解聘，后来的工作也是赵辛楣推荐而来。</p>\n<p>有人说：<strong>“这世上所有好的感情，都必然经得起时间的考验。”</strong></p>\n<p>有的朋友，会因为你的荣耀得失，来了又去。</p>\n<p>也有的朋友，能经得住岁月的沉淀，不管晴天雨天，都会在你身边。</p>\n<p><strong>路遥知马力，日久见人心。</strong></p>\n<p>时间是一把好筛子，友情中，那些眼睛看不明，耳朵听不到的本质东西，都会在时间面前显现出来。</p>\n<p>假的，蒙尘不见；真的，光洁亮眼。</p>\n<p>朋友好不好，时间会证明。</p>\n<p><strong>“老实说，不管你跟谁结婚，结婚以后，你总会发现你娶的不是原来的人，换了另外一个。”</strong></p>\n<p>结婚是什么？</p>\n<p><strong>结婚是两个陌生的成年人，生活到了一起。</strong></p>\n<p>不管结婚时，是怀着怎样甜蜜的心情说出的“我愿意”。</p>\n<p>婚后的生活，其实都会和想象中的有差距。</p>\n<p>因为结婚是一瞬间，婚姻却是漫长的余生。</p>\n<p>方鸿渐和孙柔嘉结婚前，孙柔嘉认为方鸿渐洒脱不羁，方鸿渐觉得她温柔体贴。</p>\n<p>但这种感觉，在婚后很快就变得面目全非。</p>\n<p>在一段关系开始的时候，激情会激发双方强烈的吸引力，彼此都会释放出自己的优点。</p>\n<p>但随着日子中各种问题出现，大家都不可避免地会释放出自身的缺点。</p>\n<p>曾经你侬我侬的两个人，经过婚姻中的柴米油盐、岁月里的鸡毛蒜皮，各自在对方的眼中，都不是原来的那个人了。</p>\n<p><strong>不会有十全十美的恋人，也没有完美无瑕疵的婚姻。</strong></p>\n<p>所谓对的婚姻，不过是和已经选择的眼前人，彼此理解、包容，在吵吵闹闹中相扶到老。</p>\n<p><strong>“我们对采摘不到的葡萄，不但想象它酸，也很可能想象它是分外地甜。”</strong></p>\n<p>王小波曾说：</p>\n<p>“人生在世，会遇到一些好事，还会遇到一些坏事，好事承担得起，坏事也承受得住，就这样坦坦荡荡做个寻常人也不坏。”</p>\n<p>未来的事情就像薛定谔的猫，没有真正发生的时候，你永远也不会知道结局。</p>\n<p>不如保持一颗平常心，聚焦当下能做的事。</p>\n<p>人这一生，成功失败，都会经历，高低起伏，都是生命的常态。</p>\n<p>混装的巧克力，随意拿起一颗，没人知道会是什么味道。</p>\n<p>正在做的事情，不到最后，谁也不能预知成功失败。</p>\n<p><strong>人生是一场修行，它可能不会如你想的那么好，但也不会如你想的那么糟。</strong></p>\n<p>古人说，山重水复疑无路，柳暗花明又一村。</p>\n<p>人生路上，可能阳光明媚，也可能大雨滂沱。</p>\n<p>未来充满了不确定性，保持一颗平常心，不过分期待，也不过分悲观。</p>\n<p>坦然面对得失，好的事情，才会不期而遇。</p>\n<p><strong>“流言这东西，比流感蔓延的速度更快，比流星所蕴含的能量更巨大，比流氓更具有恶意，比流产更能让人心力憔悴。”</strong></p>\n<p>佛语说：“在世间十种恶业中，口恶是最大的恶。”</p>\n<p>流言是写在水上的字，注定不持久，但是裹挟着恶意，传得飞快，给当事人带来难以想象的伤害。</p>\n<p>那些无中生有的事，大多都是从流言而来。</p>\n<p>世上不会有完全相同的人生，生活各有千秋，事情各有各的缘由。</p>\n<p>不要因为不了解，就轻易地想当然。</p>\n<p>正所谓：流言难尽，乱世如刀。</p>\n<p><strong>有时候，看似柔软的舌头，却可以毁了一个人的一生。</strong></p>\n<p>语言是这个世界上最锋利的兵器。</p>\n<p>管好自己的嘴巴，做一个能止住流言的智者，是人生很重要的一件事。</p>\n<p>有人说，《围城》是读一遍有一遍感觉的书，因为经历得越多，理解得越多。</p>\n<p>故事也许是虚构的，但反映的是人间事实。</p>\n<p><strong>人生的真相，全都藏在文字背后。</strong></p>\n<p>读别人的故事，让我们对自己的人生，有了更多的思考。</p>\n<p>愿看过这篇文章的你，都能在人事复杂中，一边披荆斩棘，一边打破内心的围城。</p>\n","site":{"data":{}},"more":"<p><strong>“没有梦，没有感觉，人生最原始的睡，同时也是死的样品。”</strong></p>\n<p>有的人死了他还活着，有的人活着他已经死了，方鸿渐30岁以后的生活，就符合后一种。</p>\n<p>事业上，方鸿渐自命不凡却一事无成，每份工作，都是在糊里糊涂中就遭了嫌弃。</p>\n<p>爱情上，他茫然被动，不喜欢苏文纨，却没勇气拒绝，倾心唐晓芙，却不会争取。</p>\n<p>朋友提醒他，孙柔嘉心机深，对他煞费苦心，他却觉得“承她瞧得起，应当珍惜她”。</p>\n<p>最后，方鸿渐落入孙柔嘉精心编织的网中，顺水推舟结了婚，种下了他们往后余生，日复一日争吵的因。</p>\n<p>有一句话说：“生命绚烂的人，都是受到某些力量所驱使。”</p>\n<p><strong>而有些人，睡着和醒着，都是在无意义地游荡人间。</strong></p>\n<p>不知所因，不知所终，任由人世洪流裹挟着前行，最终遭受到了生活的重击。</p>\n<p>没有梦，没有想法的一生，就无异于死的样品。</p>\n<p><strong>无论前方道路是平坦宽阔，还是荆棘坎坷，不浑浑噩噩，才能掌控人生。</strong></p>\n<p><strong>“一个人，到了20岁还不狂，这个人是没出息的；到了30岁还狂，也是没出息的。”</strong></p>\n<p>20 岁的方鸿渐，把少年人的丰满理想和仗剑走天涯的劲头，体现得淋漓尽致。</p>\n<p>但这样的性格，保持到了30岁，就成了一种悲哀。</p>\n<p>明明能力不足，却狂妄地不愿承认，只一味找理由开脱。</p>\n<p>心高气傲、自命不凡地做一些对抗现实的傻事，偏执地想证明自己的与众不同。</p>\n<p>最后让自己的处境，一岁不如一岁。</p>\n<p><strong>一个人20岁，如果不狂，就体现不出来年轻人的志气；但到了30岁还狂，往往就要吃很多生活的苦。</strong></p>\n<p>成长的青穗仰头向天，成熟的水稻弯腰向下。</p>\n<p>人都是要随着岁月，慢慢成长的。</p>\n<p>年轻的时候，意气风发是因为对未来充满希望，狂，让年轻人敢于去拼搏探索。</p>\n<p>但随着年纪的增长，我们终要学会在阅历中，认识到自己的浅薄和不足。</p>\n<p>知道世界之大，接受自己也有平凡的一面，踏实做事，才能在人生的处处围城中好好生活。</p>\n<p><strong>“时间对友谊的磨蚀，好比水流过石子，反而把它洗濯得光洁了。”</strong></p>\n<p>方鸿渐刚认识赵辛楣时，两人关系其实一般。</p>\n<p>但当方鸿渐和前岳父闹翻，找不到工作时，赵辛楣却为他介绍了三闾大学教师一职。</p>\n<p>方鸿渐被三闾大学解聘，后来的工作也是赵辛楣推荐而来。</p>\n<p>有人说：<strong>“这世上所有好的感情，都必然经得起时间的考验。”</strong></p>\n<p>有的朋友，会因为你的荣耀得失，来了又去。</p>\n<p>也有的朋友，能经得住岁月的沉淀，不管晴天雨天，都会在你身边。</p>\n<p><strong>路遥知马力，日久见人心。</strong></p>\n<p>时间是一把好筛子，友情中，那些眼睛看不明，耳朵听不到的本质东西，都会在时间面前显现出来。</p>\n<p>假的，蒙尘不见；真的，光洁亮眼。</p>\n<p>朋友好不好，时间会证明。</p>\n<p><strong>“老实说，不管你跟谁结婚，结婚以后，你总会发现你娶的不是原来的人，换了另外一个。”</strong></p>\n<p>结婚是什么？</p>\n<p><strong>结婚是两个陌生的成年人，生活到了一起。</strong></p>\n<p>不管结婚时，是怀着怎样甜蜜的心情说出的“我愿意”。</p>\n<p>婚后的生活，其实都会和想象中的有差距。</p>\n<p>因为结婚是一瞬间，婚姻却是漫长的余生。</p>\n<p>方鸿渐和孙柔嘉结婚前，孙柔嘉认为方鸿渐洒脱不羁，方鸿渐觉得她温柔体贴。</p>\n<p>但这种感觉，在婚后很快就变得面目全非。</p>\n<p>在一段关系开始的时候，激情会激发双方强烈的吸引力，彼此都会释放出自己的优点。</p>\n<p>但随着日子中各种问题出现，大家都不可避免地会释放出自身的缺点。</p>\n<p>曾经你侬我侬的两个人，经过婚姻中的柴米油盐、岁月里的鸡毛蒜皮，各自在对方的眼中，都不是原来的那个人了。</p>\n<p><strong>不会有十全十美的恋人，也没有完美无瑕疵的婚姻。</strong></p>\n<p>所谓对的婚姻，不过是和已经选择的眼前人，彼此理解、包容，在吵吵闹闹中相扶到老。</p>\n<p><strong>“我们对采摘不到的葡萄，不但想象它酸，也很可能想象它是分外地甜。”</strong></p>\n<p>王小波曾说：</p>\n<p>“人生在世，会遇到一些好事，还会遇到一些坏事，好事承担得起，坏事也承受得住，就这样坦坦荡荡做个寻常人也不坏。”</p>\n<p>未来的事情就像薛定谔的猫，没有真正发生的时候，你永远也不会知道结局。</p>\n<p>不如保持一颗平常心，聚焦当下能做的事。</p>\n<p>人这一生，成功失败，都会经历，高低起伏，都是生命的常态。</p>\n<p>混装的巧克力，随意拿起一颗，没人知道会是什么味道。</p>\n<p>正在做的事情，不到最后，谁也不能预知成功失败。</p>\n<p><strong>人生是一场修行，它可能不会如你想的那么好，但也不会如你想的那么糟。</strong></p>\n<p>古人说，山重水复疑无路，柳暗花明又一村。</p>\n<p>人生路上，可能阳光明媚，也可能大雨滂沱。</p>\n<p>未来充满了不确定性，保持一颗平常心，不过分期待，也不过分悲观。</p>\n<p>坦然面对得失，好的事情，才会不期而遇。</p>\n<p><strong>“流言这东西，比流感蔓延的速度更快，比流星所蕴含的能量更巨大，比流氓更具有恶意，比流产更能让人心力憔悴。”</strong></p>\n<p>佛语说：“在世间十种恶业中，口恶是最大的恶。”</p>\n<p>流言是写在水上的字，注定不持久，但是裹挟着恶意，传得飞快，给当事人带来难以想象的伤害。</p>\n<p>那些无中生有的事，大多都是从流言而来。</p>\n<p>世上不会有完全相同的人生，生活各有千秋，事情各有各的缘由。</p>\n<p>不要因为不了解，就轻易地想当然。</p>\n<p>正所谓：流言难尽，乱世如刀。</p>\n<p><strong>有时候，看似柔软的舌头，却可以毁了一个人的一生。</strong></p>\n<p>语言是这个世界上最锋利的兵器。</p>\n<p>管好自己的嘴巴，做一个能止住流言的智者，是人生很重要的一件事。</p>\n<p>有人说，《围城》是读一遍有一遍感觉的书，因为经历得越多，理解得越多。</p>\n<p>故事也许是虚构的，但反映的是人间事实。</p>\n<p><strong>人生的真相，全都藏在文字背后。</strong></p>\n<p>读别人的故事，让我们对自己的人生，有了更多的思考。</p>\n<p>愿看过这篇文章的你，都能在人事复杂中，一边披荆斩棘，一边打破内心的围城。</p>\n"},{"title":"小猫的语言","author":"king","excerpt":"当小猫咪从键盘上面跑过，他会写什么话给我呢","abbrlink":"50a4010a","date":"2023-05-15T05:01:23.668Z","index_img":"https://img2.baidu.com/it/u=3115483779,528073502&fm=253&fmt=auto&app=120&f=JPEG?w=1366&h=768","_content":"\n2023年1月15日 22:59\n该不会\n\n2023年1月31日 22:45\n\nA\"?&^","source":"_posts/小猫的语言.md","raw":"---\ntitle: 小猫的语言\nauthor: king\nexcerpt: 当小猫咪从键盘上面跑过，他会写什么话给我呢\nabbrlink: 50a4010a\ndate: 2023-01-15 22:58:40\"\nindex_img: https://img2.baidu.com/it/u=3115483779,528073502&fm=253&fmt=auto&app=120&f=JPEG?w=1366&h=768\n---\n\n2023年1月15日 22:59\n该不会\n\n2023年1月31日 22:45\n\nA\"?&^","slug":"小猫的语言","published":1,"updated":"2023-05-15T05:01:23.668Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clhrpaiam0014eq6q6d72dpj8","content":"<p>2023年1月15日 22:59<br>该不会</p>\n<p>2023年1月31日 22:45</p>\n<p>A”?&amp;^</p>\n","site":{"data":{}},"more":"<p>2023年1月15日 22:59<br>该不会</p>\n<p>2023年1月31日 22:45</p>\n<p>A”?&amp;^</p>\n"},{"title":"小王子","author":"king","intro":"《小王子》里的四个人生真谛，能读懂的人，多半有故事","index_img":"https://img2.baidu.com/it/u=3036138966,371898811&fm=253&fmt=auto&app=138&f=JPEG?w=810&h=500","abbrlink":"4540cbee","date":"2023-01-12T15:04:21.000Z","_content":"1、当人情绪低落时候，喜欢看日落。\n\nWhen people are in a low mood, they like to watch sunset.\n\n2、星星真美，因为有一朵看不见的花。\n\nThe stars are beautiful because there is a flower that can't be seen.\n\n3、一直朝前走，也走不了多远。\n\nI can't go far until I go forward.\n\n4、当他抬头仰望繁星时，便会心满意足。\n\nWhen he looks up at the stars, he will be satisfied.\n\n5、即使在有人的地方，我们依然孤单。\n\nEven in places where there are people, we are still alone.\n\n6、你们很美，但你们是空虚的。\n\nYou are beautiful, but you are empty.\n\n7、可怕的不是长大，是遗忘。\n\nIt's not growing up, it's forgetting.\n\n8、你知道，悲伤的人会爱上日落的。\n\nYou know, sad people will fall in love with sunset.\n\n9、夜充满了威胁，邪风一吹，立刻腐烂。\n\nNight is full of threats, evil wind blows, immediately decay.\n\n10、每个人，都有一片属于自己的星空。\n\nEveryone, has a star of their own.\n\n11、我该从行动，而非言语来判别是非。\n\nI should judge right and wrong from action, not words.\n\n12、对旅人而言，星星是向导。\n\nFor travelers, stars are guides.\n\n13、能快乐旅行的，一定是轻装旅行的人。\n\nThose who can travel happily must be light-weight travelers.\n\n14、有一朵玫瑰，我想，她把我驯服了。\n\nThere is a rose, I think, she tamed me.\n\n15、人难过的时候，总是爱看日落。\n\nWhen people are sad, they always love to watch sunset.\n\n16、我不需要你，你也同样用不着我。\n\nI don't need you, and you don't need me either.\n\n17、一切都会好起来的，你知道的。\n\nEverything will be fine, you know.\n\n18、当一个人伤心，他会喜欢日落。\n\nWhen a person is sad, he will like sunset.\n\n19、时间越临近，我就越来越快乐。\n\nThe closer time comes, the happier I am.\n\n20、大人们都是这个样子，以衣冠取人。\n\nThe big people are all like this, taking people with their clothes.\n\n21、在沙漠上，真有点孤独。\n\nIt's a little lonely in the desert.\n\n22、真正重要的东西，肉眼是看不到的。\n\nWhat really matters is invisible to the naked eye.\n\n23、最重要的东西，是肉眼看不见的。\n\nThe most important thing is invisible to the naked eye.\n\n24、忘记朋友是可悲的，不是谁都有朋友。\n\nIt's sad to forget friends, not everyone has friends.\n\n25、路一旦打通，不会没有人走。\n\nOnce the road is opened, no one will go.\n\n26、对我那位商人来说，它们就是财富。\n\nFor my businessman, they are wealth.\n\n27、当我们开始追寻，我们就已经在失去。\n\nWhen we start to pursue, we are already losing.\n\n28、最大的问题不是长大，而是遗忘。\n\nThe biggest problem is not to grow up, but to forget.\n\n29、我太年轻了，甚至不懂怎么去爱她。\n\nI'm too young to even understand how to love her.\n\n30、上场，登上舞台。\n\nPlay, get on the stage.\n\n![](https://img2.baidu.com/it/u=3036138966,371898811&fm=253&fmt=auto&app=138&f=JPEG?w=810&h=500)\n\n1、在我眼里，全世界只有你是独一无二的。\n\n2、因为是心甘情愿地沉溺，即使死亡也无须被拯救。\n\n3、人类已经忘记了这个真理，但你不要忘记它。\n\n4、我与你相见的可能，是这世上的七十亿分之一。\n\n5、一旦有人将娃娃拿走，他们就会号啕大哭。\n\n6、你有一头金发，如果你驯养我，那该有多么美好啊！\n\n7、你知道，当人们感到非常苦闷时，总是喜欢日落的。\n\n8、如果你想要驯服一个人，就要冒着掉眼泪的危险。\n\n9、人生，总会有不期而遇的温暖，和生生不息的希望。\n\n10、这是最难做到的，审判自己比审判别人难得多。\n\n11、我们都是傻痴痴的小狐狸，徒具一副精明的外表。\n\n12、我们只有感动，却不知道感动来自何方。\n\n13、我还是太年轻了，甚至不懂得怎么爱他。\n\n14、我应该根据她的行为，而不是根据她的话来判断她。\n\n15、只有用心，才能看清楚。重要的东西是眼睛看不见的。\n\n16、要对一个人下定论，不应听其言，而应观其行。\n\n17、只有用心才能体会的，内在的本质是眼睛看不到的。\n\n18、如果选择被驯养，那就要承担一点哭泣的风险。\n\n19、你知道当一个人情绪低落的时候，他会格外喜欢看日落。\n\n20、忘记朋友是一件令人伤心的事情，并不是人人都有朋友的。\n\n21、因为你为玫瑰花了那么多时间，它才变得那么重要。\n\n22、我心爱的花在那里，在那颗遥远的星星上。\n\n23、对学者而言，星星则是一门待解的难题。\n\n24、如果你想和别人制造羁绊，就必须承受流泪的风险。\n\n25、如果你要是驯服了我，我的生活就一定会是欢快的。\n\n26、眼睛是什么也看不见的，一定要用心去看。\n\n27、如果我想结识蝴蝶，我得忍受两三只毛毛虫。\n\n28、在沙漠里有些孤独，在人群里也孤独。\n\n29、你明白，路太远，我无法带着躯体走，太沉重。\n\n30、如果想要提高英语，我们就不应该害怕犯错误。\n\n31、事实是，我以前不知道怎么去看待事物！\n\n32、忘记一个朋友真令人伤心，并非人人都有过朋友。\n\n33、对我们懂得生活的人来说，数字都是些无关紧要的事。\n\n34、忘记朋友是可悲的，并不是每个人都会有一个知心朋友。\n\n35、规律是从经验而来的，在经验以前，决不可能认识规律。\n\n36、一个人想要耍点小聪明的时候，就会显得有点不真实。\n\n37、生命中重要的事情，你不能用眼睛看，只能用心灵看。\n\n38、花总是表里不一，而我太年轻了，不知道该怎样爱护她。\n\n39、人经过选择，会满意和喜欢生命的机缘。\n\n40、要想结识蝴蝶，就得先忍受两三只毛毛虫的叮咬。\n\n41、把心爱的人放在心里，他便永远活在你的心中。\n\n42、所有的大人都曾经是小孩，虽然，只有少数人记得。\n\n43、当一个人情绪低落的时候，他会格外喜欢看日落。\n\n44、你知道，我的花，我是要对她负责的！\n\n45、虽然你伤了我的心，但我原谅你的所作所为。\n\n46、她只有四根微不足道的刺，保护自己，抵抗外敌。\n\n47、人不应该听花说些什么，只要欣赏她们，闻闻花就够了。\n\n48、你会爱这满天的星星，所有的星星都会是你的朋友。\n\n49、夜晚，我喜欢聆听星星，它们就像五亿个小铃铛一样。\n\n50、每一个人都有自己的星星，但其中的含义却因人而异。\n\n51、所有的大人都曾经是小孩，虽然，只有少数的人记得。\n\n52、在你看了四十四次日落那天，你很难过吗？\n\n53、你知道吗，人在难过的时候就会爱上日落。\n\n54、如果你想要制造羁绊，就得承受流泪的风险。\n\n55、她向我释放她的香气，展示她的美艳。\n\n56、他走过一个又一个星球，却始终放不下对她的思念。\n\n57、我对你来说，也是你的世界里的唯一了。\n\n58、当一个人炫耀他自己的智慧时，往往到会误入歧途。\n\n59、使沙漠显得美丽的，是它在什么地方藏着一口水井。\n\n60、看，我的那颗星星，恰好就在头上却距离如此遥远！\n\n61、所有的大人都是孩子，只要你未曾遗忘。\n\n62、黑夜是富裕的，充满芳香、沉睡的羔羊、尚无颜色的花朵。\n\n63、当一个人情绪低落时，他会格外喜欢看日落！\n\n64、想起你，我会很幸福的，你知道我也看着星星啊。\n\n65、沙漠之所以美丽，是因为在某个角落藏着一口井。\n\n66、一旦你驯服了什么，就要对她负责，永远的负责。\n\n67、沙漠之所以美丽，是因为在它的某个角落隐藏着一口井。\n\n68、你花费了时间，才让你的花费物超所值。\n\n69、我应该以她的行为，而不是她的言语来判断她的一切。\n\n70、生活才不是生命荒唐的编号，生活的意义在于生活本身。\n\n71、本质的东西是用眼睛看不见的，只能用心去看。\n\n72、当一个人炫耀他自己的智慧时，往往倒会误入歧途。\n\n73、总有些人不引人注目，却是出色的信使。\n\n74、即使快要死了，拥有过一个朋友总是好事。\n\n75、你，只有你，了解这些星星与众不同的含义。\n\n76、使生活如此美丽的，是我们藏起来的真诚和童心。\n\n77、我知道在一个星球上，有那么一个红脸的先生。\n\n78、我的命令是合理的，所以我有权要别人服从。\n\n79、原来有一天，向日葵也会想主动放弃太阳。\n\n80、你什么也不要说，语言是误解的源头。","source":"_posts/小王子.md","raw":"---\ntitle: 小王子\nauthor: king\nintro: 《小王子》里的四个人生真谛，能读懂的人，多半有故事\nindex_img: >-\n  https://img2.baidu.com/it/u=3036138966,371898811&fm=253&fmt=auto&app=138&f=JPEG?w=810&h=500\nabbrlink: 4540cbee\ndate: 2023-01-12 23:04:21\ntags:\n---\n1、当人情绪低落时候，喜欢看日落。\n\nWhen people are in a low mood, they like to watch sunset.\n\n2、星星真美，因为有一朵看不见的花。\n\nThe stars are beautiful because there is a flower that can't be seen.\n\n3、一直朝前走，也走不了多远。\n\nI can't go far until I go forward.\n\n4、当他抬头仰望繁星时，便会心满意足。\n\nWhen he looks up at the stars, he will be satisfied.\n\n5、即使在有人的地方，我们依然孤单。\n\nEven in places where there are people, we are still alone.\n\n6、你们很美，但你们是空虚的。\n\nYou are beautiful, but you are empty.\n\n7、可怕的不是长大，是遗忘。\n\nIt's not growing up, it's forgetting.\n\n8、你知道，悲伤的人会爱上日落的。\n\nYou know, sad people will fall in love with sunset.\n\n9、夜充满了威胁，邪风一吹，立刻腐烂。\n\nNight is full of threats, evil wind blows, immediately decay.\n\n10、每个人，都有一片属于自己的星空。\n\nEveryone, has a star of their own.\n\n11、我该从行动，而非言语来判别是非。\n\nI should judge right and wrong from action, not words.\n\n12、对旅人而言，星星是向导。\n\nFor travelers, stars are guides.\n\n13、能快乐旅行的，一定是轻装旅行的人。\n\nThose who can travel happily must be light-weight travelers.\n\n14、有一朵玫瑰，我想，她把我驯服了。\n\nThere is a rose, I think, she tamed me.\n\n15、人难过的时候，总是爱看日落。\n\nWhen people are sad, they always love to watch sunset.\n\n16、我不需要你，你也同样用不着我。\n\nI don't need you, and you don't need me either.\n\n17、一切都会好起来的，你知道的。\n\nEverything will be fine, you know.\n\n18、当一个人伤心，他会喜欢日落。\n\nWhen a person is sad, he will like sunset.\n\n19、时间越临近，我就越来越快乐。\n\nThe closer time comes, the happier I am.\n\n20、大人们都是这个样子，以衣冠取人。\n\nThe big people are all like this, taking people with their clothes.\n\n21、在沙漠上，真有点孤独。\n\nIt's a little lonely in the desert.\n\n22、真正重要的东西，肉眼是看不到的。\n\nWhat really matters is invisible to the naked eye.\n\n23、最重要的东西，是肉眼看不见的。\n\nThe most important thing is invisible to the naked eye.\n\n24、忘记朋友是可悲的，不是谁都有朋友。\n\nIt's sad to forget friends, not everyone has friends.\n\n25、路一旦打通，不会没有人走。\n\nOnce the road is opened, no one will go.\n\n26、对我那位商人来说，它们就是财富。\n\nFor my businessman, they are wealth.\n\n27、当我们开始追寻，我们就已经在失去。\n\nWhen we start to pursue, we are already losing.\n\n28、最大的问题不是长大，而是遗忘。\n\nThe biggest problem is not to grow up, but to forget.\n\n29、我太年轻了，甚至不懂怎么去爱她。\n\nI'm too young to even understand how to love her.\n\n30、上场，登上舞台。\n\nPlay, get on the stage.\n\n![](https://img2.baidu.com/it/u=3036138966,371898811&fm=253&fmt=auto&app=138&f=JPEG?w=810&h=500)\n\n1、在我眼里，全世界只有你是独一无二的。\n\n2、因为是心甘情愿地沉溺，即使死亡也无须被拯救。\n\n3、人类已经忘记了这个真理，但你不要忘记它。\n\n4、我与你相见的可能，是这世上的七十亿分之一。\n\n5、一旦有人将娃娃拿走，他们就会号啕大哭。\n\n6、你有一头金发，如果你驯养我，那该有多么美好啊！\n\n7、你知道，当人们感到非常苦闷时，总是喜欢日落的。\n\n8、如果你想要驯服一个人，就要冒着掉眼泪的危险。\n\n9、人生，总会有不期而遇的温暖，和生生不息的希望。\n\n10、这是最难做到的，审判自己比审判别人难得多。\n\n11、我们都是傻痴痴的小狐狸，徒具一副精明的外表。\n\n12、我们只有感动，却不知道感动来自何方。\n\n13、我还是太年轻了，甚至不懂得怎么爱他。\n\n14、我应该根据她的行为，而不是根据她的话来判断她。\n\n15、只有用心，才能看清楚。重要的东西是眼睛看不见的。\n\n16、要对一个人下定论，不应听其言，而应观其行。\n\n17、只有用心才能体会的，内在的本质是眼睛看不到的。\n\n18、如果选择被驯养，那就要承担一点哭泣的风险。\n\n19、你知道当一个人情绪低落的时候，他会格外喜欢看日落。\n\n20、忘记朋友是一件令人伤心的事情，并不是人人都有朋友的。\n\n21、因为你为玫瑰花了那么多时间，它才变得那么重要。\n\n22、我心爱的花在那里，在那颗遥远的星星上。\n\n23、对学者而言，星星则是一门待解的难题。\n\n24、如果你想和别人制造羁绊，就必须承受流泪的风险。\n\n25、如果你要是驯服了我，我的生活就一定会是欢快的。\n\n26、眼睛是什么也看不见的，一定要用心去看。\n\n27、如果我想结识蝴蝶，我得忍受两三只毛毛虫。\n\n28、在沙漠里有些孤独，在人群里也孤独。\n\n29、你明白，路太远，我无法带着躯体走，太沉重。\n\n30、如果想要提高英语，我们就不应该害怕犯错误。\n\n31、事实是，我以前不知道怎么去看待事物！\n\n32、忘记一个朋友真令人伤心，并非人人都有过朋友。\n\n33、对我们懂得生活的人来说，数字都是些无关紧要的事。\n\n34、忘记朋友是可悲的，并不是每个人都会有一个知心朋友。\n\n35、规律是从经验而来的，在经验以前，决不可能认识规律。\n\n36、一个人想要耍点小聪明的时候，就会显得有点不真实。\n\n37、生命中重要的事情，你不能用眼睛看，只能用心灵看。\n\n38、花总是表里不一，而我太年轻了，不知道该怎样爱护她。\n\n39、人经过选择，会满意和喜欢生命的机缘。\n\n40、要想结识蝴蝶，就得先忍受两三只毛毛虫的叮咬。\n\n41、把心爱的人放在心里，他便永远活在你的心中。\n\n42、所有的大人都曾经是小孩，虽然，只有少数人记得。\n\n43、当一个人情绪低落的时候，他会格外喜欢看日落。\n\n44、你知道，我的花，我是要对她负责的！\n\n45、虽然你伤了我的心，但我原谅你的所作所为。\n\n46、她只有四根微不足道的刺，保护自己，抵抗外敌。\n\n47、人不应该听花说些什么，只要欣赏她们，闻闻花就够了。\n\n48、你会爱这满天的星星，所有的星星都会是你的朋友。\n\n49、夜晚，我喜欢聆听星星，它们就像五亿个小铃铛一样。\n\n50、每一个人都有自己的星星，但其中的含义却因人而异。\n\n51、所有的大人都曾经是小孩，虽然，只有少数的人记得。\n\n52、在你看了四十四次日落那天，你很难过吗？\n\n53、你知道吗，人在难过的时候就会爱上日落。\n\n54、如果你想要制造羁绊，就得承受流泪的风险。\n\n55、她向我释放她的香气，展示她的美艳。\n\n56、他走过一个又一个星球，却始终放不下对她的思念。\n\n57、我对你来说，也是你的世界里的唯一了。\n\n58、当一个人炫耀他自己的智慧时，往往到会误入歧途。\n\n59、使沙漠显得美丽的，是它在什么地方藏着一口水井。\n\n60、看，我的那颗星星，恰好就在头上却距离如此遥远！\n\n61、所有的大人都是孩子，只要你未曾遗忘。\n\n62、黑夜是富裕的，充满芳香、沉睡的羔羊、尚无颜色的花朵。\n\n63、当一个人情绪低落时，他会格外喜欢看日落！\n\n64、想起你，我会很幸福的，你知道我也看着星星啊。\n\n65、沙漠之所以美丽，是因为在某个角落藏着一口井。\n\n66、一旦你驯服了什么，就要对她负责，永远的负责。\n\n67、沙漠之所以美丽，是因为在它的某个角落隐藏着一口井。\n\n68、你花费了时间，才让你的花费物超所值。\n\n69、我应该以她的行为，而不是她的言语来判断她的一切。\n\n70、生活才不是生命荒唐的编号，生活的意义在于生活本身。\n\n71、本质的东西是用眼睛看不见的，只能用心去看。\n\n72、当一个人炫耀他自己的智慧时，往往倒会误入歧途。\n\n73、总有些人不引人注目，却是出色的信使。\n\n74、即使快要死了，拥有过一个朋友总是好事。\n\n75、你，只有你，了解这些星星与众不同的含义。\n\n76、使生活如此美丽的，是我们藏起来的真诚和童心。\n\n77、我知道在一个星球上，有那么一个红脸的先生。\n\n78、我的命令是合理的，所以我有权要别人服从。\n\n79、原来有一天，向日葵也会想主动放弃太阳。\n\n80、你什么也不要说，语言是误解的源头。","slug":"小王子","published":1,"updated":"2023-01-31T16:22:28.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clhrpaian0018eq6q2rxd623d","content":"<p>1、当人情绪低落时候，喜欢看日落。</p>\n<p>When people are in a low mood, they like to watch sunset.</p>\n<p>2、星星真美，因为有一朵看不见的花。</p>\n<p>The stars are beautiful because there is a flower that can’t be seen.</p>\n<p>3、一直朝前走，也走不了多远。</p>\n<p>I can’t go far until I go forward.</p>\n<p>4、当他抬头仰望繁星时，便会心满意足。</p>\n<p>When he looks up at the stars, he will be satisfied.</p>\n<p>5、即使在有人的地方，我们依然孤单。</p>\n<p>Even in places where there are people, we are still alone.</p>\n<p>6、你们很美，但你们是空虚的。</p>\n<p>You are beautiful, but you are empty.</p>\n<p>7、可怕的不是长大，是遗忘。</p>\n<p>It’s not growing up, it’s forgetting.</p>\n<p>8、你知道，悲伤的人会爱上日落的。</p>\n<p>You know, sad people will fall in love with sunset.</p>\n<p>9、夜充满了威胁，邪风一吹，立刻腐烂。</p>\n<p>Night is full of threats, evil wind blows, immediately decay.</p>\n<p>10、每个人，都有一片属于自己的星空。</p>\n<p>Everyone, has a star of their own.</p>\n<p>11、我该从行动，而非言语来判别是非。</p>\n<p>I should judge right and wrong from action, not words.</p>\n<p>12、对旅人而言，星星是向导。</p>\n<p>For travelers, stars are guides.</p>\n<p>13、能快乐旅行的，一定是轻装旅行的人。</p>\n<p>Those who can travel happily must be light-weight travelers.</p>\n<p>14、有一朵玫瑰，我想，她把我驯服了。</p>\n<p>There is a rose, I think, she tamed me.</p>\n<p>15、人难过的时候，总是爱看日落。</p>\n<p>When people are sad, they always love to watch sunset.</p>\n<p>16、我不需要你，你也同样用不着我。</p>\n<p>I don’t need you, and you don’t need me either.</p>\n<p>17、一切都会好起来的，你知道的。</p>\n<p>Everything will be fine, you know.</p>\n<p>18、当一个人伤心，他会喜欢日落。</p>\n<p>When a person is sad, he will like sunset.</p>\n<p>19、时间越临近，我就越来越快乐。</p>\n<p>The closer time comes, the happier I am.</p>\n<p>20、大人们都是这个样子，以衣冠取人。</p>\n<p>The big people are all like this, taking people with their clothes.</p>\n<p>21、在沙漠上，真有点孤独。</p>\n<p>It’s a little lonely in the desert.</p>\n<p>22、真正重要的东西，肉眼是看不到的。</p>\n<p>What really matters is invisible to the naked eye.</p>\n<p>23、最重要的东西，是肉眼看不见的。</p>\n<p>The most important thing is invisible to the naked eye.</p>\n<p>24、忘记朋友是可悲的，不是谁都有朋友。</p>\n<p>It’s sad to forget friends, not everyone has friends.</p>\n<p>25、路一旦打通，不会没有人走。</p>\n<p>Once the road is opened, no one will go.</p>\n<p>26、对我那位商人来说，它们就是财富。</p>\n<p>For my businessman, they are wealth.</p>\n<p>27、当我们开始追寻，我们就已经在失去。</p>\n<p>When we start to pursue, we are already losing.</p>\n<p>28、最大的问题不是长大，而是遗忘。</p>\n<p>The biggest problem is not to grow up, but to forget.</p>\n<p>29、我太年轻了，甚至不懂怎么去爱她。</p>\n<p>I’m too young to even understand how to love her.</p>\n<p>30、上场，登上舞台。</p>\n<p>Play, get on the stage.</p>\n<p><img src=\"https://img2.baidu.com/it/u=3036138966,371898811&fm=253&fmt=auto&app=138&f=JPEG?w=810&h=500\"></p>\n<p>1、在我眼里，全世界只有你是独一无二的。</p>\n<p>2、因为是心甘情愿地沉溺，即使死亡也无须被拯救。</p>\n<p>3、人类已经忘记了这个真理，但你不要忘记它。</p>\n<p>4、我与你相见的可能，是这世上的七十亿分之一。</p>\n<p>5、一旦有人将娃娃拿走，他们就会号啕大哭。</p>\n<p>6、你有一头金发，如果你驯养我，那该有多么美好啊！</p>\n<p>7、你知道，当人们感到非常苦闷时，总是喜欢日落的。</p>\n<p>8、如果你想要驯服一个人，就要冒着掉眼泪的危险。</p>\n<p>9、人生，总会有不期而遇的温暖，和生生不息的希望。</p>\n<p>10、这是最难做到的，审判自己比审判别人难得多。</p>\n<p>11、我们都是傻痴痴的小狐狸，徒具一副精明的外表。</p>\n<p>12、我们只有感动，却不知道感动来自何方。</p>\n<p>13、我还是太年轻了，甚至不懂得怎么爱他。</p>\n<p>14、我应该根据她的行为，而不是根据她的话来判断她。</p>\n<p>15、只有用心，才能看清楚。重要的东西是眼睛看不见的。</p>\n<p>16、要对一个人下定论，不应听其言，而应观其行。</p>\n<p>17、只有用心才能体会的，内在的本质是眼睛看不到的。</p>\n<p>18、如果选择被驯养，那就要承担一点哭泣的风险。</p>\n<p>19、你知道当一个人情绪低落的时候，他会格外喜欢看日落。</p>\n<p>20、忘记朋友是一件令人伤心的事情，并不是人人都有朋友的。</p>\n<p>21、因为你为玫瑰花了那么多时间，它才变得那么重要。</p>\n<p>22、我心爱的花在那里，在那颗遥远的星星上。</p>\n<p>23、对学者而言，星星则是一门待解的难题。</p>\n<p>24、如果你想和别人制造羁绊，就必须承受流泪的风险。</p>\n<p>25、如果你要是驯服了我，我的生活就一定会是欢快的。</p>\n<p>26、眼睛是什么也看不见的，一定要用心去看。</p>\n<p>27、如果我想结识蝴蝶，我得忍受两三只毛毛虫。</p>\n<p>28、在沙漠里有些孤独，在人群里也孤独。</p>\n<p>29、你明白，路太远，我无法带着躯体走，太沉重。</p>\n<p>30、如果想要提高英语，我们就不应该害怕犯错误。</p>\n<p>31、事实是，我以前不知道怎么去看待事物！</p>\n<p>32、忘记一个朋友真令人伤心，并非人人都有过朋友。</p>\n<p>33、对我们懂得生活的人来说，数字都是些无关紧要的事。</p>\n<p>34、忘记朋友是可悲的，并不是每个人都会有一个知心朋友。</p>\n<p>35、规律是从经验而来的，在经验以前，决不可能认识规律。</p>\n<p>36、一个人想要耍点小聪明的时候，就会显得有点不真实。</p>\n<p>37、生命中重要的事情，你不能用眼睛看，只能用心灵看。</p>\n<p>38、花总是表里不一，而我太年轻了，不知道该怎样爱护她。</p>\n<p>39、人经过选择，会满意和喜欢生命的机缘。</p>\n<p>40、要想结识蝴蝶，就得先忍受两三只毛毛虫的叮咬。</p>\n<p>41、把心爱的人放在心里，他便永远活在你的心中。</p>\n<p>42、所有的大人都曾经是小孩，虽然，只有少数人记得。</p>\n<p>43、当一个人情绪低落的时候，他会格外喜欢看日落。</p>\n<p>44、你知道，我的花，我是要对她负责的！</p>\n<p>45、虽然你伤了我的心，但我原谅你的所作所为。</p>\n<p>46、她只有四根微不足道的刺，保护自己，抵抗外敌。</p>\n<p>47、人不应该听花说些什么，只要欣赏她们，闻闻花就够了。</p>\n<p>48、你会爱这满天的星星，所有的星星都会是你的朋友。</p>\n<p>49、夜晚，我喜欢聆听星星，它们就像五亿个小铃铛一样。</p>\n<p>50、每一个人都有自己的星星，但其中的含义却因人而异。</p>\n<p>51、所有的大人都曾经是小孩，虽然，只有少数的人记得。</p>\n<p>52、在你看了四十四次日落那天，你很难过吗？</p>\n<p>53、你知道吗，人在难过的时候就会爱上日落。</p>\n<p>54、如果你想要制造羁绊，就得承受流泪的风险。</p>\n<p>55、她向我释放她的香气，展示她的美艳。</p>\n<p>56、他走过一个又一个星球，却始终放不下对她的思念。</p>\n<p>57、我对你来说，也是你的世界里的唯一了。</p>\n<p>58、当一个人炫耀他自己的智慧时，往往到会误入歧途。</p>\n<p>59、使沙漠显得美丽的，是它在什么地方藏着一口水井。</p>\n<p>60、看，我的那颗星星，恰好就在头上却距离如此遥远！</p>\n<p>61、所有的大人都是孩子，只要你未曾遗忘。</p>\n<p>62、黑夜是富裕的，充满芳香、沉睡的羔羊、尚无颜色的花朵。</p>\n<p>63、当一个人情绪低落时，他会格外喜欢看日落！</p>\n<p>64、想起你，我会很幸福的，你知道我也看着星星啊。</p>\n<p>65、沙漠之所以美丽，是因为在某个角落藏着一口井。</p>\n<p>66、一旦你驯服了什么，就要对她负责，永远的负责。</p>\n<p>67、沙漠之所以美丽，是因为在它的某个角落隐藏着一口井。</p>\n<p>68、你花费了时间，才让你的花费物超所值。</p>\n<p>69、我应该以她的行为，而不是她的言语来判断她的一切。</p>\n<p>70、生活才不是生命荒唐的编号，生活的意义在于生活本身。</p>\n<p>71、本质的东西是用眼睛看不见的，只能用心去看。</p>\n<p>72、当一个人炫耀他自己的智慧时，往往倒会误入歧途。</p>\n<p>73、总有些人不引人注目，却是出色的信使。</p>\n<p>74、即使快要死了，拥有过一个朋友总是好事。</p>\n<p>75、你，只有你，了解这些星星与众不同的含义。</p>\n<p>76、使生活如此美丽的，是我们藏起来的真诚和童心。</p>\n<p>77、我知道在一个星球上，有那么一个红脸的先生。</p>\n<p>78、我的命令是合理的，所以我有权要别人服从。</p>\n<p>79、原来有一天，向日葵也会想主动放弃太阳。</p>\n<p>80、你什么也不要说，语言是误解的源头。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>1、当人情绪低落时候，喜欢看日落。</p>\n<p>When people are in a low mood, they like to watch sunset.</p>\n<p>2、星星真美，因为有一朵看不见的花。</p>\n<p>The stars are beautiful because there is a flower that can’t be seen.</p>\n<p>3、一直朝前走，也走不了多远。</p>\n<p>I can’t go far until I go forward.</p>\n<p>4、当他抬头仰望繁星时，便会心满意足。</p>\n<p>When he looks up at the stars, he will be satisfied.</p>\n<p>5、即使在有人的地方，我们依然孤单。</p>\n<p>Even in places where there are people, we are still alone.</p>\n<p>6、你们很美，但你们是空虚的。</p>\n<p>You are beautiful, but you are empty.</p>\n<p>7、可怕的不是长大，是遗忘。</p>\n<p>It’s not growing up, it’s forgetting.</p>\n<p>8、你知道，悲伤的人会爱上日落的。</p>\n<p>You know, sad people will fall in love with sunset.</p>\n<p>9、夜充满了威胁，邪风一吹，立刻腐烂。</p>\n<p>Night is full of threats, evil wind blows, immediately decay.</p>\n<p>10、每个人，都有一片属于自己的星空。</p>\n<p>Everyone, has a star of their own.</p>\n<p>11、我该从行动，而非言语来判别是非。</p>\n<p>I should judge right and wrong from action, not words.</p>\n<p>12、对旅人而言，星星是向导。</p>\n<p>For travelers, stars are guides.</p>\n<p>13、能快乐旅行的，一定是轻装旅行的人。</p>\n<p>Those who can travel happily must be light-weight travelers.</p>\n<p>14、有一朵玫瑰，我想，她把我驯服了。</p>\n<p>There is a rose, I think, she tamed me.</p>\n<p>15、人难过的时候，总是爱看日落。</p>\n<p>When people are sad, they always love to watch sunset.</p>\n<p>16、我不需要你，你也同样用不着我。</p>\n<p>I don’t need you, and you don’t need me either.</p>\n<p>17、一切都会好起来的，你知道的。</p>\n<p>Everything will be fine, you know.</p>\n<p>18、当一个人伤心，他会喜欢日落。</p>\n<p>When a person is sad, he will like sunset.</p>\n<p>19、时间越临近，我就越来越快乐。</p>\n<p>The closer time comes, the happier I am.</p>\n<p>20、大人们都是这个样子，以衣冠取人。</p>\n<p>The big people are all like this, taking people with their clothes.</p>\n<p>21、在沙漠上，真有点孤独。</p>\n<p>It’s a little lonely in the desert.</p>\n<p>22、真正重要的东西，肉眼是看不到的。</p>\n<p>What really matters is invisible to the naked eye.</p>\n<p>23、最重要的东西，是肉眼看不见的。</p>\n<p>The most important thing is invisible to the naked eye.</p>\n<p>24、忘记朋友是可悲的，不是谁都有朋友。</p>\n<p>It’s sad to forget friends, not everyone has friends.</p>\n<p>25、路一旦打通，不会没有人走。</p>\n<p>Once the road is opened, no one will go.</p>\n<p>26、对我那位商人来说，它们就是财富。</p>\n<p>For my businessman, they are wealth.</p>\n<p>27、当我们开始追寻，我们就已经在失去。</p>\n<p>When we start to pursue, we are already losing.</p>\n<p>28、最大的问题不是长大，而是遗忘。</p>\n<p>The biggest problem is not to grow up, but to forget.</p>\n<p>29、我太年轻了，甚至不懂怎么去爱她。</p>\n<p>I’m too young to even understand how to love her.</p>\n<p>30、上场，登上舞台。</p>\n<p>Play, get on the stage.</p>\n<p><img src=\"https://img2.baidu.com/it/u=3036138966,371898811&fm=253&fmt=auto&app=138&f=JPEG?w=810&h=500\"></p>\n<p>1、在我眼里，全世界只有你是独一无二的。</p>\n<p>2、因为是心甘情愿地沉溺，即使死亡也无须被拯救。</p>\n<p>3、人类已经忘记了这个真理，但你不要忘记它。</p>\n<p>4、我与你相见的可能，是这世上的七十亿分之一。</p>\n<p>5、一旦有人将娃娃拿走，他们就会号啕大哭。</p>\n<p>6、你有一头金发，如果你驯养我，那该有多么美好啊！</p>\n<p>7、你知道，当人们感到非常苦闷时，总是喜欢日落的。</p>\n<p>8、如果你想要驯服一个人，就要冒着掉眼泪的危险。</p>\n<p>9、人生，总会有不期而遇的温暖，和生生不息的希望。</p>\n<p>10、这是最难做到的，审判自己比审判别人难得多。</p>\n<p>11、我们都是傻痴痴的小狐狸，徒具一副精明的外表。</p>\n<p>12、我们只有感动，却不知道感动来自何方。</p>\n<p>13、我还是太年轻了，甚至不懂得怎么爱他。</p>\n<p>14、我应该根据她的行为，而不是根据她的话来判断她。</p>\n<p>15、只有用心，才能看清楚。重要的东西是眼睛看不见的。</p>\n<p>16、要对一个人下定论，不应听其言，而应观其行。</p>\n<p>17、只有用心才能体会的，内在的本质是眼睛看不到的。</p>\n<p>18、如果选择被驯养，那就要承担一点哭泣的风险。</p>\n<p>19、你知道当一个人情绪低落的时候，他会格外喜欢看日落。</p>\n<p>20、忘记朋友是一件令人伤心的事情，并不是人人都有朋友的。</p>\n<p>21、因为你为玫瑰花了那么多时间，它才变得那么重要。</p>\n<p>22、我心爱的花在那里，在那颗遥远的星星上。</p>\n<p>23、对学者而言，星星则是一门待解的难题。</p>\n<p>24、如果你想和别人制造羁绊，就必须承受流泪的风险。</p>\n<p>25、如果你要是驯服了我，我的生活就一定会是欢快的。</p>\n<p>26、眼睛是什么也看不见的，一定要用心去看。</p>\n<p>27、如果我想结识蝴蝶，我得忍受两三只毛毛虫。</p>\n<p>28、在沙漠里有些孤独，在人群里也孤独。</p>\n<p>29、你明白，路太远，我无法带着躯体走，太沉重。</p>\n<p>30、如果想要提高英语，我们就不应该害怕犯错误。</p>\n<p>31、事实是，我以前不知道怎么去看待事物！</p>\n<p>32、忘记一个朋友真令人伤心，并非人人都有过朋友。</p>\n<p>33、对我们懂得生活的人来说，数字都是些无关紧要的事。</p>\n<p>34、忘记朋友是可悲的，并不是每个人都会有一个知心朋友。</p>\n<p>35、规律是从经验而来的，在经验以前，决不可能认识规律。</p>\n<p>36、一个人想要耍点小聪明的时候，就会显得有点不真实。</p>\n<p>37、生命中重要的事情，你不能用眼睛看，只能用心灵看。</p>\n<p>38、花总是表里不一，而我太年轻了，不知道该怎样爱护她。</p>\n<p>39、人经过选择，会满意和喜欢生命的机缘。</p>\n<p>40、要想结识蝴蝶，就得先忍受两三只毛毛虫的叮咬。</p>\n<p>41、把心爱的人放在心里，他便永远活在你的心中。</p>\n<p>42、所有的大人都曾经是小孩，虽然，只有少数人记得。</p>\n<p>43、当一个人情绪低落的时候，他会格外喜欢看日落。</p>\n<p>44、你知道，我的花，我是要对她负责的！</p>\n<p>45、虽然你伤了我的心，但我原谅你的所作所为。</p>\n<p>46、她只有四根微不足道的刺，保护自己，抵抗外敌。</p>\n<p>47、人不应该听花说些什么，只要欣赏她们，闻闻花就够了。</p>\n<p>48、你会爱这满天的星星，所有的星星都会是你的朋友。</p>\n<p>49、夜晚，我喜欢聆听星星，它们就像五亿个小铃铛一样。</p>\n<p>50、每一个人都有自己的星星，但其中的含义却因人而异。</p>\n<p>51、所有的大人都曾经是小孩，虽然，只有少数的人记得。</p>\n<p>52、在你看了四十四次日落那天，你很难过吗？</p>\n<p>53、你知道吗，人在难过的时候就会爱上日落。</p>\n<p>54、如果你想要制造羁绊，就得承受流泪的风险。</p>\n<p>55、她向我释放她的香气，展示她的美艳。</p>\n<p>56、他走过一个又一个星球，却始终放不下对她的思念。</p>\n<p>57、我对你来说，也是你的世界里的唯一了。</p>\n<p>58、当一个人炫耀他自己的智慧时，往往到会误入歧途。</p>\n<p>59、使沙漠显得美丽的，是它在什么地方藏着一口水井。</p>\n<p>60、看，我的那颗星星，恰好就在头上却距离如此遥远！</p>\n<p>61、所有的大人都是孩子，只要你未曾遗忘。</p>\n<p>62、黑夜是富裕的，充满芳香、沉睡的羔羊、尚无颜色的花朵。</p>\n<p>63、当一个人情绪低落时，他会格外喜欢看日落！</p>\n<p>64、想起你，我会很幸福的，你知道我也看着星星啊。</p>\n<p>65、沙漠之所以美丽，是因为在某个角落藏着一口井。</p>\n<p>66、一旦你驯服了什么，就要对她负责，永远的负责。</p>\n<p>67、沙漠之所以美丽，是因为在它的某个角落隐藏着一口井。</p>\n<p>68、你花费了时间，才让你的花费物超所值。</p>\n<p>69、我应该以她的行为，而不是她的言语来判断她的一切。</p>\n<p>70、生活才不是生命荒唐的编号，生活的意义在于生活本身。</p>\n<p>71、本质的东西是用眼睛看不见的，只能用心去看。</p>\n<p>72、当一个人炫耀他自己的智慧时，往往倒会误入歧途。</p>\n<p>73、总有些人不引人注目，却是出色的信使。</p>\n<p>74、即使快要死了，拥有过一个朋友总是好事。</p>\n<p>75、你，只有你，了解这些星星与众不同的含义。</p>\n<p>76、使生活如此美丽的，是我们藏起来的真诚和童心。</p>\n<p>77、我知道在一个星球上，有那么一个红脸的先生。</p>\n<p>78、我的命令是合理的，所以我有权要别人服从。</p>\n<p>79、原来有一天，向日葵也会想主动放弃太阳。</p>\n<p>80、你什么也不要说，语言是误解的源头。</p>\n"},{"title":"一个App的诞生","excerpt":"APP的诞生就像一个孩子的出生一样，他需要经历产品从一开始的调研准备到孕育期到设计到开发再到测试到出生再到成长成熟到最后的衰落，他同样是一个有着完整生命周期。","hide":true,"index_img":"https://img1.baidu.com/it/u=204971088,1987351322&fm=253&fmt=auto&app=138&f=JPEG?w=800&h=500","abbrlink":"824ac3d0","_content":"\n## 市场调研\n\n### 是否存在竞争对手\n\n### 是否有明确的开发方向\n\n### App是否满足需求\n\n### 哪些模块近期急需成型\n\n## 成本预估\n\n## 短期计划书\n\n### 1.详细的需求文件\n\n### 2.控制前期开发的范围\n\n需求文档定义了新系统所需的功能，以便能够在选择阶段关注最重要的部分。\n\n在实施和培训阶段，需求文档可以很好的帮助你避免范围蔓延。\n\n范围蔓延是任何项目中都存在的危险，它会增加需求和目标，直到整个项目变得难以控制，混乱不堪，导致你无法交付。\n\n在软件实施计划的情况下，当你决定一次设置和定制每个功能的所有特点时，范围蔓延就会发生。你必须专注于任务，忠实于你的需求，并让新系统的关键部分投入使用。\n\n为了避免范围蔓延，你需要对软件实施计划使用一些IT项目管理软件和最佳实践。这里便有几种选择：\n\n○较大的企业(50名以上员工)可能会采用正式的IT项目管理软件(但这很讽刺，因为理论上你也需要实施这个系统)。\n○中型企业(11-50名员工)可以通过免费的项目管理工具来帮助管理和分配实施任务。\n○较小的企业(10人或更少的员工)可以使用人工数字方法来保持有序性。\n\n这些协作工具将有助于实现团队成员们的协作，能最大限度地提高各自团队的采用率和使用率。8manage IT项目管理软件是其中的优秀代表，其支持时间、资源、成本、风险等方面的管理，有效提高团队协作效率，全面推动你的软件实施成功。\n\n### 3.分配现实的团队来推动软件实施计划\n\n确定需求以及有多少业务单位将使用新系统，估算用户总数。采用软件业务单位/用户越多，实施团队就应该越大。\n\n### 4.用积极主动的、有吸引力的策略鼓励用户采用\n\n你必须制定策略以此来获得用户们对新系统的接受和采用。这里有几个关键步骤，你可以用来实施新的软件：\n\n○采用经过验证的方法为变更设定指导方针\n○定义新软件有助于实现的清晰目标\n○确定新软件解决的痛点是什么，以及去掉痛点的能带来什么最佳结果\n○针对每个团队的实施采用不同的消息传递和沟通方式\n\n### 4.注重持续改进\n\n培训是持续改进的中心支柱，关键是要避免一刀切的培训，与供应商演示类似，根据干系人的需求定制每个会议。考虑到不是每个用户群体都能够投入相同的时间，因此，要为干系人提供不同的培训选择。\n\n## 产品策划\n\n### 策划书\n\n#### 通过完备的策划书是否拉取投资\n\n\n\n## 运营手段\n\n\n\n## 盈利模式（重点）\n\n**APP的八种盈利模式**\n\n在了解APP的盈利模式之前，首先要对APP的分类有清晰的认识。一般按照常规化分类可分为**社交类、新闻类、购物类、娱乐类、金融类、生活类、工具类**等。\n\n每一种分类的受众群体和产品功能不同，但盈利模式却可以通用，如果你想让自己的APP能够赚钱，以下八种方法要好好把握。\n\n### No.1广告引流\n\n广告是通过以程序化广告为代表的互联网广告技术实现的流量变现，具有重流量，低门槛、灵活可控的特点，几乎适用于全部具有一定流量基础的APP。当应用下载量达到一定程度的时候，可以在APP上向很多企业或个人提供广告位，获取广告收益。\n\n具体的实现形式就是通过**首页轮播图、APP上下方广告推送、文章或视频中广告推送、启动页**等等，很多边边角角都能进行广告的投放，不同的APP种类有不同的广告推送方式。\n\n### No.2电商模式\n\n就是在APP中帮商家销售商品，比如化妆品、服装、生鲜、电器、家居等，从中**赚取分成**，或者向商家**收取入驻费**。也可以通过APP销售自己的产品，在开发电商模式的APP时，需要实现**产品购物车**、**下单支付**、**客服咨询窗口**等功能。\n\n### No.3平台提成模式\n\n提成，也称扣点，相当于收取的平台费，常见于一些提供服务平台的APP中。**根据每个商户或者用户赚取的资金或者收到的打赏等，进行平台费用的扣除。**这类平台的抽成大概在30%以内，开发者提供消费用户、平台建设等。\n\n#### No.4会员增值服务\n\n础的APP服务是免费的，但是使用APP养成了一定的使用习惯，想要开启部分VIP功能，**就会针对此VIP功能来进行收费**，或者通过向用户售卖平台会员卡，进行一些套餐或者日常的优惠等，实现盈利。\n\n例如许多音乐类APP需要用户开通VIP会员来收听付费歌曲，游戏类APP推出升级辅助道具、稀有装备，视频类APP推出“会员超前点播”等等，这些都可以引导用户付费开通或购买，从中赚取收益。\n\n### No.5付费阅读下载\n\n\n\n现在，知识付费已被越来越多的用户所接受。**在信息爆炸的时代，更多的用户愿意通过付费，快捷地获取所需的优质知识，节省时间成本。**付费阅读的模式，让更多的企业实现低成本投入、聚集粉丝、快速变现，适用于自媒体、出版业等，是移动商务快速变现的运营模式之一。\n\n### No.6借助第三方平台\n\n你可能不是通过打车APP、电影票APP直接购买你需要的，你刚好在微商或者支付宝上看到了，并且如果购买的商品还便宜的话，你毫不犹豫地下手了。**因为你的的购买行为，微信和支付宝成功地将你导向了打车APP、电影票APP等第三方软件，并成功变现。**\n\n### No.7线下引流\n\n有一些实体门店商家，**他们通过APP应用将用户引流至线下门店**，实现转化。比如餐饮行业，就是通过APP应用提供服务，在APP应用中完成点单、付款、外卖配送等。\n\n### No.8合伙人招募\n\nAPP开发后，感觉此APP有发展前途的投资者势必想进行合伙投资，**缴纳一部分费用获得一定的股份**，通过招募合伙人也可以赚钱。当APP做大了，用户多了，肯定会有更加有实力的投资企业上门进行**融资**，这个是最赚钱的了。\n\n## 风险评估\n\n**一、需求不明确，沟通有误**\n\n很多时候一些[app开发](http://www.apppark.cn/)之所以消耗较多的时间有一部分原因就是在需求沟通上出现了一些问题。即便是在前期需求已经确认的情况下，后期在开发的过程中还是会面临需求更改的问题。尤其是当负责需求对接的人因各种原因被更换时，还可能会出现需求完全改变的情况。\n\n**二、开发人员变动**\n\n基于传统的[app开发方式](http://www.apppark.cn/t-2808.html)，app开发在需求确认之初，app开发公司就差不多确定了开发的团队了。因为人事变动等原因，导致团队成员跟之前不一样，如果更换进来的是技术和沟通都比较好的且无碍，不然对开发进度和质量还是有较大影响的。\n\n**三、不能按时交付，或者不能以较好地质量完成交付**\n\n这点主要是针对于app开发公司而言的。在实际的开发场景中，总是会有各种因素导致app延期才能完成，有些时候即便是完成了，到交予客户验收或者上线时出现各种各样的问题。那么对于有相关需求的企业或个人来说，这种情况也是极不愿意遇到的。\n\n当然了还会有其他的各种大大小小的风险，比如在找app开发公司开发app时会碰到一些不靠谱的公司、开发过程中app开发公司以各种原因加价等。所以如果有app开发的需求但自身没有技术支持的情况之下，一定要对app开发公司的背景资料等多做了解，可以实地探访和沟通需求，然后要注意合同规范和流程规范，调整及承诺等一定要以合同的形式提现。\n\n## 利益分配\n\n## 版权意识\n\n## 后期展望","source":"_posts/开发文档.md","raw":"---\ntitle: 一个App的诞生\nexcerpt: APP的诞生就像一个孩子的出生一样，他需要经历产品从一开始的调研准备到孕育期到设计到开发再到测试到出生再到成长成熟到最后的衰落，他同样是一个有着完整生命周期。\ncategories:\n  - 随笔\nhide: true\nindex_img: https://img1.baidu.com/it/u=204971088,1987351322&fm=253&fmt=auto&app=138&f=JPEG?w=800&h=500\nabbrlink: 824ac3d0\n---\n\n## 市场调研\n\n### 是否存在竞争对手\n\n### 是否有明确的开发方向\n\n### App是否满足需求\n\n### 哪些模块近期急需成型\n\n## 成本预估\n\n## 短期计划书\n\n### 1.详细的需求文件\n\n### 2.控制前期开发的范围\n\n需求文档定义了新系统所需的功能，以便能够在选择阶段关注最重要的部分。\n\n在实施和培训阶段，需求文档可以很好的帮助你避免范围蔓延。\n\n范围蔓延是任何项目中都存在的危险，它会增加需求和目标，直到整个项目变得难以控制，混乱不堪，导致你无法交付。\n\n在软件实施计划的情况下，当你决定一次设置和定制每个功能的所有特点时，范围蔓延就会发生。你必须专注于任务，忠实于你的需求，并让新系统的关键部分投入使用。\n\n为了避免范围蔓延，你需要对软件实施计划使用一些IT项目管理软件和最佳实践。这里便有几种选择：\n\n○较大的企业(50名以上员工)可能会采用正式的IT项目管理软件(但这很讽刺，因为理论上你也需要实施这个系统)。\n○中型企业(11-50名员工)可以通过免费的项目管理工具来帮助管理和分配实施任务。\n○较小的企业(10人或更少的员工)可以使用人工数字方法来保持有序性。\n\n这些协作工具将有助于实现团队成员们的协作，能最大限度地提高各自团队的采用率和使用率。8manage IT项目管理软件是其中的优秀代表，其支持时间、资源、成本、风险等方面的管理，有效提高团队协作效率，全面推动你的软件实施成功。\n\n### 3.分配现实的团队来推动软件实施计划\n\n确定需求以及有多少业务单位将使用新系统，估算用户总数。采用软件业务单位/用户越多，实施团队就应该越大。\n\n### 4.用积极主动的、有吸引力的策略鼓励用户采用\n\n你必须制定策略以此来获得用户们对新系统的接受和采用。这里有几个关键步骤，你可以用来实施新的软件：\n\n○采用经过验证的方法为变更设定指导方针\n○定义新软件有助于实现的清晰目标\n○确定新软件解决的痛点是什么，以及去掉痛点的能带来什么最佳结果\n○针对每个团队的实施采用不同的消息传递和沟通方式\n\n### 4.注重持续改进\n\n培训是持续改进的中心支柱，关键是要避免一刀切的培训，与供应商演示类似，根据干系人的需求定制每个会议。考虑到不是每个用户群体都能够投入相同的时间，因此，要为干系人提供不同的培训选择。\n\n## 产品策划\n\n### 策划书\n\n#### 通过完备的策划书是否拉取投资\n\n\n\n## 运营手段\n\n\n\n## 盈利模式（重点）\n\n**APP的八种盈利模式**\n\n在了解APP的盈利模式之前，首先要对APP的分类有清晰的认识。一般按照常规化分类可分为**社交类、新闻类、购物类、娱乐类、金融类、生活类、工具类**等。\n\n每一种分类的受众群体和产品功能不同，但盈利模式却可以通用，如果你想让自己的APP能够赚钱，以下八种方法要好好把握。\n\n### No.1广告引流\n\n广告是通过以程序化广告为代表的互联网广告技术实现的流量变现，具有重流量，低门槛、灵活可控的特点，几乎适用于全部具有一定流量基础的APP。当应用下载量达到一定程度的时候，可以在APP上向很多企业或个人提供广告位，获取广告收益。\n\n具体的实现形式就是通过**首页轮播图、APP上下方广告推送、文章或视频中广告推送、启动页**等等，很多边边角角都能进行广告的投放，不同的APP种类有不同的广告推送方式。\n\n### No.2电商模式\n\n就是在APP中帮商家销售商品，比如化妆品、服装、生鲜、电器、家居等，从中**赚取分成**，或者向商家**收取入驻费**。也可以通过APP销售自己的产品，在开发电商模式的APP时，需要实现**产品购物车**、**下单支付**、**客服咨询窗口**等功能。\n\n### No.3平台提成模式\n\n提成，也称扣点，相当于收取的平台费，常见于一些提供服务平台的APP中。**根据每个商户或者用户赚取的资金或者收到的打赏等，进行平台费用的扣除。**这类平台的抽成大概在30%以内，开发者提供消费用户、平台建设等。\n\n#### No.4会员增值服务\n\n础的APP服务是免费的，但是使用APP养成了一定的使用习惯，想要开启部分VIP功能，**就会针对此VIP功能来进行收费**，或者通过向用户售卖平台会员卡，进行一些套餐或者日常的优惠等，实现盈利。\n\n例如许多音乐类APP需要用户开通VIP会员来收听付费歌曲，游戏类APP推出升级辅助道具、稀有装备，视频类APP推出“会员超前点播”等等，这些都可以引导用户付费开通或购买，从中赚取收益。\n\n### No.5付费阅读下载\n\n\n\n现在，知识付费已被越来越多的用户所接受。**在信息爆炸的时代，更多的用户愿意通过付费，快捷地获取所需的优质知识，节省时间成本。**付费阅读的模式，让更多的企业实现低成本投入、聚集粉丝、快速变现，适用于自媒体、出版业等，是移动商务快速变现的运营模式之一。\n\n### No.6借助第三方平台\n\n你可能不是通过打车APP、电影票APP直接购买你需要的，你刚好在微商或者支付宝上看到了，并且如果购买的商品还便宜的话，你毫不犹豫地下手了。**因为你的的购买行为，微信和支付宝成功地将你导向了打车APP、电影票APP等第三方软件，并成功变现。**\n\n### No.7线下引流\n\n有一些实体门店商家，**他们通过APP应用将用户引流至线下门店**，实现转化。比如餐饮行业，就是通过APP应用提供服务，在APP应用中完成点单、付款、外卖配送等。\n\n### No.8合伙人招募\n\nAPP开发后，感觉此APP有发展前途的投资者势必想进行合伙投资，**缴纳一部分费用获得一定的股份**，通过招募合伙人也可以赚钱。当APP做大了，用户多了，肯定会有更加有实力的投资企业上门进行**融资**，这个是最赚钱的了。\n\n## 风险评估\n\n**一、需求不明确，沟通有误**\n\n很多时候一些[app开发](http://www.apppark.cn/)之所以消耗较多的时间有一部分原因就是在需求沟通上出现了一些问题。即便是在前期需求已经确认的情况下，后期在开发的过程中还是会面临需求更改的问题。尤其是当负责需求对接的人因各种原因被更换时，还可能会出现需求完全改变的情况。\n\n**二、开发人员变动**\n\n基于传统的[app开发方式](http://www.apppark.cn/t-2808.html)，app开发在需求确认之初，app开发公司就差不多确定了开发的团队了。因为人事变动等原因，导致团队成员跟之前不一样，如果更换进来的是技术和沟通都比较好的且无碍，不然对开发进度和质量还是有较大影响的。\n\n**三、不能按时交付，或者不能以较好地质量完成交付**\n\n这点主要是针对于app开发公司而言的。在实际的开发场景中，总是会有各种因素导致app延期才能完成，有些时候即便是完成了，到交予客户验收或者上线时出现各种各样的问题。那么对于有相关需求的企业或个人来说，这种情况也是极不愿意遇到的。\n\n当然了还会有其他的各种大大小小的风险，比如在找app开发公司开发app时会碰到一些不靠谱的公司、开发过程中app开发公司以各种原因加价等。所以如果有app开发的需求但自身没有技术支持的情况之下，一定要对app开发公司的背景资料等多做了解，可以实地探访和沟通需求，然后要注意合同规范和流程规范，调整及承诺等一定要以合同的形式提现。\n\n## 利益分配\n\n## 版权意识\n\n## 后期展望","slug":"开发文档","published":1,"date":"2023-02-09T12:56:04.000Z","updated":"2023-02-09T12:56:04.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clhrpaiao001beq6qbznyhg4d","content":"<h2 id=\"市场调研\"><a href=\"#市场调研\" class=\"headerlink\" title=\"市场调研\"></a>市场调研</h2><h3 id=\"是否存在竞争对手\"><a href=\"#是否存在竞争对手\" class=\"headerlink\" title=\"是否存在竞争对手\"></a>是否存在竞争对手</h3><h3 id=\"是否有明确的开发方向\"><a href=\"#是否有明确的开发方向\" class=\"headerlink\" title=\"是否有明确的开发方向\"></a>是否有明确的开发方向</h3><h3 id=\"App是否满足需求\"><a href=\"#App是否满足需求\" class=\"headerlink\" title=\"App是否满足需求\"></a>App是否满足需求</h3><h3 id=\"哪些模块近期急需成型\"><a href=\"#哪些模块近期急需成型\" class=\"headerlink\" title=\"哪些模块近期急需成型\"></a>哪些模块近期急需成型</h3><h2 id=\"成本预估\"><a href=\"#成本预估\" class=\"headerlink\" title=\"成本预估\"></a>成本预估</h2><h2 id=\"短期计划书\"><a href=\"#短期计划书\" class=\"headerlink\" title=\"短期计划书\"></a>短期计划书</h2><h3 id=\"1-详细的需求文件\"><a href=\"#1-详细的需求文件\" class=\"headerlink\" title=\"1.详细的需求文件\"></a>1.详细的需求文件</h3><h3 id=\"2-控制前期开发的范围\"><a href=\"#2-控制前期开发的范围\" class=\"headerlink\" title=\"2.控制前期开发的范围\"></a>2.控制前期开发的范围</h3><p>需求文档定义了新系统所需的功能，以便能够在选择阶段关注最重要的部分。</p>\n<p>在实施和培训阶段，需求文档可以很好的帮助你避免范围蔓延。</p>\n<p>范围蔓延是任何项目中都存在的危险，它会增加需求和目标，直到整个项目变得难以控制，混乱不堪，导致你无法交付。</p>\n<p>在软件实施计划的情况下，当你决定一次设置和定制每个功能的所有特点时，范围蔓延就会发生。你必须专注于任务，忠实于你的需求，并让新系统的关键部分投入使用。</p>\n<p>为了避免范围蔓延，你需要对软件实施计划使用一些IT项目管理软件和最佳实践。这里便有几种选择：</p>\n<p>○较大的企业(50名以上员工)可能会采用正式的IT项目管理软件(但这很讽刺，因为理论上你也需要实施这个系统)。<br>○中型企业(11-50名员工)可以通过免费的项目管理工具来帮助管理和分配实施任务。<br>○较小的企业(10人或更少的员工)可以使用人工数字方法来保持有序性。</p>\n<p>这些协作工具将有助于实现团队成员们的协作，能最大限度地提高各自团队的采用率和使用率。8manage IT项目管理软件是其中的优秀代表，其支持时间、资源、成本、风险等方面的管理，有效提高团队协作效率，全面推动你的软件实施成功。</p>\n<h3 id=\"3-分配现实的团队来推动软件实施计划\"><a href=\"#3-分配现实的团队来推动软件实施计划\" class=\"headerlink\" title=\"3.分配现实的团队来推动软件实施计划\"></a>3.分配现实的团队来推动软件实施计划</h3><p>确定需求以及有多少业务单位将使用新系统，估算用户总数。采用软件业务单位/用户越多，实施团队就应该越大。</p>\n<h3 id=\"4-用积极主动的、有吸引力的策略鼓励用户采用\"><a href=\"#4-用积极主动的、有吸引力的策略鼓励用户采用\" class=\"headerlink\" title=\"4.用积极主动的、有吸引力的策略鼓励用户采用\"></a>4.用积极主动的、有吸引力的策略鼓励用户采用</h3><p>你必须制定策略以此来获得用户们对新系统的接受和采用。这里有几个关键步骤，你可以用来实施新的软件：</p>\n<p>○采用经过验证的方法为变更设定指导方针<br>○定义新软件有助于实现的清晰目标<br>○确定新软件解决的痛点是什么，以及去掉痛点的能带来什么最佳结果<br>○针对每个团队的实施采用不同的消息传递和沟通方式</p>\n<h3 id=\"4-注重持续改进\"><a href=\"#4-注重持续改进\" class=\"headerlink\" title=\"4.注重持续改进\"></a>4.注重持续改进</h3><p>培训是持续改进的中心支柱，关键是要避免一刀切的培训，与供应商演示类似，根据干系人的需求定制每个会议。考虑到不是每个用户群体都能够投入相同的时间，因此，要为干系人提供不同的培训选择。</p>\n<h2 id=\"产品策划\"><a href=\"#产品策划\" class=\"headerlink\" title=\"产品策划\"></a>产品策划</h2><h3 id=\"策划书\"><a href=\"#策划书\" class=\"headerlink\" title=\"策划书\"></a>策划书</h3><h4 id=\"通过完备的策划书是否拉取投资\"><a href=\"#通过完备的策划书是否拉取投资\" class=\"headerlink\" title=\"通过完备的策划书是否拉取投资\"></a>通过完备的策划书是否拉取投资</h4><h2 id=\"运营手段\"><a href=\"#运营手段\" class=\"headerlink\" title=\"运营手段\"></a>运营手段</h2><h2 id=\"盈利模式（重点）\"><a href=\"#盈利模式（重点）\" class=\"headerlink\" title=\"盈利模式（重点）\"></a>盈利模式（重点）</h2><p><strong>APP的八种盈利模式</strong></p>\n<p>在了解APP的盈利模式之前，首先要对APP的分类有清晰的认识。一般按照常规化分类可分为<strong>社交类、新闻类、购物类、娱乐类、金融类、生活类、工具类</strong>等。</p>\n<p>每一种分类的受众群体和产品功能不同，但盈利模式却可以通用，如果你想让自己的APP能够赚钱，以下八种方法要好好把握。</p>\n<h3 id=\"No-1广告引流\"><a href=\"#No-1广告引流\" class=\"headerlink\" title=\"No.1广告引流\"></a>No.1广告引流</h3><p>广告是通过以程序化广告为代表的互联网广告技术实现的流量变现，具有重流量，低门槛、灵活可控的特点，几乎适用于全部具有一定流量基础的APP。当应用下载量达到一定程度的时候，可以在APP上向很多企业或个人提供广告位，获取广告收益。</p>\n<p>具体的实现形式就是通过<strong>首页轮播图、APP上下方广告推送、文章或视频中广告推送、启动页</strong>等等，很多边边角角都能进行广告的投放，不同的APP种类有不同的广告推送方式。</p>\n<h3 id=\"No-2电商模式\"><a href=\"#No-2电商模式\" class=\"headerlink\" title=\"No.2电商模式\"></a>No.2电商模式</h3><p>就是在APP中帮商家销售商品，比如化妆品、服装、生鲜、电器、家居等，从中<strong>赚取分成</strong>，或者向商家<strong>收取入驻费</strong>。也可以通过APP销售自己的产品，在开发电商模式的APP时，需要实现<strong>产品购物车</strong>、<strong>下单支付</strong>、<strong>客服咨询窗口</strong>等功能。</p>\n<h3 id=\"No-3平台提成模式\"><a href=\"#No-3平台提成模式\" class=\"headerlink\" title=\"No.3平台提成模式\"></a>No.3平台提成模式</h3><p>提成，也称扣点，相当于收取的平台费，常见于一些提供服务平台的APP中。<strong>根据每个商户或者用户赚取的资金或者收到的打赏等，进行平台费用的扣除。</strong>这类平台的抽成大概在30%以内，开发者提供消费用户、平台建设等。</p>\n<h4 id=\"No-4会员增值服务\"><a href=\"#No-4会员增值服务\" class=\"headerlink\" title=\"No.4会员增值服务\"></a>No.4会员增值服务</h4><p>础的APP服务是免费的，但是使用APP养成了一定的使用习惯，想要开启部分VIP功能，<strong>就会针对此VIP功能来进行收费</strong>，或者通过向用户售卖平台会员卡，进行一些套餐或者日常的优惠等，实现盈利。</p>\n<p>例如许多音乐类APP需要用户开通VIP会员来收听付费歌曲，游戏类APP推出升级辅助道具、稀有装备，视频类APP推出“会员超前点播”等等，这些都可以引导用户付费开通或购买，从中赚取收益。</p>\n<h3 id=\"No-5付费阅读下载\"><a href=\"#No-5付费阅读下载\" class=\"headerlink\" title=\"No.5付费阅读下载\"></a>No.5付费阅读下载</h3><p>现在，知识付费已被越来越多的用户所接受。<strong>在信息爆炸的时代，更多的用户愿意通过付费，快捷地获取所需的优质知识，节省时间成本。</strong>付费阅读的模式，让更多的企业实现低成本投入、聚集粉丝、快速变现，适用于自媒体、出版业等，是移动商务快速变现的运营模式之一。</p>\n<h3 id=\"No-6借助第三方平台\"><a href=\"#No-6借助第三方平台\" class=\"headerlink\" title=\"No.6借助第三方平台\"></a>No.6借助第三方平台</h3><p>你可能不是通过打车APP、电影票APP直接购买你需要的，你刚好在微商或者支付宝上看到了，并且如果购买的商品还便宜的话，你毫不犹豫地下手了。<strong>因为你的的购买行为，微信和支付宝成功地将你导向了打车APP、电影票APP等第三方软件，并成功变现。</strong></p>\n<h3 id=\"No-7线下引流\"><a href=\"#No-7线下引流\" class=\"headerlink\" title=\"No.7线下引流\"></a>No.7线下引流</h3><p>有一些实体门店商家，<strong>他们通过APP应用将用户引流至线下门店</strong>，实现转化。比如餐饮行业，就是通过APP应用提供服务，在APP应用中完成点单、付款、外卖配送等。</p>\n<h3 id=\"No-8合伙人招募\"><a href=\"#No-8合伙人招募\" class=\"headerlink\" title=\"No.8合伙人招募\"></a>No.8合伙人招募</h3><p>APP开发后，感觉此APP有发展前途的投资者势必想进行合伙投资，<strong>缴纳一部分费用获得一定的股份</strong>，通过招募合伙人也可以赚钱。当APP做大了，用户多了，肯定会有更加有实力的投资企业上门进行<strong>融资</strong>，这个是最赚钱的了。</p>\n<h2 id=\"风险评估\"><a href=\"#风险评估\" class=\"headerlink\" title=\"风险评估\"></a>风险评估</h2><p><strong>一、需求不明确，沟通有误</strong></p>\n<p>很多时候一些<a href=\"http://www.apppark.cn/\">app开发</a>之所以消耗较多的时间有一部分原因就是在需求沟通上出现了一些问题。即便是在前期需求已经确认的情况下，后期在开发的过程中还是会面临需求更改的问题。尤其是当负责需求对接的人因各种原因被更换时，还可能会出现需求完全改变的情况。</p>\n<p><strong>二、开发人员变动</strong></p>\n<p>基于传统的<a href=\"http://www.apppark.cn/t-2808.html\">app开发方式</a>，app开发在需求确认之初，app开发公司就差不多确定了开发的团队了。因为人事变动等原因，导致团队成员跟之前不一样，如果更换进来的是技术和沟通都比较好的且无碍，不然对开发进度和质量还是有较大影响的。</p>\n<p><strong>三、不能按时交付，或者不能以较好地质量完成交付</strong></p>\n<p>这点主要是针对于app开发公司而言的。在实际的开发场景中，总是会有各种因素导致app延期才能完成，有些时候即便是完成了，到交予客户验收或者上线时出现各种各样的问题。那么对于有相关需求的企业或个人来说，这种情况也是极不愿意遇到的。</p>\n<p>当然了还会有其他的各种大大小小的风险，比如在找app开发公司开发app时会碰到一些不靠谱的公司、开发过程中app开发公司以各种原因加价等。所以如果有app开发的需求但自身没有技术支持的情况之下，一定要对app开发公司的背景资料等多做了解，可以实地探访和沟通需求，然后要注意合同规范和流程规范，调整及承诺等一定要以合同的形式提现。</p>\n<h2 id=\"利益分配\"><a href=\"#利益分配\" class=\"headerlink\" title=\"利益分配\"></a>利益分配</h2><h2 id=\"版权意识\"><a href=\"#版权意识\" class=\"headerlink\" title=\"版权意识\"></a>版权意识</h2><h2 id=\"后期展望\"><a href=\"#后期展望\" class=\"headerlink\" title=\"后期展望\"></a>后期展望</h2>","site":{"data":{}},"more":"<h2 id=\"市场调研\"><a href=\"#市场调研\" class=\"headerlink\" title=\"市场调研\"></a>市场调研</h2><h3 id=\"是否存在竞争对手\"><a href=\"#是否存在竞争对手\" class=\"headerlink\" title=\"是否存在竞争对手\"></a>是否存在竞争对手</h3><h3 id=\"是否有明确的开发方向\"><a href=\"#是否有明确的开发方向\" class=\"headerlink\" title=\"是否有明确的开发方向\"></a>是否有明确的开发方向</h3><h3 id=\"App是否满足需求\"><a href=\"#App是否满足需求\" class=\"headerlink\" title=\"App是否满足需求\"></a>App是否满足需求</h3><h3 id=\"哪些模块近期急需成型\"><a href=\"#哪些模块近期急需成型\" class=\"headerlink\" title=\"哪些模块近期急需成型\"></a>哪些模块近期急需成型</h3><h2 id=\"成本预估\"><a href=\"#成本预估\" class=\"headerlink\" title=\"成本预估\"></a>成本预估</h2><h2 id=\"短期计划书\"><a href=\"#短期计划书\" class=\"headerlink\" title=\"短期计划书\"></a>短期计划书</h2><h3 id=\"1-详细的需求文件\"><a href=\"#1-详细的需求文件\" class=\"headerlink\" title=\"1.详细的需求文件\"></a>1.详细的需求文件</h3><h3 id=\"2-控制前期开发的范围\"><a href=\"#2-控制前期开发的范围\" class=\"headerlink\" title=\"2.控制前期开发的范围\"></a>2.控制前期开发的范围</h3><p>需求文档定义了新系统所需的功能，以便能够在选择阶段关注最重要的部分。</p>\n<p>在实施和培训阶段，需求文档可以很好的帮助你避免范围蔓延。</p>\n<p>范围蔓延是任何项目中都存在的危险，它会增加需求和目标，直到整个项目变得难以控制，混乱不堪，导致你无法交付。</p>\n<p>在软件实施计划的情况下，当你决定一次设置和定制每个功能的所有特点时，范围蔓延就会发生。你必须专注于任务，忠实于你的需求，并让新系统的关键部分投入使用。</p>\n<p>为了避免范围蔓延，你需要对软件实施计划使用一些IT项目管理软件和最佳实践。这里便有几种选择：</p>\n<p>○较大的企业(50名以上员工)可能会采用正式的IT项目管理软件(但这很讽刺，因为理论上你也需要实施这个系统)。<br>○中型企业(11-50名员工)可以通过免费的项目管理工具来帮助管理和分配实施任务。<br>○较小的企业(10人或更少的员工)可以使用人工数字方法来保持有序性。</p>\n<p>这些协作工具将有助于实现团队成员们的协作，能最大限度地提高各自团队的采用率和使用率。8manage IT项目管理软件是其中的优秀代表，其支持时间、资源、成本、风险等方面的管理，有效提高团队协作效率，全面推动你的软件实施成功。</p>\n<h3 id=\"3-分配现实的团队来推动软件实施计划\"><a href=\"#3-分配现实的团队来推动软件实施计划\" class=\"headerlink\" title=\"3.分配现实的团队来推动软件实施计划\"></a>3.分配现实的团队来推动软件实施计划</h3><p>确定需求以及有多少业务单位将使用新系统，估算用户总数。采用软件业务单位/用户越多，实施团队就应该越大。</p>\n<h3 id=\"4-用积极主动的、有吸引力的策略鼓励用户采用\"><a href=\"#4-用积极主动的、有吸引力的策略鼓励用户采用\" class=\"headerlink\" title=\"4.用积极主动的、有吸引力的策略鼓励用户采用\"></a>4.用积极主动的、有吸引力的策略鼓励用户采用</h3><p>你必须制定策略以此来获得用户们对新系统的接受和采用。这里有几个关键步骤，你可以用来实施新的软件：</p>\n<p>○采用经过验证的方法为变更设定指导方针<br>○定义新软件有助于实现的清晰目标<br>○确定新软件解决的痛点是什么，以及去掉痛点的能带来什么最佳结果<br>○针对每个团队的实施采用不同的消息传递和沟通方式</p>\n<h3 id=\"4-注重持续改进\"><a href=\"#4-注重持续改进\" class=\"headerlink\" title=\"4.注重持续改进\"></a>4.注重持续改进</h3><p>培训是持续改进的中心支柱，关键是要避免一刀切的培训，与供应商演示类似，根据干系人的需求定制每个会议。考虑到不是每个用户群体都能够投入相同的时间，因此，要为干系人提供不同的培训选择。</p>\n<h2 id=\"产品策划\"><a href=\"#产品策划\" class=\"headerlink\" title=\"产品策划\"></a>产品策划</h2><h3 id=\"策划书\"><a href=\"#策划书\" class=\"headerlink\" title=\"策划书\"></a>策划书</h3><h4 id=\"通过完备的策划书是否拉取投资\"><a href=\"#通过完备的策划书是否拉取投资\" class=\"headerlink\" title=\"通过完备的策划书是否拉取投资\"></a>通过完备的策划书是否拉取投资</h4><h2 id=\"运营手段\"><a href=\"#运营手段\" class=\"headerlink\" title=\"运营手段\"></a>运营手段</h2><h2 id=\"盈利模式（重点）\"><a href=\"#盈利模式（重点）\" class=\"headerlink\" title=\"盈利模式（重点）\"></a>盈利模式（重点）</h2><p><strong>APP的八种盈利模式</strong></p>\n<p>在了解APP的盈利模式之前，首先要对APP的分类有清晰的认识。一般按照常规化分类可分为<strong>社交类、新闻类、购物类、娱乐类、金融类、生活类、工具类</strong>等。</p>\n<p>每一种分类的受众群体和产品功能不同，但盈利模式却可以通用，如果你想让自己的APP能够赚钱，以下八种方法要好好把握。</p>\n<h3 id=\"No-1广告引流\"><a href=\"#No-1广告引流\" class=\"headerlink\" title=\"No.1广告引流\"></a>No.1广告引流</h3><p>广告是通过以程序化广告为代表的互联网广告技术实现的流量变现，具有重流量，低门槛、灵活可控的特点，几乎适用于全部具有一定流量基础的APP。当应用下载量达到一定程度的时候，可以在APP上向很多企业或个人提供广告位，获取广告收益。</p>\n<p>具体的实现形式就是通过<strong>首页轮播图、APP上下方广告推送、文章或视频中广告推送、启动页</strong>等等，很多边边角角都能进行广告的投放，不同的APP种类有不同的广告推送方式。</p>\n<h3 id=\"No-2电商模式\"><a href=\"#No-2电商模式\" class=\"headerlink\" title=\"No.2电商模式\"></a>No.2电商模式</h3><p>就是在APP中帮商家销售商品，比如化妆品、服装、生鲜、电器、家居等，从中<strong>赚取分成</strong>，或者向商家<strong>收取入驻费</strong>。也可以通过APP销售自己的产品，在开发电商模式的APP时，需要实现<strong>产品购物车</strong>、<strong>下单支付</strong>、<strong>客服咨询窗口</strong>等功能。</p>\n<h3 id=\"No-3平台提成模式\"><a href=\"#No-3平台提成模式\" class=\"headerlink\" title=\"No.3平台提成模式\"></a>No.3平台提成模式</h3><p>提成，也称扣点，相当于收取的平台费，常见于一些提供服务平台的APP中。<strong>根据每个商户或者用户赚取的资金或者收到的打赏等，进行平台费用的扣除。</strong>这类平台的抽成大概在30%以内，开发者提供消费用户、平台建设等。</p>\n<h4 id=\"No-4会员增值服务\"><a href=\"#No-4会员增值服务\" class=\"headerlink\" title=\"No.4会员增值服务\"></a>No.4会员增值服务</h4><p>础的APP服务是免费的，但是使用APP养成了一定的使用习惯，想要开启部分VIP功能，<strong>就会针对此VIP功能来进行收费</strong>，或者通过向用户售卖平台会员卡，进行一些套餐或者日常的优惠等，实现盈利。</p>\n<p>例如许多音乐类APP需要用户开通VIP会员来收听付费歌曲，游戏类APP推出升级辅助道具、稀有装备，视频类APP推出“会员超前点播”等等，这些都可以引导用户付费开通或购买，从中赚取收益。</p>\n<h3 id=\"No-5付费阅读下载\"><a href=\"#No-5付费阅读下载\" class=\"headerlink\" title=\"No.5付费阅读下载\"></a>No.5付费阅读下载</h3><p>现在，知识付费已被越来越多的用户所接受。<strong>在信息爆炸的时代，更多的用户愿意通过付费，快捷地获取所需的优质知识，节省时间成本。</strong>付费阅读的模式，让更多的企业实现低成本投入、聚集粉丝、快速变现，适用于自媒体、出版业等，是移动商务快速变现的运营模式之一。</p>\n<h3 id=\"No-6借助第三方平台\"><a href=\"#No-6借助第三方平台\" class=\"headerlink\" title=\"No.6借助第三方平台\"></a>No.6借助第三方平台</h3><p>你可能不是通过打车APP、电影票APP直接购买你需要的，你刚好在微商或者支付宝上看到了，并且如果购买的商品还便宜的话，你毫不犹豫地下手了。<strong>因为你的的购买行为，微信和支付宝成功地将你导向了打车APP、电影票APP等第三方软件，并成功变现。</strong></p>\n<h3 id=\"No-7线下引流\"><a href=\"#No-7线下引流\" class=\"headerlink\" title=\"No.7线下引流\"></a>No.7线下引流</h3><p>有一些实体门店商家，<strong>他们通过APP应用将用户引流至线下门店</strong>，实现转化。比如餐饮行业，就是通过APP应用提供服务，在APP应用中完成点单、付款、外卖配送等。</p>\n<h3 id=\"No-8合伙人招募\"><a href=\"#No-8合伙人招募\" class=\"headerlink\" title=\"No.8合伙人招募\"></a>No.8合伙人招募</h3><p>APP开发后，感觉此APP有发展前途的投资者势必想进行合伙投资，<strong>缴纳一部分费用获得一定的股份</strong>，通过招募合伙人也可以赚钱。当APP做大了，用户多了，肯定会有更加有实力的投资企业上门进行<strong>融资</strong>，这个是最赚钱的了。</p>\n<h2 id=\"风险评估\"><a href=\"#风险评估\" class=\"headerlink\" title=\"风险评估\"></a>风险评估</h2><p><strong>一、需求不明确，沟通有误</strong></p>\n<p>很多时候一些<a href=\"http://www.apppark.cn/\">app开发</a>之所以消耗较多的时间有一部分原因就是在需求沟通上出现了一些问题。即便是在前期需求已经确认的情况下，后期在开发的过程中还是会面临需求更改的问题。尤其是当负责需求对接的人因各种原因被更换时，还可能会出现需求完全改变的情况。</p>\n<p><strong>二、开发人员变动</strong></p>\n<p>基于传统的<a href=\"http://www.apppark.cn/t-2808.html\">app开发方式</a>，app开发在需求确认之初，app开发公司就差不多确定了开发的团队了。因为人事变动等原因，导致团队成员跟之前不一样，如果更换进来的是技术和沟通都比较好的且无碍，不然对开发进度和质量还是有较大影响的。</p>\n<p><strong>三、不能按时交付，或者不能以较好地质量完成交付</strong></p>\n<p>这点主要是针对于app开发公司而言的。在实际的开发场景中，总是会有各种因素导致app延期才能完成，有些时候即便是完成了，到交予客户验收或者上线时出现各种各样的问题。那么对于有相关需求的企业或个人来说，这种情况也是极不愿意遇到的。</p>\n<p>当然了还会有其他的各种大大小小的风险，比如在找app开发公司开发app时会碰到一些不靠谱的公司、开发过程中app开发公司以各种原因加价等。所以如果有app开发的需求但自身没有技术支持的情况之下，一定要对app开发公司的背景资料等多做了解，可以实地探访和沟通需求，然后要注意合同规范和流程规范，调整及承诺等一定要以合同的形式提现。</p>\n<h2 id=\"利益分配\"><a href=\"#利益分配\" class=\"headerlink\" title=\"利益分配\"></a>利益分配</h2><h2 id=\"版权意识\"><a href=\"#版权意识\" class=\"headerlink\" title=\"版权意识\"></a>版权意识</h2><h2 id=\"后期展望\"><a href=\"#后期展望\" class=\"headerlink\" title=\"后期展望\"></a>后期展望</h2>"},{"title":"晚熟的人","excerpt":"慢热的人，反射弧太长了，在这个快餐时代的爱情里，可能你刚刚开始进入角色，别人就已经想要散了。","index_img":"https://img2.baidu.com/it/u=3268478182,3438419674&fm=253&fmt=auto&app=138&f=JPEG?w=600&h=400","abbrlink":"7abe641c","date":"2023-02-09T15:16:00.000Z","_content":"晚熟的人，我个人理解为慢热的人。慢热是一个汉语词汇，拼音是màn rè。顾名思义就是热的很慢，是对一个人的性格描写。“慢热”指的是做事情需要一个过程才投入。一般是用于对人的态度，需要通过时间累积内心评估逐渐生成好感卸下防备才会慢慢的呈现热情。（释义来自于百度百科）\n\n不管是在生活中，还是感情中，一个人慢热，总会被别人臆想出很多东西。\n\n就像本来你遇见一个人很高兴，准备了一肚子话要说，但可能最后却说出了一句“好久不见”。\n\n于是可能就会被对方安上“高冷”人设，你慢热的节奏，真的会很容易让身边的人觉得你并不喜欢那个集体，也不想融入他们的世界。\n\n#### 其实只有你自己知道，你只是慢半拍，而不是不喜欢。\n因为慢热，你在别人眼里会显得格格不入，会因为一句话，成为一个话题终结者，或者踩到了别人的误区。\n\n你看，其实你的内心并不是那么想的，也是抱着很大的诚意去与别人相处的。\n\n但就因为你的性格，导致你还没开始进入话题，别人就已经不耐烦了。\n\n\n我始终觉得，任何一段关系和感情，都应该是慢慢来的，慢慢相处，慢慢了解，才知道对方真实的脾气和秉性。\n\n可现实是，没人会停下来让你去了解。\n\n你的慢热，就让对方误以为你不喜欢，于是他就赶紧换下一个目标。\n\n#### 不得不说，慢热有时候也是挺好的，可以让你过滤掉一些不真诚的人。\n\n\n我想慢热的人，是学不会快速热情的，因为她做不到违背自己的初心。\n\n那种一开始就各种热情的人，到最后就没有任何激情了，而热情也是因为想要快速达到目的。\n\n可能有时候，你会试着去让自己快速热情起来，于是主动找话题，装作合群，找彼此共同的爱好，寻找感情升温的突破口。\n\n但后来，你发现这样的自己很累，变得不像自己，好的感情不应该是顺其自然，慢慢熟悉了解的吗？\n\n凡事太快开始的感情，就会很快结束，因为彼此没有熟悉了解的过程，一开始全靠激情和新鲜感，但是时间久了，这些就会慢慢消耗完。\n\n#### 慢慢来，这才是一种诚意，可以让你看清对方是什么样子。\n\n经过时间的考验，足以让你彻底了解一个人，知道对方是否适合自己。\n\n我想对于慢热的人来说，“太快”开始始终没有诚意，慢热的人大概永远都没法做到，一开始就对一个人充满激情。\n\n关于感情这件事，从来都只跟那个人有关，跟慢热无关。\n\n一个人真的喜欢你，是会等你慢慢了解自己，爱上自己。他也会花时间和心思来靠近你，让你慢慢喜欢下去。\n\n总结：\n\n爱情，本身应该是慢慢来的，这样才能经得起时间的考验。\n\n生活要慢慢过，爱要慢慢谈，值得的人，始终都会留下。\n\n我们这一生会遇见很多人，不要害怕错过，就急着开始，要按照自己的节奏来，慢慢来没有关系，爱你的人会等你。\n\n慢慢来始终是一种诚意，这样才能比得过细水长流。","source":"_posts/慢热的人.md","raw":"---\ntitle: 晚熟的人\nexcerpt: 慢热的人，反射弧太长了，在这个快餐时代的爱情里，可能你刚刚开始进入角色，别人就已经想要散了。\ncategories:\n  - 随笔\nindex_img: https://img2.baidu.com/it/u=3268478182,3438419674&fm=253&fmt=auto&app=138&f=JPEG?w=600&h=400\nabbrlink: 7abe641c\ndate: 2023-02-09 23:16:00\n---\n晚熟的人，我个人理解为慢热的人。慢热是一个汉语词汇，拼音是màn rè。顾名思义就是热的很慢，是对一个人的性格描写。“慢热”指的是做事情需要一个过程才投入。一般是用于对人的态度，需要通过时间累积内心评估逐渐生成好感卸下防备才会慢慢的呈现热情。（释义来自于百度百科）\n\n不管是在生活中，还是感情中，一个人慢热，总会被别人臆想出很多东西。\n\n就像本来你遇见一个人很高兴，准备了一肚子话要说，但可能最后却说出了一句“好久不见”。\n\n于是可能就会被对方安上“高冷”人设，你慢热的节奏，真的会很容易让身边的人觉得你并不喜欢那个集体，也不想融入他们的世界。\n\n#### 其实只有你自己知道，你只是慢半拍，而不是不喜欢。\n因为慢热，你在别人眼里会显得格格不入，会因为一句话，成为一个话题终结者，或者踩到了别人的误区。\n\n你看，其实你的内心并不是那么想的，也是抱着很大的诚意去与别人相处的。\n\n但就因为你的性格，导致你还没开始进入话题，别人就已经不耐烦了。\n\n\n我始终觉得，任何一段关系和感情，都应该是慢慢来的，慢慢相处，慢慢了解，才知道对方真实的脾气和秉性。\n\n可现实是，没人会停下来让你去了解。\n\n你的慢热，就让对方误以为你不喜欢，于是他就赶紧换下一个目标。\n\n#### 不得不说，慢热有时候也是挺好的，可以让你过滤掉一些不真诚的人。\n\n\n我想慢热的人，是学不会快速热情的，因为她做不到违背自己的初心。\n\n那种一开始就各种热情的人，到最后就没有任何激情了，而热情也是因为想要快速达到目的。\n\n可能有时候，你会试着去让自己快速热情起来，于是主动找话题，装作合群，找彼此共同的爱好，寻找感情升温的突破口。\n\n但后来，你发现这样的自己很累，变得不像自己，好的感情不应该是顺其自然，慢慢熟悉了解的吗？\n\n凡事太快开始的感情，就会很快结束，因为彼此没有熟悉了解的过程，一开始全靠激情和新鲜感，但是时间久了，这些就会慢慢消耗完。\n\n#### 慢慢来，这才是一种诚意，可以让你看清对方是什么样子。\n\n经过时间的考验，足以让你彻底了解一个人，知道对方是否适合自己。\n\n我想对于慢热的人来说，“太快”开始始终没有诚意，慢热的人大概永远都没法做到，一开始就对一个人充满激情。\n\n关于感情这件事，从来都只跟那个人有关，跟慢热无关。\n\n一个人真的喜欢你，是会等你慢慢了解自己，爱上自己。他也会花时间和心思来靠近你，让你慢慢喜欢下去。\n\n总结：\n\n爱情，本身应该是慢慢来的，这样才能经得起时间的考验。\n\n生活要慢慢过，爱要慢慢谈，值得的人，始终都会留下。\n\n我们这一生会遇见很多人，不要害怕错过，就急着开始，要按照自己的节奏来，慢慢来没有关系，爱你的人会等你。\n\n慢慢来始终是一种诚意，这样才能比得过细水长流。","slug":"慢热的人","published":1,"updated":"2023-02-09T15:27:30.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clhrpaiao001deq6q1i9014e1","content":"<p>晚熟的人，我个人理解为慢热的人。慢热是一个汉语词汇，拼音是màn rè。顾名思义就是热的很慢，是对一个人的性格描写。“慢热”指的是做事情需要一个过程才投入。一般是用于对人的态度，需要通过时间累积内心评估逐渐生成好感卸下防备才会慢慢的呈现热情。（释义来自于百度百科）</p>\n<p>不管是在生活中，还是感情中，一个人慢热，总会被别人臆想出很多东西。</p>\n<p>就像本来你遇见一个人很高兴，准备了一肚子话要说，但可能最后却说出了一句“好久不见”。</p>\n<p>于是可能就会被对方安上“高冷”人设，你慢热的节奏，真的会很容易让身边的人觉得你并不喜欢那个集体，也不想融入他们的世界。</p>\n<h4 id=\"其实只有你自己知道，你只是慢半拍，而不是不喜欢。\"><a href=\"#其实只有你自己知道，你只是慢半拍，而不是不喜欢。\" class=\"headerlink\" title=\"其实只有你自己知道，你只是慢半拍，而不是不喜欢。\"></a>其实只有你自己知道，你只是慢半拍，而不是不喜欢。</h4><p>因为慢热，你在别人眼里会显得格格不入，会因为一句话，成为一个话题终结者，或者踩到了别人的误区。</p>\n<p>你看，其实你的内心并不是那么想的，也是抱着很大的诚意去与别人相处的。</p>\n<p>但就因为你的性格，导致你还没开始进入话题，别人就已经不耐烦了。</p>\n<p>我始终觉得，任何一段关系和感情，都应该是慢慢来的，慢慢相处，慢慢了解，才知道对方真实的脾气和秉性。</p>\n<p>可现实是，没人会停下来让你去了解。</p>\n<p>你的慢热，就让对方误以为你不喜欢，于是他就赶紧换下一个目标。</p>\n<h4 id=\"不得不说，慢热有时候也是挺好的，可以让你过滤掉一些不真诚的人。\"><a href=\"#不得不说，慢热有时候也是挺好的，可以让你过滤掉一些不真诚的人。\" class=\"headerlink\" title=\"不得不说，慢热有时候也是挺好的，可以让你过滤掉一些不真诚的人。\"></a>不得不说，慢热有时候也是挺好的，可以让你过滤掉一些不真诚的人。</h4><p>我想慢热的人，是学不会快速热情的，因为她做不到违背自己的初心。</p>\n<p>那种一开始就各种热情的人，到最后就没有任何激情了，而热情也是因为想要快速达到目的。</p>\n<p>可能有时候，你会试着去让自己快速热情起来，于是主动找话题，装作合群，找彼此共同的爱好，寻找感情升温的突破口。</p>\n<p>但后来，你发现这样的自己很累，变得不像自己，好的感情不应该是顺其自然，慢慢熟悉了解的吗？</p>\n<p>凡事太快开始的感情，就会很快结束，因为彼此没有熟悉了解的过程，一开始全靠激情和新鲜感，但是时间久了，这些就会慢慢消耗完。</p>\n<h4 id=\"慢慢来，这才是一种诚意，可以让你看清对方是什么样子。\"><a href=\"#慢慢来，这才是一种诚意，可以让你看清对方是什么样子。\" class=\"headerlink\" title=\"慢慢来，这才是一种诚意，可以让你看清对方是什么样子。\"></a>慢慢来，这才是一种诚意，可以让你看清对方是什么样子。</h4><p>经过时间的考验，足以让你彻底了解一个人，知道对方是否适合自己。</p>\n<p>我想对于慢热的人来说，“太快”开始始终没有诚意，慢热的人大概永远都没法做到，一开始就对一个人充满激情。</p>\n<p>关于感情这件事，从来都只跟那个人有关，跟慢热无关。</p>\n<p>一个人真的喜欢你，是会等你慢慢了解自己，爱上自己。他也会花时间和心思来靠近你，让你慢慢喜欢下去。</p>\n<p>总结：</p>\n<p>爱情，本身应该是慢慢来的，这样才能经得起时间的考验。</p>\n<p>生活要慢慢过，爱要慢慢谈，值得的人，始终都会留下。</p>\n<p>我们这一生会遇见很多人，不要害怕错过，就急着开始，要按照自己的节奏来，慢慢来没有关系，爱你的人会等你。</p>\n<p>慢慢来始终是一种诚意，这样才能比得过细水长流。</p>\n","site":{"data":{}},"more":"<p>晚熟的人，我个人理解为慢热的人。慢热是一个汉语词汇，拼音是màn rè。顾名思义就是热的很慢，是对一个人的性格描写。“慢热”指的是做事情需要一个过程才投入。一般是用于对人的态度，需要通过时间累积内心评估逐渐生成好感卸下防备才会慢慢的呈现热情。（释义来自于百度百科）</p>\n<p>不管是在生活中，还是感情中，一个人慢热，总会被别人臆想出很多东西。</p>\n<p>就像本来你遇见一个人很高兴，准备了一肚子话要说，但可能最后却说出了一句“好久不见”。</p>\n<p>于是可能就会被对方安上“高冷”人设，你慢热的节奏，真的会很容易让身边的人觉得你并不喜欢那个集体，也不想融入他们的世界。</p>\n<h4 id=\"其实只有你自己知道，你只是慢半拍，而不是不喜欢。\"><a href=\"#其实只有你自己知道，你只是慢半拍，而不是不喜欢。\" class=\"headerlink\" title=\"其实只有你自己知道，你只是慢半拍，而不是不喜欢。\"></a>其实只有你自己知道，你只是慢半拍，而不是不喜欢。</h4><p>因为慢热，你在别人眼里会显得格格不入，会因为一句话，成为一个话题终结者，或者踩到了别人的误区。</p>\n<p>你看，其实你的内心并不是那么想的，也是抱着很大的诚意去与别人相处的。</p>\n<p>但就因为你的性格，导致你还没开始进入话题，别人就已经不耐烦了。</p>\n<p>我始终觉得，任何一段关系和感情，都应该是慢慢来的，慢慢相处，慢慢了解，才知道对方真实的脾气和秉性。</p>\n<p>可现实是，没人会停下来让你去了解。</p>\n<p>你的慢热，就让对方误以为你不喜欢，于是他就赶紧换下一个目标。</p>\n<h4 id=\"不得不说，慢热有时候也是挺好的，可以让你过滤掉一些不真诚的人。\"><a href=\"#不得不说，慢热有时候也是挺好的，可以让你过滤掉一些不真诚的人。\" class=\"headerlink\" title=\"不得不说，慢热有时候也是挺好的，可以让你过滤掉一些不真诚的人。\"></a>不得不说，慢热有时候也是挺好的，可以让你过滤掉一些不真诚的人。</h4><p>我想慢热的人，是学不会快速热情的，因为她做不到违背自己的初心。</p>\n<p>那种一开始就各种热情的人，到最后就没有任何激情了，而热情也是因为想要快速达到目的。</p>\n<p>可能有时候，你会试着去让自己快速热情起来，于是主动找话题，装作合群，找彼此共同的爱好，寻找感情升温的突破口。</p>\n<p>但后来，你发现这样的自己很累，变得不像自己，好的感情不应该是顺其自然，慢慢熟悉了解的吗？</p>\n<p>凡事太快开始的感情，就会很快结束，因为彼此没有熟悉了解的过程，一开始全靠激情和新鲜感，但是时间久了，这些就会慢慢消耗完。</p>\n<h4 id=\"慢慢来，这才是一种诚意，可以让你看清对方是什么样子。\"><a href=\"#慢慢来，这才是一种诚意，可以让你看清对方是什么样子。\" class=\"headerlink\" title=\"慢慢来，这才是一种诚意，可以让你看清对方是什么样子。\"></a>慢慢来，这才是一种诚意，可以让你看清对方是什么样子。</h4><p>经过时间的考验，足以让你彻底了解一个人，知道对方是否适合自己。</p>\n<p>我想对于慢热的人来说，“太快”开始始终没有诚意，慢热的人大概永远都没法做到，一开始就对一个人充满激情。</p>\n<p>关于感情这件事，从来都只跟那个人有关，跟慢热无关。</p>\n<p>一个人真的喜欢你，是会等你慢慢了解自己，爱上自己。他也会花时间和心思来靠近你，让你慢慢喜欢下去。</p>\n<p>总结：</p>\n<p>爱情，本身应该是慢慢来的，这样才能经得起时间的考验。</p>\n<p>生活要慢慢过，爱要慢慢谈，值得的人，始终都会留下。</p>\n<p>我们这一生会遇见很多人，不要害怕错过，就急着开始，要按照自己的节奏来，慢慢来没有关系，爱你的人会等你。</p>\n<p>慢慢来始终是一种诚意，这样才能比得过细水长流。</p>\n"},{"title":"我有一只猫","excerpt":"我相信，每只猫都有魔法，我始终弄不明白的是：到底是我收养了猫，还是猫她恩准了我进入她的生活。据说，要是你喜欢猫，是因为你想爱一个人;你更喜欢狗，是因为你渴望被人爱","index_img":"https://img2.baidu.com/it/u=2324838428,2038826185&fm=253&fmt=auto&app=138&f=JPEG?w=500&h=556","abbrlink":"295de697","date":"2023-05-13T15:27:55.000Z","_content":"\n2022年4月12日我购买了人生当中第一只属于自己的猫咪，并给它起了名字元元，寓意着以后它会元气满满。\n\n第一次见它的时候，它是一窝小猫最小的。嘴巴那里因为猫癣好几处没有毛，一个人静静的睡在猫砂盆里看的怪心疼。看到我时，它在使劲对我喵喵叫(它选择了我)\n![](https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202305141322694.jpg)\n这是元元和它的弟弟点点在一起睡觉，点点是一只银渐层弟弟，去接它的时候那天貌似在下雨。后来种种原因点点被别人抱走了，到现在我还是很想念点点。\n![](https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202305141322657.jpg)\n\n\n\n下面展示一下猪咪的日常生活\n\n{% gi 6 3-3 %}\n\n![](https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202305141318894.jpg)\n\n![](https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202305141318019.jpg)\n\n![](https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202305141318073.jpg)\n\n![](https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202305141318116.jpg)\n\n![](https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202305141318162.jpg)\n![](https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202305141318201.jpg)\n{% endgi %}\n\n小猫咪又不上班，不吃了睡睡了吃还能干嘛\n{% gi 6 3-3 %}\n![](https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202305141318240.jpg)\n![](https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202305141318278.jpg)\n![](https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202305141318318.jpg)\n![](https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202305141318362.jpg)\n![](https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202305141318396.jpg)\n![](https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202305141318442.jpg)\n{% endgi %}\n\n它似乎没预料到自己会有十几天见不到我，由于过年回家。它第一次成了留守儿童，似乎和上门喂养的小哥哥相处的不错\n![](https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202305141318669.jpg)","source":"_posts/我有一只猫.md","raw":"---\ntitle: 我有一只猫\nexcerpt: 我相信，每只猫都有魔法，我始终弄不明白的是：到底是我收养了猫，还是猫她恩准了我进入她的生活。据说，要是你喜欢猫，是因为你想爱一个人;你更喜欢狗，是因为你渴望被人爱\ntags:\n  - 猫咪\ncategories:\n  - 杂谈\nindex_img: https://img2.baidu.com/it/u=2324838428,2038826185&fm=253&fmt=auto&app=138&f=JPEG?w=500&h=556\nabbrlink: 295de697\ndate: 2023-05-13 23:27:55\n---\n\n2022年4月12日我购买了人生当中第一只属于自己的猫咪，并给它起了名字元元，寓意着以后它会元气满满。\n\n第一次见它的时候，它是一窝小猫最小的。嘴巴那里因为猫癣好几处没有毛，一个人静静的睡在猫砂盆里看的怪心疼。看到我时，它在使劲对我喵喵叫(它选择了我)\n![](https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202305141322694.jpg)\n这是元元和它的弟弟点点在一起睡觉，点点是一只银渐层弟弟，去接它的时候那天貌似在下雨。后来种种原因点点被别人抱走了，到现在我还是很想念点点。\n![](https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202305141322657.jpg)\n\n\n\n下面展示一下猪咪的日常生活\n\n{% gi 6 3-3 %}\n\n![](https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202305141318894.jpg)\n\n![](https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202305141318019.jpg)\n\n![](https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202305141318073.jpg)\n\n![](https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202305141318116.jpg)\n\n![](https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202305141318162.jpg)\n![](https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202305141318201.jpg)\n{% endgi %}\n\n小猫咪又不上班，不吃了睡睡了吃还能干嘛\n{% gi 6 3-3 %}\n![](https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202305141318240.jpg)\n![](https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202305141318278.jpg)\n![](https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202305141318318.jpg)\n![](https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202305141318362.jpg)\n![](https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202305141318396.jpg)\n![](https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202305141318442.jpg)\n{% endgi %}\n\n它似乎没预料到自己会有十几天见不到我，由于过年回家。它第一次成了留守儿童，似乎和上门喂养的小哥哥相处的不错\n![](https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202305141318669.jpg)","slug":"我有一只猫","published":1,"updated":"2023-05-15T05:01:23.668Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clhrpaiaq001geq6qhigj7m6v","content":"<p>2022年4月12日我购买了人生当中第一只属于自己的猫咪，并给它起了名字元元，寓意着以后它会元气满满。</p>\n<p>第一次见它的时候，它是一窝小猫最小的。嘴巴那里因为猫癣好几处没有毛，一个人静静的睡在猫砂盆里看的怪心疼。看到我时，它在使劲对我喵喵叫(它选择了我)<br><img src=\"https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202305141322694.jpg\"><br>这是元元和它的弟弟点点在一起睡觉，点点是一只银渐层弟弟，去接它的时候那天貌似在下雨。后来种种原因点点被别人抱走了，到现在我还是很想念点点。<br><img src=\"https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202305141322657.jpg\"></p>\n<p>下面展示一下猪咪的日常生活</p>\n<div class=\"group-image-container\"><div class=\"group-image-row\"><div class=\"group-image-wrap\"><img src=\"https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202305141318894.jpg\"></div><div class=\"group-image-wrap\"><img src=\"https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202305141318019.jpg\"></div><div class=\"group-image-wrap\"><img src=\"https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202305141318073.jpg\"></div></div><div class=\"group-image-row\"><div class=\"group-image-wrap\"><img src=\"https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202305141318116.jpg\"></div><div class=\"group-image-wrap\"><img src=\"https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202305141318162.jpg\"></div><div class=\"group-image-wrap\"><img src=\"https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202305141318201.jpg\"></div></div></div>\n\n<p>小猫咪又不上班，不吃了睡睡了吃还能干嘛</p>\n<div class=\"group-image-container\"><div class=\"group-image-row\"><div class=\"group-image-wrap\"><img src=\"https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202305141318240.jpg\"></div><div class=\"group-image-wrap\"><img src=\"https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202305141318278.jpg\"></div><div class=\"group-image-wrap\"><img src=\"https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202305141318318.jpg\"></div></div><div class=\"group-image-row\"><div class=\"group-image-wrap\"><img src=\"https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202305141318362.jpg\"></div><div class=\"group-image-wrap\"><img src=\"https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202305141318396.jpg\"></div><div class=\"group-image-wrap\"><img src=\"https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202305141318442.jpg\"></div></div></div>\n\n<p>它似乎没预料到自己会有十几天见不到我，由于过年回家。它第一次成了留守儿童，似乎和上门喂养的小哥哥相处的不错<br><img src=\"https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202305141318669.jpg\"></p>\n","site":{"data":{}},"more":"<p>2022年4月12日我购买了人生当中第一只属于自己的猫咪，并给它起了名字元元，寓意着以后它会元气满满。</p>\n<p>第一次见它的时候，它是一窝小猫最小的。嘴巴那里因为猫癣好几处没有毛，一个人静静的睡在猫砂盆里看的怪心疼。看到我时，它在使劲对我喵喵叫(它选择了我)<br><img src=\"https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202305141322694.jpg\"><br>这是元元和它的弟弟点点在一起睡觉，点点是一只银渐层弟弟，去接它的时候那天貌似在下雨。后来种种原因点点被别人抱走了，到现在我还是很想念点点。<br><img src=\"https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202305141322657.jpg\"></p>\n<p>下面展示一下猪咪的日常生活</p>\n<div class=\"group-image-container\"><div class=\"group-image-row\"><div class=\"group-image-wrap\"><img src=\"https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202305141318894.jpg\"></div><div class=\"group-image-wrap\"><img src=\"https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202305141318019.jpg\"></div><div class=\"group-image-wrap\"><img src=\"https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202305141318073.jpg\"></div></div><div class=\"group-image-row\"><div class=\"group-image-wrap\"><img src=\"https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202305141318116.jpg\"></div><div class=\"group-image-wrap\"><img src=\"https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202305141318162.jpg\"></div><div class=\"group-image-wrap\"><img src=\"https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202305141318201.jpg\"></div></div></div>\n\n<p>小猫咪又不上班，不吃了睡睡了吃还能干嘛</p>\n<div class=\"group-image-container\"><div class=\"group-image-row\"><div class=\"group-image-wrap\"><img src=\"https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202305141318240.jpg\"></div><div class=\"group-image-wrap\"><img src=\"https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202305141318278.jpg\"></div><div class=\"group-image-wrap\"><img src=\"https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202305141318318.jpg\"></div></div><div class=\"group-image-row\"><div class=\"group-image-wrap\"><img src=\"https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202305141318362.jpg\"></div><div class=\"group-image-wrap\"><img src=\"https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202305141318396.jpg\"></div><div class=\"group-image-wrap\"><img src=\"https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202305141318442.jpg\"></div></div></div>\n\n<p>它似乎没预料到自己会有十几天见不到我，由于过年回家。它第一次成了留守儿童，似乎和上门喂养的小哥哥相处的不错<br><img src=\"https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/202305141318669.jpg\"></p>\n"},{"title":"最近有点抑郁","excerpt":"生活少了一把烈火，枯燥的日子平平无奇","index_img":"https://img0.baidu.com/it/u=2750091542,437438719&fm=253&fmt=auto&app=138&f=JPEG?w=500&h=500","abbrlink":"7bc1b8ad","date":"2023-04-24T16:09:49.000Z","_content":"经历漫长的找工作经历后，期间养成的熬夜习惯让自己经常报复性熬夜，加之一直失眠让自己精神感觉快要奔溃了。如果不是有猫咪在的话，我想大概可能是会疯掉的。新公司似乎不是那么一切顺利，虽然同事都很好但是由于其独特的放假模式让人有点恼火。\n\n不太好适应现有的环境，有句话讲：不能适应环境，就会被环境淘汰。虽然自己很认同这个观点，但是还是一直摆烂提不起一点斗志。有次很认真的在思考一个问题，无意义的计划只会让自己平白无故的浪费时间。把控不了时间，一天快要过去的时候特别是深夜时候总会很自责，感叹自己浪费时间虚度光阴。\n\n幸好有博士的加入，让自己的生活变得有趣了很多，五一我们探寻了很多北京有名的博物馆以及很多书店。或许现在所担忧的其实也算不上什么，被父母不理解、被人骚扰、莫名其妙的物欲、以及紧缺的资金等等想想并不能打到自己。生活还要继续，无论自己多么不堪总归会有人喜欢自己。\n\n总会好起来的，即使前方道路困难重重。\n\n完。","source":"_posts/最近有点抑郁.md","raw":"---\ntitle: 最近有点抑郁\nexcerpt: 生活少了一把烈火，枯燥的日子平平无奇\ncategories:\n  - 杂谈\nindex_img: https://img0.baidu.com/it/u=2750091542,437438719&fm=253&fmt=auto&app=138&f=JPEG?w=500&h=500\nabbrlink: 7bc1b8ad\ndate: 2023-04-25 00:09:49\n---\n经历漫长的找工作经历后，期间养成的熬夜习惯让自己经常报复性熬夜，加之一直失眠让自己精神感觉快要奔溃了。如果不是有猫咪在的话，我想大概可能是会疯掉的。新公司似乎不是那么一切顺利，虽然同事都很好但是由于其独特的放假模式让人有点恼火。\n\n不太好适应现有的环境，有句话讲：不能适应环境，就会被环境淘汰。虽然自己很认同这个观点，但是还是一直摆烂提不起一点斗志。有次很认真的在思考一个问题，无意义的计划只会让自己平白无故的浪费时间。把控不了时间，一天快要过去的时候特别是深夜时候总会很自责，感叹自己浪费时间虚度光阴。\n\n幸好有博士的加入，让自己的生活变得有趣了很多，五一我们探寻了很多北京有名的博物馆以及很多书店。或许现在所担忧的其实也算不上什么，被父母不理解、被人骚扰、莫名其妙的物欲、以及紧缺的资金等等想想并不能打到自己。生活还要继续，无论自己多么不堪总归会有人喜欢自己。\n\n总会好起来的，即使前方道路困难重重。\n\n完。","slug":"最近有点抑郁","published":1,"updated":"2023-05-15T05:01:23.670Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clhrpaiaq001ieq6q0rr06m4r","content":"<p>经历漫长的找工作经历后，期间养成的熬夜习惯让自己经常报复性熬夜，加之一直失眠让自己精神感觉快要奔溃了。如果不是有猫咪在的话，我想大概可能是会疯掉的。新公司似乎不是那么一切顺利，虽然同事都很好但是由于其独特的放假模式让人有点恼火。</p>\n<p>不太好适应现有的环境，有句话讲：不能适应环境，就会被环境淘汰。虽然自己很认同这个观点，但是还是一直摆烂提不起一点斗志。有次很认真的在思考一个问题，无意义的计划只会让自己平白无故的浪费时间。把控不了时间，一天快要过去的时候特别是深夜时候总会很自责，感叹自己浪费时间虚度光阴。</p>\n<p>幸好有博士的加入，让自己的生活变得有趣了很多，五一我们探寻了很多北京有名的博物馆以及很多书店。或许现在所担忧的其实也算不上什么，被父母不理解、被人骚扰、莫名其妙的物欲、以及紧缺的资金等等想想并不能打到自己。生活还要继续，无论自己多么不堪总归会有人喜欢自己。</p>\n<p>总会好起来的，即使前方道路困难重重。</p>\n<p>完。</p>\n","site":{"data":{}},"more":"<p>经历漫长的找工作经历后，期间养成的熬夜习惯让自己经常报复性熬夜，加之一直失眠让自己精神感觉快要奔溃了。如果不是有猫咪在的话，我想大概可能是会疯掉的。新公司似乎不是那么一切顺利，虽然同事都很好但是由于其独特的放假模式让人有点恼火。</p>\n<p>不太好适应现有的环境，有句话讲：不能适应环境，就会被环境淘汰。虽然自己很认同这个观点，但是还是一直摆烂提不起一点斗志。有次很认真的在思考一个问题，无意义的计划只会让自己平白无故的浪费时间。把控不了时间，一天快要过去的时候特别是深夜时候总会很自责，感叹自己浪费时间虚度光阴。</p>\n<p>幸好有博士的加入，让自己的生活变得有趣了很多，五一我们探寻了很多北京有名的博物馆以及很多书店。或许现在所担忧的其实也算不上什么，被父母不理解、被人骚扰、莫名其妙的物欲、以及紧缺的资金等等想想并不能打到自己。生活还要继续，无论自己多么不堪总归会有人喜欢自己。</p>\n<p>总会好起来的，即使前方道路困难重重。</p>\n<p>完。</p>\n"},{"title":"如何做好新冠疫情个人防护","author":"king","abbrlink":"7bcc2bc0","date":"2023-01-12T15:02:04.000Z","index_img":"https://img2.baidu.com/it/u=2072731459,2805550619&fm=253&fmt=auto&app=120&f=JPEG?w=640&h=413","_content":"当前的新冠肺炎疫情防控形势严峻复杂，全国上下不断加强疫情防控力度。疫情防控中的个人防护显得尤为重要，接下来，让我们一起来了解一下，由中国疾控中心发布的：公众应如何做好新冠疫情的个人防护。\n1. 公众日常生活中和出行时应正确佩戴一个一次性使用医用口罩或以上防护级别口罩并做好手卫生、遵守呼吸道礼仪。无需佩戴多个口罩或带呼吸阀的口罩，无需穿防护服。\n\n2. 召开会议时，应有效通风换气且社交距离1米以上。不应在人员拥挤、通风不良时仍不佩戴口罩。\n\n3. 无疑似/确诊病例时，居家环境清洁应以日常清洁通风为主，无需每日消毒。\n\n4. 超市购物缴费时，应间隔一米排队，戴好口罩，首选无接触支付。\n\n5. 乘坐轿厢式电梯时，应全程佩戴口罩、间隔站立并遵守呼吸道礼仪。\n\n6. 家长陪小朋友玩耍时，应培养孩子手卫生意识，及时纠正儿童吃手和玩具的不良习惯，并定时清洁双手和玩具。\n\n7. 乘坐公交车或地铁时，可佩戴手套，减少触摸公共部位，不要触碰口鼻眼。\n\n8. 用餐前，应在流动水下用洗手液或肥皂洗手，或用免洗手消毒剂揉搓双手。不应不洗手，直接用手抓取食物。\n\n9. 咳嗽打喷嚏时，应用纸巾遮住口鼻，然后将纸巾包好后置于垃圾桶内或采用肘臂遮挡。不应随地吐痰、用手捂或直接对他人咳嗽、打喷嚏。","source":"_posts/疫情防护.md","raw":"---\ntitle: 如何做好新冠疫情个人防护\nauthor: king\nabbrlink: 7bcc2bc0\ndate: 2023-01-12 23:02:04\nindex_img: https://img2.baidu.com/it/u=2072731459,2805550619&fm=253&fmt=auto&app=120&f=JPEG?w=640&h=413\n---\n当前的新冠肺炎疫情防控形势严峻复杂，全国上下不断加强疫情防控力度。疫情防控中的个人防护显得尤为重要，接下来，让我们一起来了解一下，由中国疾控中心发布的：公众应如何做好新冠疫情的个人防护。\n1. 公众日常生活中和出行时应正确佩戴一个一次性使用医用口罩或以上防护级别口罩并做好手卫生、遵守呼吸道礼仪。无需佩戴多个口罩或带呼吸阀的口罩，无需穿防护服。\n\n2. 召开会议时，应有效通风换气且社交距离1米以上。不应在人员拥挤、通风不良时仍不佩戴口罩。\n\n3. 无疑似/确诊病例时，居家环境清洁应以日常清洁通风为主，无需每日消毒。\n\n4. 超市购物缴费时，应间隔一米排队，戴好口罩，首选无接触支付。\n\n5. 乘坐轿厢式电梯时，应全程佩戴口罩、间隔站立并遵守呼吸道礼仪。\n\n6. 家长陪小朋友玩耍时，应培养孩子手卫生意识，及时纠正儿童吃手和玩具的不良习惯，并定时清洁双手和玩具。\n\n7. 乘坐公交车或地铁时，可佩戴手套，减少触摸公共部位，不要触碰口鼻眼。\n\n8. 用餐前，应在流动水下用洗手液或肥皂洗手，或用免洗手消毒剂揉搓双手。不应不洗手，直接用手抓取食物。\n\n9. 咳嗽打喷嚏时，应用纸巾遮住口鼻，然后将纸巾包好后置于垃圾桶内或采用肘臂遮挡。不应随地吐痰、用手捂或直接对他人咳嗽、打喷嚏。","slug":"疫情防护","published":1,"updated":"2023-01-31T16:23:08.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clhrpaiat001meq6q3ow6ekiy","content":"<p>当前的新冠肺炎疫情防控形势严峻复杂，全国上下不断加强疫情防控力度。疫情防控中的个人防护显得尤为重要，接下来，让我们一起来了解一下，由中国疾控中心发布的：公众应如何做好新冠疫情的个人防护。</p>\n<ol>\n<li><p>公众日常生活中和出行时应正确佩戴一个一次性使用医用口罩或以上防护级别口罩并做好手卫生、遵守呼吸道礼仪。无需佩戴多个口罩或带呼吸阀的口罩，无需穿防护服。</p>\n</li>\n<li><p>召开会议时，应有效通风换气且社交距离1米以上。不应在人员拥挤、通风不良时仍不佩戴口罩。</p>\n</li>\n<li><p>无疑似/确诊病例时，居家环境清洁应以日常清洁通风为主，无需每日消毒。</p>\n</li>\n<li><p>超市购物缴费时，应间隔一米排队，戴好口罩，首选无接触支付。</p>\n</li>\n<li><p>乘坐轿厢式电梯时，应全程佩戴口罩、间隔站立并遵守呼吸道礼仪。</p>\n</li>\n<li><p>家长陪小朋友玩耍时，应培养孩子手卫生意识，及时纠正儿童吃手和玩具的不良习惯，并定时清洁双手和玩具。</p>\n</li>\n<li><p>乘坐公交车或地铁时，可佩戴手套，减少触摸公共部位，不要触碰口鼻眼。</p>\n</li>\n<li><p>用餐前，应在流动水下用洗手液或肥皂洗手，或用免洗手消毒剂揉搓双手。不应不洗手，直接用手抓取食物。</p>\n</li>\n<li><p>咳嗽打喷嚏时，应用纸巾遮住口鼻，然后将纸巾包好后置于垃圾桶内或采用肘臂遮挡。不应随地吐痰、用手捂或直接对他人咳嗽、打喷嚏。</p>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<p>当前的新冠肺炎疫情防控形势严峻复杂，全国上下不断加强疫情防控力度。疫情防控中的个人防护显得尤为重要，接下来，让我们一起来了解一下，由中国疾控中心发布的：公众应如何做好新冠疫情的个人防护。</p>\n<ol>\n<li><p>公众日常生活中和出行时应正确佩戴一个一次性使用医用口罩或以上防护级别口罩并做好手卫生、遵守呼吸道礼仪。无需佩戴多个口罩或带呼吸阀的口罩，无需穿防护服。</p>\n</li>\n<li><p>召开会议时，应有效通风换气且社交距离1米以上。不应在人员拥挤、通风不良时仍不佩戴口罩。</p>\n</li>\n<li><p>无疑似/确诊病例时，居家环境清洁应以日常清洁通风为主，无需每日消毒。</p>\n</li>\n<li><p>超市购物缴费时，应间隔一米排队，戴好口罩，首选无接触支付。</p>\n</li>\n<li><p>乘坐轿厢式电梯时，应全程佩戴口罩、间隔站立并遵守呼吸道礼仪。</p>\n</li>\n<li><p>家长陪小朋友玩耍时，应培养孩子手卫生意识，及时纠正儿童吃手和玩具的不良习惯，并定时清洁双手和玩具。</p>\n</li>\n<li><p>乘坐公交车或地铁时，可佩戴手套，减少触摸公共部位，不要触碰口鼻眼。</p>\n</li>\n<li><p>用餐前，应在流动水下用洗手液或肥皂洗手，或用免洗手消毒剂揉搓双手。不应不洗手，直接用手抓取食物。</p>\n</li>\n<li><p>咳嗽打喷嚏时，应用纸巾遮住口鼻，然后将纸巾包好后置于垃圾桶内或采用肘臂遮挡。不应随地吐痰、用手捂或直接对他人咳嗽、打喷嚏。</p>\n</li>\n</ol>\n"},{"title":"过自己想要的生活","author":"king","sticky":100,"top":true,"intro":"人生只有一次，过自己想要的生活，这比什么都重要，也才是人生最高级的智慧。","abbrlink":"30efca60","date":"2020-08-30T07:43:53.000Z","index_img":"https://img0.baidu.com/it/u=2560478483,3292517657&fm=253&fmt=auto&app=120&f=JPEG?w=650&h=404","comment":true,"_content":"\n每个人都有权力过自己想要的生活，喜欢想喜欢的人，做自己想做的事，不辜负自己也不辜负别人。\n\n\n余生，过自己想要的生活，\n\n在能力范围内，选择喜欢的方式，\n\n活着有太多的身不由己了，\n\n可以选择的时候，别委屈自己，\n\n每一个人都有属于自己的人生，\n\n生活，没必要模仿别人的节奏，\n\n幸福和快乐，向来是源于内心，\n\n你有你的美好，他自有他的精彩。\n","source":"_posts/过自己想要的生活.md","raw":"---\ntitle: 过自己想要的生活\nauthor: king\nsticky: 100\ntop: true\nintro: 人生只有一次，过自己想要的生活，这比什么都重要，也才是人生最高级的智慧。\nabbrlink: 30efca60\ndate: 2020-08-30 15:43:53\nindex_img: https://img0.baidu.com/it/u=2560478483,3292517657&fm=253&fmt=auto&app=120&f=JPEG?w=650&h=404\ncomment: true\n---\n\n每个人都有权力过自己想要的生活，喜欢想喜欢的人，做自己想做的事，不辜负自己也不辜负别人。\n\n\n余生，过自己想要的生活，\n\n在能力范围内，选择喜欢的方式，\n\n活着有太多的身不由己了，\n\n可以选择的时候，别委屈自己，\n\n每一个人都有属于自己的人生，\n\n生活，没必要模仿别人的节奏，\n\n幸福和快乐，向来是源于内心，\n\n你有你的美好，他自有他的精彩。\n","slug":"过自己想要的生活","published":1,"updated":"2023-05-15T05:01:23.671Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clhrpaiau001oeq6q1hdmdb5o","content":"<p>每个人都有权力过自己想要的生活，喜欢想喜欢的人，做自己想做的事，不辜负自己也不辜负别人。</p>\n<p>余生，过自己想要的生活，</p>\n<p>在能力范围内，选择喜欢的方式，</p>\n<p>活着有太多的身不由己了，</p>\n<p>可以选择的时候，别委屈自己，</p>\n<p>每一个人都有属于自己的人生，</p>\n<p>生活，没必要模仿别人的节奏，</p>\n<p>幸福和快乐，向来是源于内心，</p>\n<p>你有你的美好，他自有他的精彩。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>每个人都有权力过自己想要的生活，喜欢想喜欢的人，做自己想做的事，不辜负自己也不辜负别人。</p>\n<p>余生，过自己想要的生活，</p>\n<p>在能力范围内，选择喜欢的方式，</p>\n<p>活着有太多的身不由己了，</p>\n<p>可以选择的时候，别委屈自己，</p>\n<p>每一个人都有属于自己的人生，</p>\n<p>生活，没必要模仿别人的节奏，</p>\n<p>幸福和快乐，向来是源于内心，</p>\n<p>你有你的美好，他自有他的精彩。</p>\n"},{"title":"我开始有点喜欢告五人了","author":"king","abbrlink":"a8e48d6d","excerpt":"你真的希望你能厘清闭上眼睛用心看清","date":"2022-08-13T07:42:47.000Z","index_img":"https://img2.baidu.com/it/u=3910617556,2433274105&fm=253&fmt=auto&app=120&f=JPEG?w=1200&h=800","_content":"\n\n\n\n\n\n\n<center>\n    <figure>\n        <img src=\"https://d.ifengimg.com/q100/img1.ugc.ifeng.com/newugc/20201222/14/wemedia/5a3377c3260d6fd635dafb6c5c6efcd28d40ae0c_size842_w2000_h2588.jpg\" width=\"200px\" height=\"150px\"/>\n        <img src=\"https://img1.baidu.com/it/u=3257159689,2752937869&fm=253&fmt=auto&app=138&f=JPEG?w=660&h=421\" width=\"200px\" height=\"150px\"/>\n        <img src=\"https://res.klook.com/image/upload/v1576127345/admin-markdown/buypgi0vrfo5omdjqin5.jpg\" width=\"200px\" height=\"150px\"/>\n    </figure>\n</center>\n\n<center>\n    <figure>\n        <img src=\"https://img2.baidu.com/it/u=3974650856,354637334&fm=253&fmt=auto&app=138&f=JPEG?w=675&h=500\" width=\"200px\" height=\"150px\"/>\n        <img src=\"https://img2.baidu.com/it/u=1780908297,1532504565&fm=253&fmt=auto&app=138&f=JPEG?w=802&h=500\" width=\"200px\" height=\"150px\"/>\n        <img src=\"https://img2.baidu.com/it/u=1851682952,3529276881&fm=253&fmt=auto&app=120&f=JPEG?w=667&h=500\" width=\"200px\" height=\"150px\"/>\n    </figure>\n</center>\n\n\n\n\n\n","source":"_posts/运气来得若有似无.md","raw":"---\ntitle: 我开始有点喜欢告五人了\nauthor: king\nabbrlink: a8e48d6d\nexcerpt: 你真的希望你能厘清闭上眼睛用心看清\ndate: 2022-08-13 15:42:47\nindex_img: https://img2.baidu.com/it/u=3910617556,2433274105&fm=253&fmt=auto&app=120&f=JPEG?w=1200&h=800\n---\n\n\n\n\n\n\n\n<center>\n    <figure>\n        <img src=\"https://d.ifengimg.com/q100/img1.ugc.ifeng.com/newugc/20201222/14/wemedia/5a3377c3260d6fd635dafb6c5c6efcd28d40ae0c_size842_w2000_h2588.jpg\" width=\"200px\" height=\"150px\"/>\n        <img src=\"https://img1.baidu.com/it/u=3257159689,2752937869&fm=253&fmt=auto&app=138&f=JPEG?w=660&h=421\" width=\"200px\" height=\"150px\"/>\n        <img src=\"https://res.klook.com/image/upload/v1576127345/admin-markdown/buypgi0vrfo5omdjqin5.jpg\" width=\"200px\" height=\"150px\"/>\n    </figure>\n</center>\n\n<center>\n    <figure>\n        <img src=\"https://img2.baidu.com/it/u=3974650856,354637334&fm=253&fmt=auto&app=138&f=JPEG?w=675&h=500\" width=\"200px\" height=\"150px\"/>\n        <img src=\"https://img2.baidu.com/it/u=1780908297,1532504565&fm=253&fmt=auto&app=138&f=JPEG?w=802&h=500\" width=\"200px\" height=\"150px\"/>\n        <img src=\"https://img2.baidu.com/it/u=1851682952,3529276881&fm=253&fmt=auto&app=120&f=JPEG?w=667&h=500\" width=\"200px\" height=\"150px\"/>\n    </figure>\n</center>\n\n\n\n\n\n","slug":"运气来得若有似无","published":1,"updated":"2023-02-05T13:46:00.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clhrpaiaw001req6q2ccyf3q3","content":"<center>\n    <figure>\n        <img src=\"https://d.ifengimg.com/q100/img1.ugc.ifeng.com/newugc/20201222/14/wemedia/5a3377c3260d6fd635dafb6c5c6efcd28d40ae0c_size842_w2000_h2588.jpg\" width=\"200px\" height=\"150px\"/>\n        <img src=\"https://img1.baidu.com/it/u=3257159689,2752937869&fm=253&fmt=auto&app=138&f=JPEG?w=660&h=421\" width=\"200px\" height=\"150px\"/>\n        <img src=\"https://res.klook.com/image/upload/v1576127345/admin-markdown/buypgi0vrfo5omdjqin5.jpg\" width=\"200px\" height=\"150px\"/>\n    </figure>\n</center>\n\n<center>\n    <figure>\n        <img src=\"https://img2.baidu.com/it/u=3974650856,354637334&fm=253&fmt=auto&app=138&f=JPEG?w=675&h=500\" width=\"200px\" height=\"150px\"/>\n        <img src=\"https://img2.baidu.com/it/u=1780908297,1532504565&fm=253&fmt=auto&app=138&f=JPEG?w=802&h=500\" width=\"200px\" height=\"150px\"/>\n        <img src=\"https://img2.baidu.com/it/u=1851682952,3529276881&fm=253&fmt=auto&app=120&f=JPEG?w=667&h=500\" width=\"200px\" height=\"150px\"/>\n    </figure>\n</center>\n\n\n\n\n\n","site":{"data":{}},"more":"<center>\n    <figure>\n        <img src=\"https://d.ifengimg.com/q100/img1.ugc.ifeng.com/newugc/20201222/14/wemedia/5a3377c3260d6fd635dafb6c5c6efcd28d40ae0c_size842_w2000_h2588.jpg\" width=\"200px\" height=\"150px\"/>\n        <img src=\"https://img1.baidu.com/it/u=3257159689,2752937869&fm=253&fmt=auto&app=138&f=JPEG?w=660&h=421\" width=\"200px\" height=\"150px\"/>\n        <img src=\"https://res.klook.com/image/upload/v1576127345/admin-markdown/buypgi0vrfo5omdjqin5.jpg\" width=\"200px\" height=\"150px\"/>\n    </figure>\n</center>\n\n<center>\n    <figure>\n        <img src=\"https://img2.baidu.com/it/u=3974650856,354637334&fm=253&fmt=auto&app=138&f=JPEG?w=675&h=500\" width=\"200px\" height=\"150px\"/>\n        <img src=\"https://img2.baidu.com/it/u=1780908297,1532504565&fm=253&fmt=auto&app=138&f=JPEG?w=802&h=500\" width=\"200px\" height=\"150px\"/>\n        <img src=\"https://img2.baidu.com/it/u=1851682952,3529276881&fm=253&fmt=auto&app=120&f=JPEG?w=667&h=500\" width=\"200px\" height=\"150px\"/>\n    </figure>\n</center>\n\n\n\n\n\n"},{"title":"《项塔兰》为何如此令人震撼","excerpt":"一个文艺大盗的十年流亡，成就一部传奇经典，人生低谷时的涤荡心灵之书","index_img":"https://img2.baidu.com/it/u=2629158381,2988077220&fm=253&fmt=auto&app=138&f=JPEG?w=640&h=360","commens":false,"abbrlink":"f40d27b8","date":"2023-01-11T16:00:00.000Z","_content":"有人用“一部令人震撼的书”来评价《项塔兰》，我完全认同。在我看完全书合上书页时，我的第一感受也是“震撼”，这种感觉不只是来源于书中跌宕起伏、光怪陆离的内容，更有对人性的拷问，对终极命题的思索，以及作者在书中呈现出的哲人视角和诗样的语言。\n有人说过这样的话，现实比艺术更精采。《项塔兰》其实是作者格里高利·大卫·罗伯兹的自传体小说，他一生的经历可谓比小说还精彩。他在本书自述中写道：“就我而言，我这一生的际遇错综复杂，一言难尽。我曾是在海洛因中失去理想的革命分子，在犯罪中失去操守的哲学家，在重型监狱中失去灵魂的人。当我翻过枪塔间的围墙逃出监狱以后，就变成我的祖国澳大利亚的头号通缉要犯。我逃到地球的另一端——印度。在那里加入孟买的黑帮。我干起军火走私、货物走私、制造假钞的勾当，在世界三大洲被关过、被揍过、饿过，还挨过刀子。我还打过仗，冲进枪林弹雨中，结果大难不死。”\n单就作者如此丰富的经历本身，《项塔兰》都足以提起阅读人的兴趣，而且阅读的过程，真的能让人身陷其中，欲罢不能。可以说，这是我今年读到的最畅快淋漓的一本书，因为格里高利·大卫·罗伯兹讲故事的能力一流，你会身不由己沉浸在悬念丛生、紧扣心弦的故事情节中；而从另一个角度来说，如果仅把它作为一本了解印度的旅游读物，你会感受到孟买这个城市的酸腐和甜腻、自由和狂野；如果你再带着好奇，去一窥黑社会、贫民窟和阿富汗战争的真实一面，也许你会和我一样，在作者的复杂人生经历里、在他的罪恶与救赎中感受到劫后余生的超然。\n作者在开篇中就写到——“我花了很长的岁月，走过大半个世界，才真正学到什么是爱、什么是命运，以及我们所做的抉择。我被拴在墙上遭受拷打时，才顿悟这个真谛。不知为何，就在我内心发出呐喊之际，我意识到，即使镣铐加身，一身血污，孤立无助，我仍然是自由之身，我可以决定是要痛恨拷打我的人，还是原谅他们。我知道，这听起来似乎算不了什么，但在镣铐加身、痛苦万分的当下，当镣铐是你唯一仅有的，那份自由将带给你无限的希望。是要痛恨，还是要原谅，这抉择足以决定人一生的际遇。”\n很明显，这不是一本讲述作者曲折冒险逃亡经历的书，而是思考有关爱、命运、抉择、自由等人生命题的书。作者也是后来才明白，在他拿着伪造证件降落孟买那刻起，他的逃亡之路就演变成了救赎之路。\n起初他以为从澳洲看守最严密的监狱逃脱，偷渡至孟买──尽管潮湿、闷热、熙攘拥挤，但这个城市能让他在人间蒸发。带着假名字、假护照和不可告人的过去，他在印度导游的带领下进入孟买底层社会，和乞丐、妓女、苦修圣者、演员、士兵，以及来自世界各地的逃亡者一起，在这个城市将开启新的人生旅程。他成为了第一个住进贫民窟的白人，凭着一只急救箱，当上了受人尊敬、没有执照但免费为人看病的医生；他爱上了孟买，爱上了这个城市随处可见受贿的警察、主持公道的黑帮、有组织的游民、大剌揽客的妓女、从香烟槟榔到毒品都卖的摊贩，以及人人脸上毫不吝惜的笑容；他学习用印度语、孟拉语和当地人沟通，他还从偏僻村落的老嬷嬷口中，得到“项塔兰”这个名字，印度语意为“和平之人”，那时还没人知道，其实他是个恶名昭著的通缉犯；他邂逅了美丽的卡拉，一个拥有聪明、秘密和湖水绿眼眸的女人，让人在她身上找到天使翅膀的同时，也看见魔鬼的犄角。他视哈德汗为父亲。哈德汗是孟买家喻户晓的黑帮老大、圣人暨哲学家，并在清真寺开讲神学和伦理学，吸引各宗教的学者和学生慕名而来。通过哈德汗，他被黑帮吸收，认真学习各种“专业”，包括如何洗钱、伪造护照、走私黄金、贩卖军火等，甚至加入了宝莱坞电影圈、穆斯林游击队，他还参与了阿富汗与前苏联的战争，在战场中九死一生，侥幸活命。他一路走来渐渐才发现，他在孟买的一切行动，其实都在哈德汗的掌控中，他以为的自由，不过是一步步陷入谜团与阴谋的纠缠中……\n很难想象命运要怎么引领他作出生命轨迹的巨变，成为一个真正的和平之人。直到多年以后，在他回看自己走过的人生轨迹时，才有所顿悟：在贫民窟里，他跟当地人学会了用摇头晃脑的肢体语言表达善意；他学会了完全不用手机，抛弃现代文明；他学会了像印度人一样不脱衣服洗澡，他也在和村民的劳作中学会了印度人惯有的乐天知命，因为千年以来，人和自然的相处已经留下了最可靠的预示，在这样的经历中，他也第一次感悟到生命之河的宽度。他视为父亲的哈德拜叱咤黑白两道，为人极有原则并有心收买扶持他，从小缺失父爱的他，为逃避警方的追捕，也想给自己找一个保护伞，他投身黑帮门下，虽身处犯罪漩涡，但从未违背内心的原则。他为身陷囹圄的训熊人保释，为无法逃离妓院的少女不惜得罪当地的狠角色周夫人，既使上过战场，他的手上也从未沾染过杀人的鲜血。相反，他是黑帮兄弟的好朋友，是贫民百姓心中的英雄。\n即使在得知他最爱的人卡拉和他视为父亲的哈德拜都利用了他，甚至于在他二度入狱遭到非人折磨差点死掉时，他仍然选择了原谅。他说：“我接受命运，甚至欢迎命运。我心想，最终我会得到我应得的。不知为什么，那想法让我变得纯净、清澈。我感受到的不是恐惧，而是希望，希望他会活着。我跟他之间完了，我不想再见到他，但看着他骑马进入那白影幢幢的山谷时，我希望他会活着。我祷告，祈求他平安无事，祈求他感受到我的心碎，我爱他。我爱他。”“人无法杀掉爱，甚至，无法用恨杀掉爱。人可以杀掉陷入爱河的心情、被爱填满的感觉，甚至杀掉可爱迷人的特质。人可以把它们全杀掉，或把它们化为麻木、强烈、沉重的遗憾，但无法杀掉爱本身。爱是狂热的追寻，追寻自己以外的真理。一旦真诚而彻底地感受到爱，爱就永远不死。每个爱的行动，每个付出真情的时刻，都是宇宙善的一部分。那是上帝的一部分，或者，那就是我们所谓的上帝，而且它永远不死。”\n毫无疑问，正是因为，他在一路行进的过程中不断地选择爱、选择原谅、选择放下自己的羞愧和内疚，直面自己的孤单和脆弱，才拯救了他自己。\n在全书结尾处，作者写下了下面的文字——“我原本一直认为命运是不能改变的，在我们每个人生下来时就命定了，就和星体的运行路线一样永远不变。但这时我猛然理解到，人生比那还奇特、还美。事实是，不管人置身哪种赛局里，不管运气多好或多坏，人都可以靠一个念头或一个爱的作为，彻底改变人生。”\n格里高利·大卫·罗伯兹曾说：“年轻的时候，我会盲目寻求意义，把一些知识像碎片一样拼凑起来，就像某些鸟喜欢找些闪闪的东西来装点它们的窝。” 而如今的他，抛开所有外界的注意力，和亲人、爱人开始隐居生活，专注于自己想做的事。他出狱后写作的这本厚度近千页的《项塔兰》能够一鸣惊人，并非偶然。你能想象吗，哪怕是在监狱中，他也没有停止写作——“我曾经是作家。在澳大利亚时，我二十出头就在写作了。当我婚姻破裂，失去女儿的监护权，把人生葬送在毒品、犯罪、入狱、逃狱时，我才刚出版第一部作品，正要在文坛扬名立万。即使在逃亡中，写作仍是我每日的习惯，仍是我例行作息的一部分……我从未停止写作，不管人在何处，不管处境如何，我都没改变这习惯。初来孟买那几个月的生活，我之所以能记得这么清楚，就是每当我一独处，就写下我对那些新朋友的看法，还有跟他们交谈的内容。写作是保住我性命的功臣之一，每日将生活点滴行诸文字，天天如此训练，如此化繁为简，有助于我克服羞愧和随之而来的绝望。”\n格里高利换了很多名字，也从一个身份转换成另一个身份，但作为一个作家的身份他始终没有忘记——“写作是我的第一本能。当我被关在亚瑟路监狱里面，戴着脚镣，被监狱看守折磨，当时我觉得就要把这样的经历写下来，这个念头在血液中充斥，想要去猛咬看守的警棍。作为一个作家，作为一个自由的人，可以把自己写的东西在全世界发表，意识到，这才是我现在内心深处，最热切的渴望。”","source":"_posts/项塔兰.md","raw":"---\ntitle: 《项塔兰》为何如此令人震撼\nexcerpt: 一个文艺大盗的十年流亡，成就一部传奇经典，人生低谷时的涤荡心灵之书\ntags:\n  - 小说，读书笔记\nindex_img: >-\n  https://img2.baidu.com/it/u=2629158381,2988077220&fm=253&fmt=auto&app=138&f=JPEG?w=640&h=360\ncommens: false\nabbrlink: f40d27b8\ndate: 2023-01-12 00:00:00\n---\n有人用“一部令人震撼的书”来评价《项塔兰》，我完全认同。在我看完全书合上书页时，我的第一感受也是“震撼”，这种感觉不只是来源于书中跌宕起伏、光怪陆离的内容，更有对人性的拷问，对终极命题的思索，以及作者在书中呈现出的哲人视角和诗样的语言。\n有人说过这样的话，现实比艺术更精采。《项塔兰》其实是作者格里高利·大卫·罗伯兹的自传体小说，他一生的经历可谓比小说还精彩。他在本书自述中写道：“就我而言，我这一生的际遇错综复杂，一言难尽。我曾是在海洛因中失去理想的革命分子，在犯罪中失去操守的哲学家，在重型监狱中失去灵魂的人。当我翻过枪塔间的围墙逃出监狱以后，就变成我的祖国澳大利亚的头号通缉要犯。我逃到地球的另一端——印度。在那里加入孟买的黑帮。我干起军火走私、货物走私、制造假钞的勾当，在世界三大洲被关过、被揍过、饿过，还挨过刀子。我还打过仗，冲进枪林弹雨中，结果大难不死。”\n单就作者如此丰富的经历本身，《项塔兰》都足以提起阅读人的兴趣，而且阅读的过程，真的能让人身陷其中，欲罢不能。可以说，这是我今年读到的最畅快淋漓的一本书，因为格里高利·大卫·罗伯兹讲故事的能力一流，你会身不由己沉浸在悬念丛生、紧扣心弦的故事情节中；而从另一个角度来说，如果仅把它作为一本了解印度的旅游读物，你会感受到孟买这个城市的酸腐和甜腻、自由和狂野；如果你再带着好奇，去一窥黑社会、贫民窟和阿富汗战争的真实一面，也许你会和我一样，在作者的复杂人生经历里、在他的罪恶与救赎中感受到劫后余生的超然。\n作者在开篇中就写到——“我花了很长的岁月，走过大半个世界，才真正学到什么是爱、什么是命运，以及我们所做的抉择。我被拴在墙上遭受拷打时，才顿悟这个真谛。不知为何，就在我内心发出呐喊之际，我意识到，即使镣铐加身，一身血污，孤立无助，我仍然是自由之身，我可以决定是要痛恨拷打我的人，还是原谅他们。我知道，这听起来似乎算不了什么，但在镣铐加身、痛苦万分的当下，当镣铐是你唯一仅有的，那份自由将带给你无限的希望。是要痛恨，还是要原谅，这抉择足以决定人一生的际遇。”\n很明显，这不是一本讲述作者曲折冒险逃亡经历的书，而是思考有关爱、命运、抉择、自由等人生命题的书。作者也是后来才明白，在他拿着伪造证件降落孟买那刻起，他的逃亡之路就演变成了救赎之路。\n起初他以为从澳洲看守最严密的监狱逃脱，偷渡至孟买──尽管潮湿、闷热、熙攘拥挤，但这个城市能让他在人间蒸发。带着假名字、假护照和不可告人的过去，他在印度导游的带领下进入孟买底层社会，和乞丐、妓女、苦修圣者、演员、士兵，以及来自世界各地的逃亡者一起，在这个城市将开启新的人生旅程。他成为了第一个住进贫民窟的白人，凭着一只急救箱，当上了受人尊敬、没有执照但免费为人看病的医生；他爱上了孟买，爱上了这个城市随处可见受贿的警察、主持公道的黑帮、有组织的游民、大剌揽客的妓女、从香烟槟榔到毒品都卖的摊贩，以及人人脸上毫不吝惜的笑容；他学习用印度语、孟拉语和当地人沟通，他还从偏僻村落的老嬷嬷口中，得到“项塔兰”这个名字，印度语意为“和平之人”，那时还没人知道，其实他是个恶名昭著的通缉犯；他邂逅了美丽的卡拉，一个拥有聪明、秘密和湖水绿眼眸的女人，让人在她身上找到天使翅膀的同时，也看见魔鬼的犄角。他视哈德汗为父亲。哈德汗是孟买家喻户晓的黑帮老大、圣人暨哲学家，并在清真寺开讲神学和伦理学，吸引各宗教的学者和学生慕名而来。通过哈德汗，他被黑帮吸收，认真学习各种“专业”，包括如何洗钱、伪造护照、走私黄金、贩卖军火等，甚至加入了宝莱坞电影圈、穆斯林游击队，他还参与了阿富汗与前苏联的战争，在战场中九死一生，侥幸活命。他一路走来渐渐才发现，他在孟买的一切行动，其实都在哈德汗的掌控中，他以为的自由，不过是一步步陷入谜团与阴谋的纠缠中……\n很难想象命运要怎么引领他作出生命轨迹的巨变，成为一个真正的和平之人。直到多年以后，在他回看自己走过的人生轨迹时，才有所顿悟：在贫民窟里，他跟当地人学会了用摇头晃脑的肢体语言表达善意；他学会了完全不用手机，抛弃现代文明；他学会了像印度人一样不脱衣服洗澡，他也在和村民的劳作中学会了印度人惯有的乐天知命，因为千年以来，人和自然的相处已经留下了最可靠的预示，在这样的经历中，他也第一次感悟到生命之河的宽度。他视为父亲的哈德拜叱咤黑白两道，为人极有原则并有心收买扶持他，从小缺失父爱的他，为逃避警方的追捕，也想给自己找一个保护伞，他投身黑帮门下，虽身处犯罪漩涡，但从未违背内心的原则。他为身陷囹圄的训熊人保释，为无法逃离妓院的少女不惜得罪当地的狠角色周夫人，既使上过战场，他的手上也从未沾染过杀人的鲜血。相反，他是黑帮兄弟的好朋友，是贫民百姓心中的英雄。\n即使在得知他最爱的人卡拉和他视为父亲的哈德拜都利用了他，甚至于在他二度入狱遭到非人折磨差点死掉时，他仍然选择了原谅。他说：“我接受命运，甚至欢迎命运。我心想，最终我会得到我应得的。不知为什么，那想法让我变得纯净、清澈。我感受到的不是恐惧，而是希望，希望他会活着。我跟他之间完了，我不想再见到他，但看着他骑马进入那白影幢幢的山谷时，我希望他会活着。我祷告，祈求他平安无事，祈求他感受到我的心碎，我爱他。我爱他。”“人无法杀掉爱，甚至，无法用恨杀掉爱。人可以杀掉陷入爱河的心情、被爱填满的感觉，甚至杀掉可爱迷人的特质。人可以把它们全杀掉，或把它们化为麻木、强烈、沉重的遗憾，但无法杀掉爱本身。爱是狂热的追寻，追寻自己以外的真理。一旦真诚而彻底地感受到爱，爱就永远不死。每个爱的行动，每个付出真情的时刻，都是宇宙善的一部分。那是上帝的一部分，或者，那就是我们所谓的上帝，而且它永远不死。”\n毫无疑问，正是因为，他在一路行进的过程中不断地选择爱、选择原谅、选择放下自己的羞愧和内疚，直面自己的孤单和脆弱，才拯救了他自己。\n在全书结尾处，作者写下了下面的文字——“我原本一直认为命运是不能改变的，在我们每个人生下来时就命定了，就和星体的运行路线一样永远不变。但这时我猛然理解到，人生比那还奇特、还美。事实是，不管人置身哪种赛局里，不管运气多好或多坏，人都可以靠一个念头或一个爱的作为，彻底改变人生。”\n格里高利·大卫·罗伯兹曾说：“年轻的时候，我会盲目寻求意义，把一些知识像碎片一样拼凑起来，就像某些鸟喜欢找些闪闪的东西来装点它们的窝。” 而如今的他，抛开所有外界的注意力，和亲人、爱人开始隐居生活，专注于自己想做的事。他出狱后写作的这本厚度近千页的《项塔兰》能够一鸣惊人，并非偶然。你能想象吗，哪怕是在监狱中，他也没有停止写作——“我曾经是作家。在澳大利亚时，我二十出头就在写作了。当我婚姻破裂，失去女儿的监护权，把人生葬送在毒品、犯罪、入狱、逃狱时，我才刚出版第一部作品，正要在文坛扬名立万。即使在逃亡中，写作仍是我每日的习惯，仍是我例行作息的一部分……我从未停止写作，不管人在何处，不管处境如何，我都没改变这习惯。初来孟买那几个月的生活，我之所以能记得这么清楚，就是每当我一独处，就写下我对那些新朋友的看法，还有跟他们交谈的内容。写作是保住我性命的功臣之一，每日将生活点滴行诸文字，天天如此训练，如此化繁为简，有助于我克服羞愧和随之而来的绝望。”\n格里高利换了很多名字，也从一个身份转换成另一个身份，但作为一个作家的身份他始终没有忘记——“写作是我的第一本能。当我被关在亚瑟路监狱里面，戴着脚镣，被监狱看守折磨，当时我觉得就要把这样的经历写下来，这个念头在血液中充斥，想要去猛咬看守的警棍。作为一个作家，作为一个自由的人，可以把自己写的东西在全世界发表，意识到，这才是我现在内心深处，最热切的渴望。”","slug":"项塔兰","published":1,"updated":"2023-05-15T05:01:23.671Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clhrpaiax001ueq6q7e1xcq1o","content":"<p>有人用“一部令人震撼的书”来评价《项塔兰》，我完全认同。在我看完全书合上书页时，我的第一感受也是“震撼”，这种感觉不只是来源于书中跌宕起伏、光怪陆离的内容，更有对人性的拷问，对终极命题的思索，以及作者在书中呈现出的哲人视角和诗样的语言。<br>有人说过这样的话，现实比艺术更精采。《项塔兰》其实是作者格里高利·大卫·罗伯兹的自传体小说，他一生的经历可谓比小说还精彩。他在本书自述中写道：“就我而言，我这一生的际遇错综复杂，一言难尽。我曾是在海洛因中失去理想的革命分子，在犯罪中失去操守的哲学家，在重型监狱中失去灵魂的人。当我翻过枪塔间的围墙逃出监狱以后，就变成我的祖国澳大利亚的头号通缉要犯。我逃到地球的另一端——印度。在那里加入孟买的黑帮。我干起军火走私、货物走私、制造假钞的勾当，在世界三大洲被关过、被揍过、饿过，还挨过刀子。我还打过仗，冲进枪林弹雨中，结果大难不死。”<br>单就作者如此丰富的经历本身，《项塔兰》都足以提起阅读人的兴趣，而且阅读的过程，真的能让人身陷其中，欲罢不能。可以说，这是我今年读到的最畅快淋漓的一本书，因为格里高利·大卫·罗伯兹讲故事的能力一流，你会身不由己沉浸在悬念丛生、紧扣心弦的故事情节中；而从另一个角度来说，如果仅把它作为一本了解印度的旅游读物，你会感受到孟买这个城市的酸腐和甜腻、自由和狂野；如果你再带着好奇，去一窥黑社会、贫民窟和阿富汗战争的真实一面，也许你会和我一样，在作者的复杂人生经历里、在他的罪恶与救赎中感受到劫后余生的超然。<br>作者在开篇中就写到——“我花了很长的岁月，走过大半个世界，才真正学到什么是爱、什么是命运，以及我们所做的抉择。我被拴在墙上遭受拷打时，才顿悟这个真谛。不知为何，就在我内心发出呐喊之际，我意识到，即使镣铐加身，一身血污，孤立无助，我仍然是自由之身，我可以决定是要痛恨拷打我的人，还是原谅他们。我知道，这听起来似乎算不了什么，但在镣铐加身、痛苦万分的当下，当镣铐是你唯一仅有的，那份自由将带给你无限的希望。是要痛恨，还是要原谅，这抉择足以决定人一生的际遇。”<br>很明显，这不是一本讲述作者曲折冒险逃亡经历的书，而是思考有关爱、命运、抉择、自由等人生命题的书。作者也是后来才明白，在他拿着伪造证件降落孟买那刻起，他的逃亡之路就演变成了救赎之路。<br>起初他以为从澳洲看守最严密的监狱逃脱，偷渡至孟买──尽管潮湿、闷热、熙攘拥挤，但这个城市能让他在人间蒸发。带着假名字、假护照和不可告人的过去，他在印度导游的带领下进入孟买底层社会，和乞丐、妓女、苦修圣者、演员、士兵，以及来自世界各地的逃亡者一起，在这个城市将开启新的人生旅程。他成为了第一个住进贫民窟的白人，凭着一只急救箱，当上了受人尊敬、没有执照但免费为人看病的医生；他爱上了孟买，爱上了这个城市随处可见受贿的警察、主持公道的黑帮、有组织的游民、大剌揽客的妓女、从香烟槟榔到毒品都卖的摊贩，以及人人脸上毫不吝惜的笑容；他学习用印度语、孟拉语和当地人沟通，他还从偏僻村落的老嬷嬷口中，得到“项塔兰”这个名字，印度语意为“和平之人”，那时还没人知道，其实他是个恶名昭著的通缉犯；他邂逅了美丽的卡拉，一个拥有聪明、秘密和湖水绿眼眸的女人，让人在她身上找到天使翅膀的同时，也看见魔鬼的犄角。他视哈德汗为父亲。哈德汗是孟买家喻户晓的黑帮老大、圣人暨哲学家，并在清真寺开讲神学和伦理学，吸引各宗教的学者和学生慕名而来。通过哈德汗，他被黑帮吸收，认真学习各种“专业”，包括如何洗钱、伪造护照、走私黄金、贩卖军火等，甚至加入了宝莱坞电影圈、穆斯林游击队，他还参与了阿富汗与前苏联的战争，在战场中九死一生，侥幸活命。他一路走来渐渐才发现，他在孟买的一切行动，其实都在哈德汗的掌控中，他以为的自由，不过是一步步陷入谜团与阴谋的纠缠中……<br>很难想象命运要怎么引领他作出生命轨迹的巨变，成为一个真正的和平之人。直到多年以后，在他回看自己走过的人生轨迹时，才有所顿悟：在贫民窟里，他跟当地人学会了用摇头晃脑的肢体语言表达善意；他学会了完全不用手机，抛弃现代文明；他学会了像印度人一样不脱衣服洗澡，他也在和村民的劳作中学会了印度人惯有的乐天知命，因为千年以来，人和自然的相处已经留下了最可靠的预示，在这样的经历中，他也第一次感悟到生命之河的宽度。他视为父亲的哈德拜叱咤黑白两道，为人极有原则并有心收买扶持他，从小缺失父爱的他，为逃避警方的追捕，也想给自己找一个保护伞，他投身黑帮门下，虽身处犯罪漩涡，但从未违背内心的原则。他为身陷囹圄的训熊人保释，为无法逃离妓院的少女不惜得罪当地的狠角色周夫人，既使上过战场，他的手上也从未沾染过杀人的鲜血。相反，他是黑帮兄弟的好朋友，是贫民百姓心中的英雄。<br>即使在得知他最爱的人卡拉和他视为父亲的哈德拜都利用了他，甚至于在他二度入狱遭到非人折磨差点死掉时，他仍然选择了原谅。他说：“我接受命运，甚至欢迎命运。我心想，最终我会得到我应得的。不知为什么，那想法让我变得纯净、清澈。我感受到的不是恐惧，而是希望，希望他会活着。我跟他之间完了，我不想再见到他，但看着他骑马进入那白影幢幢的山谷时，我希望他会活着。我祷告，祈求他平安无事，祈求他感受到我的心碎，我爱他。我爱他。”“人无法杀掉爱，甚至，无法用恨杀掉爱。人可以杀掉陷入爱河的心情、被爱填满的感觉，甚至杀掉可爱迷人的特质。人可以把它们全杀掉，或把它们化为麻木、强烈、沉重的遗憾，但无法杀掉爱本身。爱是狂热的追寻，追寻自己以外的真理。一旦真诚而彻底地感受到爱，爱就永远不死。每个爱的行动，每个付出真情的时刻，都是宇宙善的一部分。那是上帝的一部分，或者，那就是我们所谓的上帝，而且它永远不死。”<br>毫无疑问，正是因为，他在一路行进的过程中不断地选择爱、选择原谅、选择放下自己的羞愧和内疚，直面自己的孤单和脆弱，才拯救了他自己。<br>在全书结尾处，作者写下了下面的文字——“我原本一直认为命运是不能改变的，在我们每个人生下来时就命定了，就和星体的运行路线一样永远不变。但这时我猛然理解到，人生比那还奇特、还美。事实是，不管人置身哪种赛局里，不管运气多好或多坏，人都可以靠一个念头或一个爱的作为，彻底改变人生。”<br>格里高利·大卫·罗伯兹曾说：“年轻的时候，我会盲目寻求意义，把一些知识像碎片一样拼凑起来，就像某些鸟喜欢找些闪闪的东西来装点它们的窝。” 而如今的他，抛开所有外界的注意力，和亲人、爱人开始隐居生活，专注于自己想做的事。他出狱后写作的这本厚度近千页的《项塔兰》能够一鸣惊人，并非偶然。你能想象吗，哪怕是在监狱中，他也没有停止写作——“我曾经是作家。在澳大利亚时，我二十出头就在写作了。当我婚姻破裂，失去女儿的监护权，把人生葬送在毒品、犯罪、入狱、逃狱时，我才刚出版第一部作品，正要在文坛扬名立万。即使在逃亡中，写作仍是我每日的习惯，仍是我例行作息的一部分……我从未停止写作，不管人在何处，不管处境如何，我都没改变这习惯。初来孟买那几个月的生活，我之所以能记得这么清楚，就是每当我一独处，就写下我对那些新朋友的看法，还有跟他们交谈的内容。写作是保住我性命的功臣之一，每日将生活点滴行诸文字，天天如此训练，如此化繁为简，有助于我克服羞愧和随之而来的绝望。”<br>格里高利换了很多名字，也从一个身份转换成另一个身份，但作为一个作家的身份他始终没有忘记——“写作是我的第一本能。当我被关在亚瑟路监狱里面，戴着脚镣，被监狱看守折磨，当时我觉得就要把这样的经历写下来，这个念头在血液中充斥，想要去猛咬看守的警棍。作为一个作家，作为一个自由的人，可以把自己写的东西在全世界发表，意识到，这才是我现在内心深处，最热切的渴望。”</p>\n","site":{"data":{}},"more":"<p>有人用“一部令人震撼的书”来评价《项塔兰》，我完全认同。在我看完全书合上书页时，我的第一感受也是“震撼”，这种感觉不只是来源于书中跌宕起伏、光怪陆离的内容，更有对人性的拷问，对终极命题的思索，以及作者在书中呈现出的哲人视角和诗样的语言。<br>有人说过这样的话，现实比艺术更精采。《项塔兰》其实是作者格里高利·大卫·罗伯兹的自传体小说，他一生的经历可谓比小说还精彩。他在本书自述中写道：“就我而言，我这一生的际遇错综复杂，一言难尽。我曾是在海洛因中失去理想的革命分子，在犯罪中失去操守的哲学家，在重型监狱中失去灵魂的人。当我翻过枪塔间的围墙逃出监狱以后，就变成我的祖国澳大利亚的头号通缉要犯。我逃到地球的另一端——印度。在那里加入孟买的黑帮。我干起军火走私、货物走私、制造假钞的勾当，在世界三大洲被关过、被揍过、饿过，还挨过刀子。我还打过仗，冲进枪林弹雨中，结果大难不死。”<br>单就作者如此丰富的经历本身，《项塔兰》都足以提起阅读人的兴趣，而且阅读的过程，真的能让人身陷其中，欲罢不能。可以说，这是我今年读到的最畅快淋漓的一本书，因为格里高利·大卫·罗伯兹讲故事的能力一流，你会身不由己沉浸在悬念丛生、紧扣心弦的故事情节中；而从另一个角度来说，如果仅把它作为一本了解印度的旅游读物，你会感受到孟买这个城市的酸腐和甜腻、自由和狂野；如果你再带着好奇，去一窥黑社会、贫民窟和阿富汗战争的真实一面，也许你会和我一样，在作者的复杂人生经历里、在他的罪恶与救赎中感受到劫后余生的超然。<br>作者在开篇中就写到——“我花了很长的岁月，走过大半个世界，才真正学到什么是爱、什么是命运，以及我们所做的抉择。我被拴在墙上遭受拷打时，才顿悟这个真谛。不知为何，就在我内心发出呐喊之际，我意识到，即使镣铐加身，一身血污，孤立无助，我仍然是自由之身，我可以决定是要痛恨拷打我的人，还是原谅他们。我知道，这听起来似乎算不了什么，但在镣铐加身、痛苦万分的当下，当镣铐是你唯一仅有的，那份自由将带给你无限的希望。是要痛恨，还是要原谅，这抉择足以决定人一生的际遇。”<br>很明显，这不是一本讲述作者曲折冒险逃亡经历的书，而是思考有关爱、命运、抉择、自由等人生命题的书。作者也是后来才明白，在他拿着伪造证件降落孟买那刻起，他的逃亡之路就演变成了救赎之路。<br>起初他以为从澳洲看守最严密的监狱逃脱，偷渡至孟买──尽管潮湿、闷热、熙攘拥挤，但这个城市能让他在人间蒸发。带着假名字、假护照和不可告人的过去，他在印度导游的带领下进入孟买底层社会，和乞丐、妓女、苦修圣者、演员、士兵，以及来自世界各地的逃亡者一起，在这个城市将开启新的人生旅程。他成为了第一个住进贫民窟的白人，凭着一只急救箱，当上了受人尊敬、没有执照但免费为人看病的医生；他爱上了孟买，爱上了这个城市随处可见受贿的警察、主持公道的黑帮、有组织的游民、大剌揽客的妓女、从香烟槟榔到毒品都卖的摊贩，以及人人脸上毫不吝惜的笑容；他学习用印度语、孟拉语和当地人沟通，他还从偏僻村落的老嬷嬷口中，得到“项塔兰”这个名字，印度语意为“和平之人”，那时还没人知道，其实他是个恶名昭著的通缉犯；他邂逅了美丽的卡拉，一个拥有聪明、秘密和湖水绿眼眸的女人，让人在她身上找到天使翅膀的同时，也看见魔鬼的犄角。他视哈德汗为父亲。哈德汗是孟买家喻户晓的黑帮老大、圣人暨哲学家，并在清真寺开讲神学和伦理学，吸引各宗教的学者和学生慕名而来。通过哈德汗，他被黑帮吸收，认真学习各种“专业”，包括如何洗钱、伪造护照、走私黄金、贩卖军火等，甚至加入了宝莱坞电影圈、穆斯林游击队，他还参与了阿富汗与前苏联的战争，在战场中九死一生，侥幸活命。他一路走来渐渐才发现，他在孟买的一切行动，其实都在哈德汗的掌控中，他以为的自由，不过是一步步陷入谜团与阴谋的纠缠中……<br>很难想象命运要怎么引领他作出生命轨迹的巨变，成为一个真正的和平之人。直到多年以后，在他回看自己走过的人生轨迹时，才有所顿悟：在贫民窟里，他跟当地人学会了用摇头晃脑的肢体语言表达善意；他学会了完全不用手机，抛弃现代文明；他学会了像印度人一样不脱衣服洗澡，他也在和村民的劳作中学会了印度人惯有的乐天知命，因为千年以来，人和自然的相处已经留下了最可靠的预示，在这样的经历中，他也第一次感悟到生命之河的宽度。他视为父亲的哈德拜叱咤黑白两道，为人极有原则并有心收买扶持他，从小缺失父爱的他，为逃避警方的追捕，也想给自己找一个保护伞，他投身黑帮门下，虽身处犯罪漩涡，但从未违背内心的原则。他为身陷囹圄的训熊人保释，为无法逃离妓院的少女不惜得罪当地的狠角色周夫人，既使上过战场，他的手上也从未沾染过杀人的鲜血。相反，他是黑帮兄弟的好朋友，是贫民百姓心中的英雄。<br>即使在得知他最爱的人卡拉和他视为父亲的哈德拜都利用了他，甚至于在他二度入狱遭到非人折磨差点死掉时，他仍然选择了原谅。他说：“我接受命运，甚至欢迎命运。我心想，最终我会得到我应得的。不知为什么，那想法让我变得纯净、清澈。我感受到的不是恐惧，而是希望，希望他会活着。我跟他之间完了，我不想再见到他，但看着他骑马进入那白影幢幢的山谷时，我希望他会活着。我祷告，祈求他平安无事，祈求他感受到我的心碎，我爱他。我爱他。”“人无法杀掉爱，甚至，无法用恨杀掉爱。人可以杀掉陷入爱河的心情、被爱填满的感觉，甚至杀掉可爱迷人的特质。人可以把它们全杀掉，或把它们化为麻木、强烈、沉重的遗憾，但无法杀掉爱本身。爱是狂热的追寻，追寻自己以外的真理。一旦真诚而彻底地感受到爱，爱就永远不死。每个爱的行动，每个付出真情的时刻，都是宇宙善的一部分。那是上帝的一部分，或者，那就是我们所谓的上帝，而且它永远不死。”<br>毫无疑问，正是因为，他在一路行进的过程中不断地选择爱、选择原谅、选择放下自己的羞愧和内疚，直面自己的孤单和脆弱，才拯救了他自己。<br>在全书结尾处，作者写下了下面的文字——“我原本一直认为命运是不能改变的，在我们每个人生下来时就命定了，就和星体的运行路线一样永远不变。但这时我猛然理解到，人生比那还奇特、还美。事实是，不管人置身哪种赛局里，不管运气多好或多坏，人都可以靠一个念头或一个爱的作为，彻底改变人生。”<br>格里高利·大卫·罗伯兹曾说：“年轻的时候，我会盲目寻求意义，把一些知识像碎片一样拼凑起来，就像某些鸟喜欢找些闪闪的东西来装点它们的窝。” 而如今的他，抛开所有外界的注意力，和亲人、爱人开始隐居生活，专注于自己想做的事。他出狱后写作的这本厚度近千页的《项塔兰》能够一鸣惊人，并非偶然。你能想象吗，哪怕是在监狱中，他也没有停止写作——“我曾经是作家。在澳大利亚时，我二十出头就在写作了。当我婚姻破裂，失去女儿的监护权，把人生葬送在毒品、犯罪、入狱、逃狱时，我才刚出版第一部作品，正要在文坛扬名立万。即使在逃亡中，写作仍是我每日的习惯，仍是我例行作息的一部分……我从未停止写作，不管人在何处，不管处境如何，我都没改变这习惯。初来孟买那几个月的生活，我之所以能记得这么清楚，就是每当我一独处，就写下我对那些新朋友的看法，还有跟他们交谈的内容。写作是保住我性命的功臣之一，每日将生活点滴行诸文字，天天如此训练，如此化繁为简，有助于我克服羞愧和随之而来的绝望。”<br>格里高利换了很多名字，也从一个身份转换成另一个身份，但作为一个作家的身份他始终没有忘记——“写作是我的第一本能。当我被关在亚瑟路监狱里面，戴着脚镣，被监狱看守折磨，当时我觉得就要把这样的经历写下来，这个念头在血液中充斥，想要去猛咬看守的警棍。作为一个作家，作为一个自由的人，可以把自己写的东西在全世界发表，意识到，这才是我现在内心深处，最热切的渴望。”</p>\n"},{"title":"真正做到自律的唯一“捷径”","index_img":"https://img1.baidu.com/it/u=2466575982,2039020913&fm=253&fmt=auto&app=138&f=PNG?w=889&h=500","abbrlink":"1679bc2f","date":"2023-05-17T13:05:39.000Z","_content":"“最初是我们塑造习惯，后来是习惯塑造我们。”\n——奥斯卡·王尔德\n<!--more-->\n\n文章太长不看版：\n\n<p style=\"color:red\">找到最关键的核心习惯，改变就能轻而易举。</p> \n\n##   核心习惯\n\n你会不会受够了糟糕的现状，然后立志改变——不能这样下去了，我要自律！\n\n我们一般的思路是，制定一个完美的计划，然后一股脑开始十几个甚至几十个习惯养成计划：\n\n>早睡早起、不熬夜、运动、关心家人\n>\n>不玩手机，冥想，不拖延，不抱怨 \n>\n>健康饮食、醒来喝一杯水、每天喝8杯水\n>\n>日行一善、护肤、敷面膜......\n\n我有时候打开时光序的习惯库，每一个看起来都非常有用，于是恨不得把每一个都添加上😂\n\n但是，正确≠必要。\n\n如果强行一次性完成十几二十个习惯，难度真的好大😭\n\n而且中途几次没坚持下去，就会破罐子破摔，间歇性自律，持续性摆烂...\n\n不过好消息是，只需要培养一个核心习惯，作为整体的生活状态就会往更加规律的方向运作。\n\n\n\n**什么是「核心习惯」？**\n\n查尔斯·都希格在《习惯的力量》一书中提出了这一理念。\n\n它指的是最关键的，能起带头作用的习惯。\n\n**某些或者某个习惯，一旦将其改变，就会自发地引起连锁反应，进而重塑生活/学习方式。**\n\n像多米诺骨牌那样，只要用力推到最前面那个，他会产生连带效应影响后面的骨牌。\n\n![图片](https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/640.jpeg)\n\n以上图为例，核心问题是玩手机，那么只要养成“睡前不玩手机”这个核心习惯，那么熬夜失眠、晚起、精神状态差就会得到极大缓解。\n\n“核心习惯能启动一个进程，久而久之将改变一切。”\n\n**只需要优先培养你的核心习惯，切实的付诸行动开始改变，就是找到了自律的捷径。**\n\n这个认知对我来说太重要了。\n\n曾经我也是，长期困扰我的坏习惯就是：\n\n*整体精神萎靡，专注力差，总是玩手机；*\n\n*做事拖延，又因为拖延导致焦虑压力大;*\n\n*花钱大手大脚，在减肥和吃吃喝喝中反复...*\n\n<img src=\"https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/640.gif\" class=\"img-center\">\n\n\n\n仔细想想，似乎每次只要早起，我一天的状态都会很不错，而且因为生物钟影响，无论几点睡，我睡7个小时候就会醒过来。\n\n所以我给自己的核心计划就是，**晚上11点睡觉，用早睡带动早起**。\n\n为了保证这个核心习惯养成，我制定了睡前和早起后的routine——\n\n晚上10点泡脚/拉伸，看完半小时书开始准备入睡；\n\n第二天6点早起，1小时做运动洗个热水澡、1小时边做早餐边听网课，8点准时出门。\n\n\n\n当早上完成那么多事情，然后安静地迎接太阳，那种感觉真的很爽。\n\n就算那一天遇到很多问题，但至少拥有了一个美好的早餐。\n\n\n\n核心习惯对人的影响是显著的。\n\n\n\n只有将有限的时间和精力投入核心习惯，才能形成良性的生活循环，产生高效的复利效应，引领你的人生转变。\n\n## 3步找到你的专属核心习惯\n\n**“成功并不需要做对每一件事情”。**\n\n当你找准你的核心习惯——\n\n你是因为没养成哪个习惯，才导致生活中的一切都失控的，并着力于此养成例行公事之后，自然会“驱动和重塑其他行为模式”。\n\n每一个人的核心习惯不一样。有的是早起，有的是读书，有的是冥想...\n\n那么如何找到适合你的核心习惯呢？\n\n### **1、确定目标和方向** \n\n首先第一步，找方向。\n\n明确自己想要在什么方面进行改进，最好是确定一个当前最急迫的目标。\n\n### 2、列行为，梳理内在关联\n\n定好方向以后，进行第二步，列行为。\n\n比如总是熬夜，是因为玩手机导致你睡得晚，那么为什么会玩手机呢？\n\n是因为你感觉到焦虑，甚至无聊，对信息高刺激的依赖，对大脑及时睡前大量刷视频看文字，睡觉的时候更难平复心绪，反而带着一种更大的空虚和焦虑以及负罪感。\n\n### 3、确定核心习惯\n\n最后一步，定习惯。通过分析行为之间的关联，找出那个在改变之后，就能够带动其他行为的习惯。\n\n所以对熬夜，我定下的原则是，不带手机上床，睡前避免高刺激。\n\n然后找一个让我有动力的事情，比如读历史类书籍。\n\n所以**睡前****读书就是我的核心习惯**，避免晚上持续耍手机，尽量早睡；然后带动我早起，吃健康的食物，制定日计划...\n\n先养成最重要的核心习惯，你会发现在它的带动下，很多问题都会迎刃而解。\n\n在《习惯的力量》中提到，对于很多人来说，**运动是引发广泛变化的核心习惯。**\n\n发现当人们开始养成运动的习惯时，即使是一周一次的运动，他们也会不知不觉改变其它与之无关的行为模式。\n\n通常来说，做运动的人会吃得更香，工作更有效率。运动后大脑分泌的多巴胺是天然的抗压剂，让人心情愉悦，排解压力。\n\n相信我，好的习惯真的会一牵而动全身，让你整个人都变了一个样似的。\n\n就像早起早睡的人能感受到身体日益康健，常常阅读的人能感受到心灵逐渐丰盈。\n\n当自律成为一种本能，它便成了我们的一个习惯、一个爱好。\n\n这样的自律才是真正属于你的人生硕果。\n\n共勉！\n","source":"_posts/真正做到自律的唯一“捷径”.md","raw":"---\ntitle: 真正做到自律的唯一“捷径”\ntags:\n  - 自律\ncategories:\n  - 杂谈\nindex_img: https://img1.baidu.com/it/u=2466575982,2039020913&fm=253&fmt=auto&app=138&f=PNG?w=889&h=500\nabbrlink: 1679bc2f\ndate: 2023-05-17 21:05:39\n---\n“最初是我们塑造习惯，后来是习惯塑造我们。”\n——奥斯卡·王尔德\n<!--more-->\n\n文章太长不看版：\n\n<p style=\"color:red\">找到最关键的核心习惯，改变就能轻而易举。</p> \n\n##   核心习惯\n\n你会不会受够了糟糕的现状，然后立志改变——不能这样下去了，我要自律！\n\n我们一般的思路是，制定一个完美的计划，然后一股脑开始十几个甚至几十个习惯养成计划：\n\n>早睡早起、不熬夜、运动、关心家人\n>\n>不玩手机，冥想，不拖延，不抱怨 \n>\n>健康饮食、醒来喝一杯水、每天喝8杯水\n>\n>日行一善、护肤、敷面膜......\n\n我有时候打开时光序的习惯库，每一个看起来都非常有用，于是恨不得把每一个都添加上😂\n\n但是，正确≠必要。\n\n如果强行一次性完成十几二十个习惯，难度真的好大😭\n\n而且中途几次没坚持下去，就会破罐子破摔，间歇性自律，持续性摆烂...\n\n不过好消息是，只需要培养一个核心习惯，作为整体的生活状态就会往更加规律的方向运作。\n\n\n\n**什么是「核心习惯」？**\n\n查尔斯·都希格在《习惯的力量》一书中提出了这一理念。\n\n它指的是最关键的，能起带头作用的习惯。\n\n**某些或者某个习惯，一旦将其改变，就会自发地引起连锁反应，进而重塑生活/学习方式。**\n\n像多米诺骨牌那样，只要用力推到最前面那个，他会产生连带效应影响后面的骨牌。\n\n![图片](https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/640.jpeg)\n\n以上图为例，核心问题是玩手机，那么只要养成“睡前不玩手机”这个核心习惯，那么熬夜失眠、晚起、精神状态差就会得到极大缓解。\n\n“核心习惯能启动一个进程，久而久之将改变一切。”\n\n**只需要优先培养你的核心习惯，切实的付诸行动开始改变，就是找到了自律的捷径。**\n\n这个认知对我来说太重要了。\n\n曾经我也是，长期困扰我的坏习惯就是：\n\n*整体精神萎靡，专注力差，总是玩手机；*\n\n*做事拖延，又因为拖延导致焦虑压力大;*\n\n*花钱大手大脚，在减肥和吃吃喝喝中反复...*\n\n<img src=\"https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/640.gif\" class=\"img-center\">\n\n\n\n仔细想想，似乎每次只要早起，我一天的状态都会很不错，而且因为生物钟影响，无论几点睡，我睡7个小时候就会醒过来。\n\n所以我给自己的核心计划就是，**晚上11点睡觉，用早睡带动早起**。\n\n为了保证这个核心习惯养成，我制定了睡前和早起后的routine——\n\n晚上10点泡脚/拉伸，看完半小时书开始准备入睡；\n\n第二天6点早起，1小时做运动洗个热水澡、1小时边做早餐边听网课，8点准时出门。\n\n\n\n当早上完成那么多事情，然后安静地迎接太阳，那种感觉真的很爽。\n\n就算那一天遇到很多问题，但至少拥有了一个美好的早餐。\n\n\n\n核心习惯对人的影响是显著的。\n\n\n\n只有将有限的时间和精力投入核心习惯，才能形成良性的生活循环，产生高效的复利效应，引领你的人生转变。\n\n## 3步找到你的专属核心习惯\n\n**“成功并不需要做对每一件事情”。**\n\n当你找准你的核心习惯——\n\n你是因为没养成哪个习惯，才导致生活中的一切都失控的，并着力于此养成例行公事之后，自然会“驱动和重塑其他行为模式”。\n\n每一个人的核心习惯不一样。有的是早起，有的是读书，有的是冥想...\n\n那么如何找到适合你的核心习惯呢？\n\n### **1、确定目标和方向** \n\n首先第一步，找方向。\n\n明确自己想要在什么方面进行改进，最好是确定一个当前最急迫的目标。\n\n### 2、列行为，梳理内在关联\n\n定好方向以后，进行第二步，列行为。\n\n比如总是熬夜，是因为玩手机导致你睡得晚，那么为什么会玩手机呢？\n\n是因为你感觉到焦虑，甚至无聊，对信息高刺激的依赖，对大脑及时睡前大量刷视频看文字，睡觉的时候更难平复心绪，反而带着一种更大的空虚和焦虑以及负罪感。\n\n### 3、确定核心习惯\n\n最后一步，定习惯。通过分析行为之间的关联，找出那个在改变之后，就能够带动其他行为的习惯。\n\n所以对熬夜，我定下的原则是，不带手机上床，睡前避免高刺激。\n\n然后找一个让我有动力的事情，比如读历史类书籍。\n\n所以**睡前****读书就是我的核心习惯**，避免晚上持续耍手机，尽量早睡；然后带动我早起，吃健康的食物，制定日计划...\n\n先养成最重要的核心习惯，你会发现在它的带动下，很多问题都会迎刃而解。\n\n在《习惯的力量》中提到，对于很多人来说，**运动是引发广泛变化的核心习惯。**\n\n发现当人们开始养成运动的习惯时，即使是一周一次的运动，他们也会不知不觉改变其它与之无关的行为模式。\n\n通常来说，做运动的人会吃得更香，工作更有效率。运动后大脑分泌的多巴胺是天然的抗压剂，让人心情愉悦，排解压力。\n\n相信我，好的习惯真的会一牵而动全身，让你整个人都变了一个样似的。\n\n就像早起早睡的人能感受到身体日益康健，常常阅读的人能感受到心灵逐渐丰盈。\n\n当自律成为一种本能，它便成了我们的一个习惯、一个爱好。\n\n这样的自律才是真正属于你的人生硕果。\n\n共勉！\n","slug":"真正做到自律的唯一“捷径”","published":1,"updated":"2023-05-17T13:37:05.446Z","_id":"clhrqwjgd00001q6qckoa0ycz","comments":1,"layout":"post","photos":[],"link":"","content":"<p>“最初是我们塑造习惯，后来是习惯塑造我们。”<br>——奥斯卡·王尔德</p>\n<span id=\"more\"></span>\n\n<p>文章太长不看版：</p>\n<p style=\"color:red\">找到最关键的核心习惯，改变就能轻而易举。</p> \n\n<h2 id=\"核心习惯\"><a href=\"#核心习惯\" class=\"headerlink\" title=\"核心习惯\"></a>核心习惯</h2><p>你会不会受够了糟糕的现状，然后立志改变——不能这样下去了，我要自律！</p>\n<p>我们一般的思路是，制定一个完美的计划，然后一股脑开始十几个甚至几十个习惯养成计划：</p>\n<blockquote>\n<p>早睡早起、不熬夜、运动、关心家人</p>\n<p>不玩手机，冥想，不拖延，不抱怨 </p>\n<p>健康饮食、醒来喝一杯水、每天喝8杯水</p>\n<p>日行一善、护肤、敷面膜……</p>\n</blockquote>\n<p>我有时候打开时光序的习惯库，每一个看起来都非常有用，于是恨不得把每一个都添加上😂</p>\n<p>但是，正确≠必要。</p>\n<p>如果强行一次性完成十几二十个习惯，难度真的好大😭</p>\n<p>而且中途几次没坚持下去，就会破罐子破摔，间歇性自律，持续性摆烂…</p>\n<p>不过好消息是，只需要培养一个核心习惯，作为整体的生活状态就会往更加规律的方向运作。</p>\n<p><strong>什么是「核心习惯」？</strong></p>\n<p>查尔斯·都希格在《习惯的力量》一书中提出了这一理念。</p>\n<p>它指的是最关键的，能起带头作用的习惯。</p>\n<p><strong>某些或者某个习惯，一旦将其改变，就会自发地引起连锁反应，进而重塑生活/学习方式。</strong></p>\n<p>像多米诺骨牌那样，只要用力推到最前面那个，他会产生连带效应影响后面的骨牌。</p>\n<p><img src=\"https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/640.jpeg\" alt=\"图片\"></p>\n<p>以上图为例，核心问题是玩手机，那么只要养成“睡前不玩手机”这个核心习惯，那么熬夜失眠、晚起、精神状态差就会得到极大缓解。</p>\n<p>“核心习惯能启动一个进程，久而久之将改变一切。”</p>\n<p><strong>只需要优先培养你的核心习惯，切实的付诸行动开始改变，就是找到了自律的捷径。</strong></p>\n<p>这个认知对我来说太重要了。</p>\n<p>曾经我也是，长期困扰我的坏习惯就是：</p>\n<p><em>整体精神萎靡，专注力差，总是玩手机；</em></p>\n<p><em>做事拖延，又因为拖延导致焦虑压力大;</em></p>\n<p><em>花钱大手大脚，在减肥和吃吃喝喝中反复…</em></p>\n<img src=\"https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/640.gif\" class=\"img-center\">\n\n\n\n<p>仔细想想，似乎每次只要早起，我一天的状态都会很不错，而且因为生物钟影响，无论几点睡，我睡7个小时候就会醒过来。</p>\n<p>所以我给自己的核心计划就是，<strong>晚上11点睡觉，用早睡带动早起</strong>。</p>\n<p>为了保证这个核心习惯养成，我制定了睡前和早起后的routine——</p>\n<p>晚上10点泡脚/拉伸，看完半小时书开始准备入睡；</p>\n<p>第二天6点早起，1小时做运动洗个热水澡、1小时边做早餐边听网课，8点准时出门。</p>\n<p>当早上完成那么多事情，然后安静地迎接太阳，那种感觉真的很爽。</p>\n<p>就算那一天遇到很多问题，但至少拥有了一个美好的早餐。</p>\n<p>核心习惯对人的影响是显著的。</p>\n<p>只有将有限的时间和精力投入核心习惯，才能形成良性的生活循环，产生高效的复利效应，引领你的人生转变。</p>\n<h2 id=\"3步找到你的专属核心习惯\"><a href=\"#3步找到你的专属核心习惯\" class=\"headerlink\" title=\"3步找到你的专属核心习惯\"></a>3步找到你的专属核心习惯</h2><p><strong>“成功并不需要做对每一件事情”。</strong></p>\n<p>当你找准你的核心习惯——</p>\n<p>你是因为没养成哪个习惯，才导致生活中的一切都失控的，并着力于此养成例行公事之后，自然会“驱动和重塑其他行为模式”。</p>\n<p>每一个人的核心习惯不一样。有的是早起，有的是读书，有的是冥想…</p>\n<p>那么如何找到适合你的核心习惯呢？</p>\n<h3 id=\"1、确定目标和方向\"><a href=\"#1、确定目标和方向\" class=\"headerlink\" title=\"1、确定目标和方向\"></a><strong>1、确定目标和方向</strong></h3><p>首先第一步，找方向。</p>\n<p>明确自己想要在什么方面进行改进，最好是确定一个当前最急迫的目标。</p>\n<h3 id=\"2、列行为，梳理内在关联\"><a href=\"#2、列行为，梳理内在关联\" class=\"headerlink\" title=\"2、列行为，梳理内在关联\"></a>2、列行为，梳理内在关联</h3><p>定好方向以后，进行第二步，列行为。</p>\n<p>比如总是熬夜，是因为玩手机导致你睡得晚，那么为什么会玩手机呢？</p>\n<p>是因为你感觉到焦虑，甚至无聊，对信息高刺激的依赖，对大脑及时睡前大量刷视频看文字，睡觉的时候更难平复心绪，反而带着一种更大的空虚和焦虑以及负罪感。</p>\n<h3 id=\"3、确定核心习惯\"><a href=\"#3、确定核心习惯\" class=\"headerlink\" title=\"3、确定核心习惯\"></a>3、确定核心习惯</h3><p>最后一步，定习惯。通过分析行为之间的关联，找出那个在改变之后，就能够带动其他行为的习惯。</p>\n<p>所以对熬夜，我定下的原则是，不带手机上床，睡前避免高刺激。</p>\n<p>然后找一个让我有动力的事情，比如读历史类书籍。</p>\n<p>所以<strong>睡前****读书就是我的核心习惯</strong>，避免晚上持续耍手机，尽量早睡；然后带动我早起，吃健康的食物，制定日计划…</p>\n<p>先养成最重要的核心习惯，你会发现在它的带动下，很多问题都会迎刃而解。</p>\n<p>在《习惯的力量》中提到，对于很多人来说，<strong>运动是引发广泛变化的核心习惯。</strong></p>\n<p>发现当人们开始养成运动的习惯时，即使是一周一次的运动，他们也会不知不觉改变其它与之无关的行为模式。</p>\n<p>通常来说，做运动的人会吃得更香，工作更有效率。运动后大脑分泌的多巴胺是天然的抗压剂，让人心情愉悦，排解压力。</p>\n<p>相信我，好的习惯真的会一牵而动全身，让你整个人都变了一个样似的。</p>\n<p>就像早起早睡的人能感受到身体日益康健，常常阅读的人能感受到心灵逐渐丰盈。</p>\n<p>当自律成为一种本能，它便成了我们的一个习惯、一个爱好。</p>\n<p>这样的自律才是真正属于你的人生硕果。</p>\n<p>共勉！</p>\n","site":{"data":{}},"excerpt":"<p>“最初是我们塑造习惯，后来是习惯塑造我们。”<br>——奥斯卡·王尔德</p>","more":"<p>文章太长不看版：</p>\n<p style=\"color:red\">找到最关键的核心习惯，改变就能轻而易举。</p> \n\n<h2 id=\"核心习惯\"><a href=\"#核心习惯\" class=\"headerlink\" title=\"核心习惯\"></a>核心习惯</h2><p>你会不会受够了糟糕的现状，然后立志改变——不能这样下去了，我要自律！</p>\n<p>我们一般的思路是，制定一个完美的计划，然后一股脑开始十几个甚至几十个习惯养成计划：</p>\n<blockquote>\n<p>早睡早起、不熬夜、运动、关心家人</p>\n<p>不玩手机，冥想，不拖延，不抱怨 </p>\n<p>健康饮食、醒来喝一杯水、每天喝8杯水</p>\n<p>日行一善、护肤、敷面膜……</p>\n</blockquote>\n<p>我有时候打开时光序的习惯库，每一个看起来都非常有用，于是恨不得把每一个都添加上😂</p>\n<p>但是，正确≠必要。</p>\n<p>如果强行一次性完成十几二十个习惯，难度真的好大😭</p>\n<p>而且中途几次没坚持下去，就会破罐子破摔，间歇性自律，持续性摆烂…</p>\n<p>不过好消息是，只需要培养一个核心习惯，作为整体的生活状态就会往更加规律的方向运作。</p>\n<p><strong>什么是「核心习惯」？</strong></p>\n<p>查尔斯·都希格在《习惯的力量》一书中提出了这一理念。</p>\n<p>它指的是最关键的，能起带头作用的习惯。</p>\n<p><strong>某些或者某个习惯，一旦将其改变，就会自发地引起连锁反应，进而重塑生活/学习方式。</strong></p>\n<p>像多米诺骨牌那样，只要用力推到最前面那个，他会产生连带效应影响后面的骨牌。</p>\n<p><img src=\"https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/640.jpeg\" alt=\"图片\"></p>\n<p>以上图为例，核心问题是玩手机，那么只要养成“睡前不玩手机”这个核心习惯，那么熬夜失眠、晚起、精神状态差就会得到极大缓解。</p>\n<p>“核心习惯能启动一个进程，久而久之将改变一切。”</p>\n<p><strong>只需要优先培养你的核心习惯，切实的付诸行动开始改变，就是找到了自律的捷径。</strong></p>\n<p>这个认知对我来说太重要了。</p>\n<p>曾经我也是，长期困扰我的坏习惯就是：</p>\n<p><em>整体精神萎靡，专注力差，总是玩手机；</em></p>\n<p><em>做事拖延，又因为拖延导致焦虑压力大;</em></p>\n<p><em>花钱大手大脚，在减肥和吃吃喝喝中反复…</em></p>\n<img src=\"https://zibbo-blog.oss-cn-beijing.aliyuncs.com/blog/640.gif\" class=\"img-center\">\n\n\n\n<p>仔细想想，似乎每次只要早起，我一天的状态都会很不错，而且因为生物钟影响，无论几点睡，我睡7个小时候就会醒过来。</p>\n<p>所以我给自己的核心计划就是，<strong>晚上11点睡觉，用早睡带动早起</strong>。</p>\n<p>为了保证这个核心习惯养成，我制定了睡前和早起后的routine——</p>\n<p>晚上10点泡脚/拉伸，看完半小时书开始准备入睡；</p>\n<p>第二天6点早起，1小时做运动洗个热水澡、1小时边做早餐边听网课，8点准时出门。</p>\n<p>当早上完成那么多事情，然后安静地迎接太阳，那种感觉真的很爽。</p>\n<p>就算那一天遇到很多问题，但至少拥有了一个美好的早餐。</p>\n<p>核心习惯对人的影响是显著的。</p>\n<p>只有将有限的时间和精力投入核心习惯，才能形成良性的生活循环，产生高效的复利效应，引领你的人生转变。</p>\n<h2 id=\"3步找到你的专属核心习惯\"><a href=\"#3步找到你的专属核心习惯\" class=\"headerlink\" title=\"3步找到你的专属核心习惯\"></a>3步找到你的专属核心习惯</h2><p><strong>“成功并不需要做对每一件事情”。</strong></p>\n<p>当你找准你的核心习惯——</p>\n<p>你是因为没养成哪个习惯，才导致生活中的一切都失控的，并着力于此养成例行公事之后，自然会“驱动和重塑其他行为模式”。</p>\n<p>每一个人的核心习惯不一样。有的是早起，有的是读书，有的是冥想…</p>\n<p>那么如何找到适合你的核心习惯呢？</p>\n<h3 id=\"1、确定目标和方向\"><a href=\"#1、确定目标和方向\" class=\"headerlink\" title=\"1、确定目标和方向\"></a><strong>1、确定目标和方向</strong></h3><p>首先第一步，找方向。</p>\n<p>明确自己想要在什么方面进行改进，最好是确定一个当前最急迫的目标。</p>\n<h3 id=\"2、列行为，梳理内在关联\"><a href=\"#2、列行为，梳理内在关联\" class=\"headerlink\" title=\"2、列行为，梳理内在关联\"></a>2、列行为，梳理内在关联</h3><p>定好方向以后，进行第二步，列行为。</p>\n<p>比如总是熬夜，是因为玩手机导致你睡得晚，那么为什么会玩手机呢？</p>\n<p>是因为你感觉到焦虑，甚至无聊，对信息高刺激的依赖，对大脑及时睡前大量刷视频看文字，睡觉的时候更难平复心绪，反而带着一种更大的空虚和焦虑以及负罪感。</p>\n<h3 id=\"3、确定核心习惯\"><a href=\"#3、确定核心习惯\" class=\"headerlink\" title=\"3、确定核心习惯\"></a>3、确定核心习惯</h3><p>最后一步，定习惯。通过分析行为之间的关联，找出那个在改变之后，就能够带动其他行为的习惯。</p>\n<p>所以对熬夜，我定下的原则是，不带手机上床，睡前避免高刺激。</p>\n<p>然后找一个让我有动力的事情，比如读历史类书籍。</p>\n<p>所以<strong>睡前****读书就是我的核心习惯</strong>，避免晚上持续耍手机，尽量早睡；然后带动我早起，吃健康的食物，制定日计划…</p>\n<p>先养成最重要的核心习惯，你会发现在它的带动下，很多问题都会迎刃而解。</p>\n<p>在《习惯的力量》中提到，对于很多人来说，<strong>运动是引发广泛变化的核心习惯。</strong></p>\n<p>发现当人们开始养成运动的习惯时，即使是一周一次的运动，他们也会不知不觉改变其它与之无关的行为模式。</p>\n<p>通常来说，做运动的人会吃得更香，工作更有效率。运动后大脑分泌的多巴胺是天然的抗压剂，让人心情愉悦，排解压力。</p>\n<p>相信我，好的习惯真的会一牵而动全身，让你整个人都变了一个样似的。</p>\n<p>就像早起早睡的人能感受到身体日益康健，常常阅读的人能感受到心灵逐渐丰盈。</p>\n<p>当自律成为一种本能，它便成了我们的一个习惯、一个爱好。</p>\n<p>这样的自律才是真正属于你的人生硕果。</p>\n<p>共勉！</p>"}],"PostAsset":[],"PostCategory":[{"post_id":"clhrpaia30005eq6q5854ap1a","category_id":"clhrpaia50007eq6qcxyt5b2o","_id":"clhrpaiab000heq6qan37acjx"},{"post_id":"clhrpaia40006eq6qatz27ph6","category_id":"clhrpaia9000deq6q9w8uca4h","_id":"clhrpaiae000meq6qhqb2a77r"},{"post_id":"clhrpaia60008eq6q3g7541dg","category_id":"clhrpaiab000ieq6q268vge0b","_id":"clhrpaiag000seq6qbn05bhw6"},{"post_id":"clhrpaia7000beq6qahjm434s","category_id":"clhrpaiae000neq6q44zqdvay","_id":"clhrpaiak0011eq6qd2nk59kf"},{"post_id":"clhrpaiah000veq6q21eabb8c","category_id":"clhrpaia50007eq6qcxyt5b2o","_id":"clhrpaiam0015eq6q4er4cmd5"},{"post_id":"clhrpaia8000ceq6qg1ubg28l","category_id":"clhrpaiab000ieq6q268vge0b","_id":"clhrpaian0019eq6q8rmjfpip"},{"post_id":"clhrpaia9000feq6qhqfkfloc","category_id":"clhrpaiae000neq6q44zqdvay","_id":"clhrpaiao001ceq6q22plgcf4"},{"post_id":"clhrpaiaa000geq6q3k8rcasg","category_id":"clhrpaiam0017eq6q2f13f649","_id":"clhrpaiat001keq6qbiq399nn"},{"post_id":"clhrpaiaq001geq6qhigj7m6v","category_id":"clhrpaiam0017eq6q2f13f649","_id":"clhrpaiav001peq6qaakk6wz5"},{"post_id":"clhrpaiad000leq6qc4323vtl","category_id":"clhrpaiam0017eq6q2f13f649","_id":"clhrpaiaw001seq6q3oo05tik"},{"post_id":"clhrpaiaq001ieq6q0rr06m4r","category_id":"clhrpaiam0017eq6q2f13f649","_id":"clhrpaiay001veq6q99bf28bl"},{"post_id":"clhrpaiaf000req6qh4lyawk1","category_id":"clhrpaiat001jeq6q22xn1ruj","_id":"clhrpaiaz001yeq6qdlfi8mjz"},{"post_id":"clhrpaiaj000yeq6q413gbps8","category_id":"clhrpaiam0017eq6q2f13f649","_id":"clhrpaib00023eq6q7zak2w0b"},{"post_id":"clhrpaiao001beq6qbznyhg4d","category_id":"clhrpaiat001jeq6q22xn1ruj","_id":"clhrpaib00025eq6q57ly2mi4"},{"post_id":"clhrpaiao001deq6q1i9014e1","category_id":"clhrpaiat001jeq6q22xn1ruj","_id":"clhrpaib10028eq6qg1ed5g1i"},{"post_id":"clhrqwjgd00001q6qckoa0ycz","category_id":"clhrpaiam0017eq6q2f13f649","_id":"clhrqwjgp00021q6qd0xren5i"}],"PostTag":[{"post_id":"clhrpai9w0001eq6q1kxv93a3","tag_id":"clhrpaia20004eq6q487v7785","_id":"clhrpaia7000aeq6q5dk0e61g"},{"post_id":"clhrpaia30005eq6q5854ap1a","tag_id":"clhrpaia70009eq6q4cgocxf3","_id":"clhrpaiaf000qeq6q3qj14rhn"},{"post_id":"clhrpaia30005eq6q5854ap1a","tag_id":"clhrpaia9000eeq6qfbrj2ikb","_id":"clhrpaiag000teq6qgq0sfhdg"},{"post_id":"clhrpaia30005eq6q5854ap1a","tag_id":"clhrpaiab000jeq6qcrnu6hi7","_id":"clhrpaiaj000xeq6qgtm9fbho"},{"post_id":"clhrpaia40006eq6qatz27ph6","tag_id":"clhrpaiae000oeq6q9iuy2n56","_id":"clhrpaiak000zeq6qacke0yvx"},{"post_id":"clhrpaia60008eq6q3g7541dg","tag_id":"clhrpaiaj000weq6qfsqvbb4l","_id":"clhrpaiam0016eq6qfpay7ua8"},{"post_id":"clhrpaia7000beq6qahjm434s","tag_id":"clhrpaial0013eq6q4vpf00no","_id":"clhrpaiaq001heq6qccri8fpg"},{"post_id":"clhrpaia7000beq6qahjm434s","tag_id":"clhrpaian001aeq6q0vaqhy9a","_id":"clhrpaiat001leq6q56034qax"},{"post_id":"clhrpaia8000ceq6qg1ubg28l","tag_id":"clhrpaiap001feq6q9cx44u93","_id":"clhrpaiay001weq6q8v9u3z29"},{"post_id":"clhrpaia8000ceq6qg1ubg28l","tag_id":"clhrpaiau001neq6qehcc8zyn","_id":"clhrpaiaz001zeq6q39uie772"},{"post_id":"clhrpaia9000feq6qhqfkfloc","tag_id":"clhrpaial0013eq6q4vpf00no","_id":"clhrpaiaz0021eq6q9rws0dqo"},{"post_id":"clhrpaiaa000geq6q3k8rcasg","tag_id":"clhrpaiaz0020eq6q24tr67im","_id":"clhrpaib00026eq6qe2uzefad"},{"post_id":"clhrpaiaf000req6qh4lyawk1","tag_id":"clhrpaib00024eq6q11jf0jgu","_id":"clhrpaib1002aeq6qbxh4flaj"},{"post_id":"clhrpaiaf000req6qh4lyawk1","tag_id":"clhrpaib10027eq6qdpi5ckzh","_id":"clhrpaib2002beq6qhcg68wg2"},{"post_id":"clhrpaiaj000yeq6q413gbps8","tag_id":"clhrpaiaz0020eq6q24tr67im","_id":"clhrpaib2002deq6q28oscoq1"},{"post_id":"clhrpaiaq001geq6qhigj7m6v","tag_id":"clhrpaib2002ceq6q684u8psl","_id":"clhrpaib3002feq6q5gg4hs4g"},{"post_id":"clhrpaiax001ueq6q7e1xcq1o","tag_id":"clhrpaib3002eeq6q5mfyenp7","_id":"clhrpaib4002geq6qcys45mgj"},{"post_id":"clhrqwjgd00001q6qckoa0ycz","tag_id":"clhrqwjgj00011q6qddcy7qkv","_id":"clhrqwjgq00031q6q3zcf3w2p"}],"Tag":[{"name":"随笔","_id":"clhrpaia20004eq6q487v7785"},{"name":"教程","_id":"clhrpaia70009eq6q4cgocxf3"},{"name":"Docker","_id":"clhrpaia9000eeq6qfbrj2ikb"},{"name":"运维","_id":"clhrpaiab000jeq6qcrnu6hi7"},{"name":"开发工具","_id":"clhrpaiae000oeq6q9iuy2n56"},{"name":"Redis","_id":"clhrpaiaj000weq6qfsqvbb4l"},{"name":"博客","_id":"clhrpaial0013eq6q4vpf00no"},{"name":"vuepress","_id":"clhrpaian001aeq6q0vaqhy9a"},{"name":"MySQL","_id":"clhrpaiap001feq6q9cx44u93"},{"name":"存储引擎","_id":"clhrpaiau001neq6qehcc8zyn"},{"name":"杂谈","_id":"clhrpaiaz0020eq6q24tr67im"},{"name":"Hexo","_id":"clhrpaib00024eq6q11jf0jgu"},{"name":"Fluid","_id":"clhrpaib10027eq6qdpi5ckzh"},{"name":"猫咪","_id":"clhrpaib2002ceq6q684u8psl"},{"name":"小说，读书笔记","_id":"clhrpaib3002eeq6q5mfyenp7"},{"name":"自律","_id":"clhrqwjgj00011q6qddcy7qkv"}]}}