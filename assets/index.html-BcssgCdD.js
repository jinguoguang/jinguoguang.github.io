import{_ as e,c as s,a,o as n}from"./app-DKIrdtsV.js";const t={};function l(o,i){return n(),s("div",null,i[0]||(i[0]=[a(`<h2 id="一、前言" tabindex="-1"><a class="header-anchor" href="#一、前言"><span>一、前言</span></a></h2><p>Go语言，也常被称为Golang，是由Google的Robert Griesemer, Rob Pike, 和 Ken Thompson在2007年开始设计和实现的一门编程语言。Go语言在2009年11月公开发布，并且自那时以来持续发展，得到了广泛的采用。</p><p>以下是Go语言的一些关键特点：</p><ul><li>1.简洁的语法：</li></ul><p>Go语言的语法设计受到C语言的影响，但它去除了C语言中一些复杂的特性，如指针运算和类型声明的复杂性，使代码更加清晰和简洁。</p><ul><li>2.内存安全和自动垃圾回收：</li></ul><p>Go提供了内存安全的特性，这意味着它不会出现像C或C++中的某些常见的内存错误。</p><p>它具有自动垃圾回收机制，减少了程序员需要手动管理内存的工作，避免了内存泄漏和其他常见的内存管理问题。</p><ul><li>3.并发支持：</li></ul><p>Go语言内置了对并发的支持，通过Goroutines和Channels，使得编写并发程序变得简单且直观。</p><p>Goroutines是轻量级的线程，可以创建大量的并发执行单元，而Channels提供了一种安全的机制用于Goroutines之间的通信和同步。</p><ul><li>4.编译速度快：</li></ul><p>Go语言的编译速度非常快，这使得开发周期更短，尤其是对于大型项目而言。</p><ul><li>5.静态类型：</li></ul><p>Go是一种静态类型的语言，在编译阶段会进行类型检查，有助于早期发现和预防错误。</p><ul><li>6.丰富的标准库：</li></ul><p>Go提供了功能丰富的标准库，涵盖了网络编程、加密、文本处理、数据库访问等多种领域，这有助于快速构建应用。</p><ul><li>7.跨平台编译：</li></ul><p>Go语言支持跨平台编译，可以很容易地为不同的操作系统和架构生成二进制可执行文件。</p><ul><li>8.网络和系统编程：</li></ul><p>Go语言非常适合用于构建网络服务和系统级别的软件，它的标准库包含了强大的网络编程功能。 Go语言最初设计的目标之一是解决大型项目中的开发效率问题，以及提高代码的可读性和可维护性。它已经被广泛应用于各种场景，包括云计算、微服务架构、DevOps工具、数据管道、网络编程等。</p><h2 id="二、第一个-go-程序" tabindex="-1"><a class="header-anchor" href="#二、第一个-go-程序"><span>二、第一个 Go 程序</span></a></h2><div class="language-go line-numbers-mode" data-highlighter="shiki" data-ext="go" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">package</span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;"> main</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">import</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">fmt</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">func</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> main</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">     /* 这是我的第一个简单的程序 */</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">    fmt</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">Println</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">Hello, World!</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="三、代码分析" tabindex="-1"><a class="header-anchor" href="#三、代码分析"><span>三、代码分析</span></a></h2><p>让我们来看下以上程序的各个部分：</p><ol><li><p>第一行代码<code> package main</code> 定义了包名。你必须在源文件中非注释的第一行指明这个文件属于哪个包，如：package main。package main表示一个可独立执行的程序，每个 Go 应用程序都包含一个名为 main 的包。</p></li><li><p>下一行 <code>import &quot;fmt&quot;</code> 告诉 Go 编译器这个程序需要使用 fmt 包（的函数，或其他元素），fmt 包实现了格式化 IO（输入/输出）的函数。</p></li><li><p>下一行 <code>func main()</code> 是程序开始执行的函数。main 函数是每一个可执行程序所必须包含的，一般来说都是在启动后第一个执行的函数（如果有 init() 函数则会先执行该函数）。</p></li><li><p>下一行<code>/*...*/</code>是注释，在程序执行时将被忽略。单行注释是最常见的注释形式，你可以在任何地方使用以 // 开头的单行注释。多行注释也叫块注释，均已以<code> /*</code> 开头，并以 <code>*/</code> 结尾，且不可以嵌套使用，多行注释一般用于包的文档描述或注释成块的代码片段。</p></li><li><p>下一行 <code>fmt.Println(...)</code> 可以将字符串输出到控制台，并在最后自动增加换行字符 \\n。</p><p>使用 fmt.Print(&quot;hello, world\\n&quot;) 可以得到相同的结果。</p><p>Print 和 Println 这两个函数也支持使用变量，如：fmt.Println(arr)。如果没有特别指定，它们会以默认的打印格式将变量 arr 输出到控制台。</p></li><li><p>当标识符（包括常量、变量、类型、函数名、结构字段等等）以一个大写字母开头，如：Group1，那么使用这种形式的标识符的对象就可以被外部包的代码所使用（客户端程序需要先导入这个包），这被称为导出（像面向对象语言中的 public）；标识符如果以小写字母开头，则对包外是不可见的，但是他们在整个包的内部是可见并且可用的（像面向对象语言中的 protected ）。</p></li></ol>`,26)]))}const r=e(t,[["render",l]]),h=JSON.parse('{"path":"/learn-go/4aycrznt/","title":"Go语言学习-Go语言介绍","lang":"zh-CN","frontmatter":{"title":"Go语言学习-Go语言介绍","createTime":"2024/10/25 09:56:18","excerpt":"Go语言，也常被称为Golang，是由Google的Robert Griesemer, Rob Pike, 和 Ken Thompson在2007年开始设计和实现的一门编程语言。","permalink":"/learn-go/4aycrznt/","description":"一、前言 Go语言，也常被称为Golang，是由Google的Robert Griesemer, Rob Pike, 和 Ken Thompson在2007年开始设计和实现的一门编程语言。Go语言在2009年11月公开发布，并且自那时以来持续发展，得到了广泛的采用。 以下是Go语言的一些关键特点： 1.简洁的语法： Go语言的语法设计受到C语言的影响，...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Go语言学习-Go语言介绍\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-05-08T08:28:50.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://www.zibbo.xyz/learn-go/4aycrznt/"}],["meta",{"property":"og:site_name","content":"程序员飞鱼"}],["meta",{"property":"og:title","content":"Go语言学习-Go语言介绍"}],["meta",{"property":"og:description","content":"一、前言 Go语言，也常被称为Golang，是由Google的Robert Griesemer, Rob Pike, 和 Ken Thompson在2007年开始设计和实现的一门编程语言。Go语言在2009年11月公开发布，并且自那时以来持续发展，得到了广泛的采用。 以下是Go语言的一些关键特点： 1.简洁的语法： Go语言的语法设计受到C语言的影响，..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-05-08T08:28:50.000Z"}],["meta",{"property":"article:modified_time","content":"2025-05-08T08:28:50.000Z"}]]},"readingTime":{"minutes":4.16,"words":1249},"git":{"updatedTime":1746692930000,"contributors":[{"name":"jinguoguang","username":"","email":"1264651321@qq.com","commits":4,"avatar":"https://gravatar.com/avatar/7919acd278b3b51446815c1d3fdc82c39b58b863964693935e4f898f57ff5139?d=retro"}]},"autoDesc":true,"filePathRelative":"notes/Go学习简记/2.Go语言学习-Go语言介绍.md","headers":[]}');export{r as comp,h as data};
