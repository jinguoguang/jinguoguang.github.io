import{_ as i,c as a,a as e,o as n}from"./app-Bu4E2ewP.js";const l={};function t(h,s){return n(),a("div",null,s[0]||(s[0]=[e(`<h2 id="前言" tabindex="-1"><a class="header-anchor" href="#前言"><span>前言</span></a></h2><p>首先来看一段报错，经常写代码的朋友可能会见到类似一下的报错</p><div class="language-log line-numbers-mode" data-highlighter="shiki" data-ext="log" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">***************************</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">APPLICATION FAILED TO START</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">***************************</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">Description:</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">Web server failed to start. Port </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">9908</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> was already in use.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">Action:</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">Identify and stop the process that&#39;s listening on port </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">9908</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> or configure this application to listen on another port.</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>原因分析如下：</p><ul><li>端口冲突（最常见原因） 当前 Spring Boot 应用尝试启动内嵌的 Web 服务器（如 Tomcat、Jetty）时，试图绑定到端口 9908，但该端口已经被另一个进程占用。</li><li>同一应用重复启动 你可能已经运行了一次该 Spring Boot 应用了，没有正常关闭，又尝试再次启动，导致端口仍然被占用。</li><li>其他服务占用了相同端口 操作系统上运行的其他服务或程序（比如数据库、Nginx、Docker 容器等）可能配置为使用 9908 端口。</li><li>未正确释放端口 即使之前的应用已关闭，某些情况下操作系统仍可能短暂保留端口（处于 TIME_WAIT 状态），尤其是在频繁重启时。</li></ul><h2 id="常规操作" tabindex="-1"><a class="header-anchor" href="#常规操作"><span>常规操作</span></a></h2><p>1.查找占用端口的进程</p><ul><li>打开终端或命令行工具。</li><li>执行以下命令：</li></ul><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">netstat</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -ano</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> |</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> findstr</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> :9908</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>获取到占用端口的进程ID（PID）。</li></ul><p>2.终止占用端口的进程 根据上一步获取的PID，执行以下命令来终止进程（将 <code>&lt;PID&gt;</code> 替换为实际的进程ID）：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">taskkill</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> /F</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> /PID</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> &lt;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">PI</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">D</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="代码" tabindex="-1"><a class="header-anchor" href="#代码"><span>代码</span></a></h2><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">chcp</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 65001</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">@echo</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> off</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">setlocal</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> enabledelayedexpansion</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">set</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> /p</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> port=请输入端口号：</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">for</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> /f </span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">tokens=1-5</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> %%a in </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">&#39;netstat -ano ^| find &quot;:%port%&quot;&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> do</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> (</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">    set</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> pid=%%e</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">    taskkill</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> /f</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> /pid</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> !pid!</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">pause</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,14)]))}const d=i(l,[["render",t]]),r=JSON.parse('{"path":"/article/lntr2q63/","title":"根据端口号查杀进程","lang":"zh-CN","frontmatter":{"title":"根据端口号查杀进程","date":"2025/5/12","excerpt":"快速结束占用端口的进程","createTime":"2025/05/12 15:50:08","permalink":"/article/lntr2q63/","description":"前言 首先来看一段报错，经常写代码的朋友可能会见到类似一下的报错 原因分析如下： 端口冲突（最常见原因） 当前 Spring Boot 应用尝试启动内嵌的 Web 服务器（如 Tomcat、Jetty）时，试图绑定到端口 9908，但该端口已经被另一个进程占用。 同一应用重复启动 你可能已经运行了一次该 Spring Boot 应用了，没有正常关闭，又...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"根据端口号查杀进程\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-05-11T16:00:00.000Z\\",\\"dateModified\\":\\"2025-05-29T11:41:59.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://www.zibbo.xyz/article/lntr2q63/"}],["meta",{"property":"og:site_name","content":"程序员飞鱼"}],["meta",{"property":"og:title","content":"根据端口号查杀进程"}],["meta",{"property":"og:description","content":"前言 首先来看一段报错，经常写代码的朋友可能会见到类似一下的报错 原因分析如下： 端口冲突（最常见原因） 当前 Spring Boot 应用尝试启动内嵌的 Web 服务器（如 Tomcat、Jetty）时，试图绑定到端口 9908，但该端口已经被另一个进程占用。 同一应用重复启动 你可能已经运行了一次该 Spring Boot 应用了，没有正常关闭，又..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-05-29T11:41:59.000Z"}],["meta",{"property":"article:published_time","content":"2025-05-11T16:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-05-29T11:41:59.000Z"}]]},"readingTime":{"minutes":1.43,"words":429},"git":{"updatedTime":1748518919000,"contributors":[{"name":"jinguoguang","username":"","email":"1264651321@qq.com","commits":1,"avatar":"https://gravatar.com/avatar/7919acd278b3b51446815c1d3fdc82c39b58b863964693935e4f898f57ff5139?d=retro"}]},"autoDesc":true,"filePathRelative":"1.代码人生/根据端口号查杀进程.bat.md","headers":[],"categoryList":[{"id":"2052d3","sort":1,"name":"代码人生"}]}');export{d as comp,r as data};
