import{_ as i,c as a,a as n,o as e}from"./app-U8EwA-zE.js";const t={};function h(l,s){return e(),a("div",null,s[0]||(s[0]=[n(`<h2 id="java泛型简介" tabindex="-1"><a class="header-anchor" href="#java泛型简介"><span>Java泛型简介</span></a></h2><h2 id="泛型类" tabindex="-1"><a class="header-anchor" href="#泛型类"><span>泛型类</span></a></h2><p>泛型类是有一个或者多个类型变量的类，泛型类中的属性可以<strong>全都不是泛型</strong>，不过一般不会这样做，毕竟类型变量在整个类上定义就是用于指定方法的返回类型以及字段的类型，定义代码如下：</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">public</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> class</span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;"> Animal</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">T</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">    private</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> String</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> name</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">    private</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> T</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> mouth</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    </span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">    public</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> T </span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">getMouth</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(){</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">        return</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> mouth</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    }</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>泛型类可以有多个类型变量：</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">public</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> class</span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;"> Animal</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">T</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">U</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">    private</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> String</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> name</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">    private</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> T</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> mouth</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">    private</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> U</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> eyes</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">    public</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> T </span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">getMouth</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(){</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">        return</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> mouth</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    }</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="泛型接口" tabindex="-1"><a class="header-anchor" href="#泛型接口"><span>泛型接口</span></a></h2><h2 id="泛型方法" tabindex="-1"><a class="header-anchor" href="#泛型方法"><span>泛型方法</span></a></h2><h2 id="泛型通配符" tabindex="-1"><a class="header-anchor" href="#泛型通配符"><span>泛型通配符</span></a></h2><h2 id="泛型上下边界" tabindex="-1"><a class="header-anchor" href="#泛型上下边界"><span>泛型上下边界</span></a></h2><h2 id="泛型的类型擦除" tabindex="-1"><a class="header-anchor" href="#泛型的类型擦除"><span>泛型的类型擦除</span></a></h2><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结"><span>总结</span></a></h2><h2 id="参考" tabindex="-1"><a class="header-anchor" href="#参考"><span>参考</span></a></h2><blockquote><p>1.https://blog.csdn.net/weixin_46041943/article/details/130828459</p><p>2.<a href="https://mp.weixin.qq.com/s/VbkzJb45EPFY3Yu_iSQ25A" target="_blank" rel="noopener noreferrer">一文详解Java泛型设计</a></p></blockquote>`,14)]))}const r=i(t,[["render",h]]),k=JSON.parse('{"path":"/skill/na18a0he/","title":"Java中泛型是怎么回事","lang":"zh-CN","frontmatter":{"createTime":"2024/03/02 20:01:09","title":"Java中泛型是怎么回事","categories":["专业技能"],"excerpt":"在日常开发中，必不可少的会使用到泛型，这个过程中经常会出现类似“为什么这样会编译报错？”，“为什么这个列表无法添加元素？”的问题，也会出现感叹Java的泛型限制太多了很难用的情况。为了更好的使用泛型，就需要更深的了解它，因此本文主要介绍泛型诞生的前世今生，特性，以及著名PECS原则的由来","author":"king","tags":["Java"],"permalink":"/skill/na18a0he/","description":"Java泛型简介 泛型类 泛型类是有一个或者多个类型变量的类，泛型类中的属性可以全都不是泛型，不过一般不会这样做，毕竟类型变量在整个类上定义就是用于指定方法的返回类型以及字段的类型，定义代码如下： 泛型类可以有多个类型变量： 泛型接口 泛型方法 泛型通配符 泛型上下边界 泛型的类型擦除 总结 参考 1.https://blog.csdn.net/wei...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Java中泛型是怎么回事\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-05-09T01:36:26.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"king\\"}]}"],["meta",{"property":"og:url","content":"https://www.zibbo.xyz/skill/na18a0he/"}],["meta",{"property":"og:site_name","content":"程序员飞鱼"}],["meta",{"property":"og:title","content":"Java中泛型是怎么回事"}],["meta",{"property":"og:description","content":"Java泛型简介 泛型类 泛型类是有一个或者多个类型变量的类，泛型类中的属性可以全都不是泛型，不过一般不会这样做，毕竟类型变量在整个类上定义就是用于指定方法的返回类型以及字段的类型，定义代码如下： 泛型类可以有多个类型变量： 泛型接口 泛型方法 泛型通配符 泛型上下边界 泛型的类型擦除 总结 参考 1.https://blog.csdn.net/wei..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-05-09T01:36:26.000Z"}],["meta",{"property":"article:author","content":"king"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:modified_time","content":"2025-05-09T01:36:26.000Z"}]]},"readingTime":{"minutes":1.1,"words":330},"git":{"updatedTime":1746754586000,"contributors":[{"name":"jinguoguang","username":"","email":"1264651321@qq.com","commits":6,"avatar":"https://gravatar.com/avatar/7919acd278b3b51446815c1d3fdc82c39b58b863964693935e4f898f57ff5139?d=retro"}]},"autoDesc":true,"filePathRelative":"notes/专业技能/Java/基础/Java泛型详解.md","headers":[]}');export{r as comp,k as data};
